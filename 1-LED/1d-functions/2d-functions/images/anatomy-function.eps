%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: anatomy-function.dvi
%%CreationDate: Sat Jun 18 07:42:42 2016
%%BoundingBox: -22 -1874 2829 721
%%DocumentFonts: DejaVuSansMono LinLibertineTI LinLibertineT
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o anatomy-function.eps anatomy-function.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.06.18:0742
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: dejavumono_t1-type1.enc 0 0
% THIS FILE WAS AUTOMATICALLY GENERATED -- DO NOT EDIT

%%AutoEnc_ai7sfw4ev2rw3jfdy46mgxdj6f
% Encoding created by otftotfm on Sun Sep 22 17:45:43 2013
% Command line follows encoding
/AutoEnc_ai7sfw4ev2rw3jfdy46mgxdj6f [
%00
  /grave /acute /circumflex /tilde /dieresis /hungarumlaut /ring /caron
  /breve /macron /dotaccent /cedilla /ogonek /quotesinglbase /guilsinglleft /guilsinglright
%10
  /quotedblleft /quotedblright /quotedblbase /guillemotleft /guillemotright /hyphen /emdash /.notdef
  /.notdef /dotlessi /dotlessj /.notdef /fi /fl /.notdef /.notdef
%20
  /uni2423 /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
  /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
%30
  /zero /one /two /three /four /five /six /seven
  /eight /nine /colon /semicolon /less /equal /greater /question
%40
  /at /A /B /C /D /E /F /G
  /H /I /J /K /L /M /N /O
%50
  /P /Q /R /S /T /U /V /W
  /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
%60
  /quoteleft /a /b /c /d /e /f /g
  /h /i /j /k /l /m /n /o
%70
  /p /q /r /s /t /u /v /w
  /x /y /z /braceleft /bar /braceright /asciitilde /hyphen
%80
  /Abreve /Aogonek /Cacute /Ccaron /Dcaron /Ecaron /Eogonek /Gbreve
  /Lacute /Lcaron /Lslash /Nacute /Ncaron /Eng /Ohungarumlaut /Racute
%90
  /Rcaron /Sacute /Scaron /Scedilla /Tcaron /Tcommaaccent /Uhungarumlaut /Uring
  /Ydieresis /Zacute /Zcaron /Zdotaccent /IJ /Idotaccent /dcroat /section
%A0
  /abreve /aogonek /cacute /ccaron /dcaron /ecaron /eogonek /gbreve
  /lacute /lcaron /lslash /nacute /ncaron /eng /ohungarumlaut /racute
%B0
  /rcaron /sacute /scaron /scedilla /tcaron /tcommaaccent /uhungarumlaut /uring
  /ydieresis /zacute /zcaron /zdotaccent /ij /exclamdown /questiondown /sterling
%C0
  /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
  /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
%D0
  /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /OE
  /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /.notdef
%E0
  /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
  /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
%F0
  /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /oe
  /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /germandbls
] def
% Command line: 'otftotfm --no-default-ligkern --encoding=fontools_t1 --pl
% --map-file=DejaVuSansMono.map --no-updmap --no-type1
% --coding-scheme=EXTENDED TEX FONT ENCODING - LATIN
% DejaVuSansMono-BoldOblique.ttf DejaVuSansMono-BoldOblique-tlf-t1'

%%EndProcSet
%%BeginProcSet: lbtn_7grukw.enc 0 0
% THIS FILE WAS AUTOMATICALLY GENERATED -- DO NOT EDIT

%%AutoEnc_7grukw4ftfgbx23ssythacmksg
% Encoding created by otftotfm on Mon Nov 26 14:24:44 2012
% Command line follows encoding
/AutoEnc_7grukw4ftfgbx23ssythacmksg [
%00
  /grave /acute /circumflex /tilde /dieresis /hungarumlaut /ring /caron
  /breve /macron /dotaccent /cedilla /ogonek /quotesinglbase /guilsinglleft /guilsinglright
%10
  /quotedblleft /quotedblright /quotedblbase /guillemotleft /guillemotright /endash /emdash /.notdef
  /perthousandzero /dotlessi /uni0237 /f_i /f_f_i /f_f /f_l /f_f_l
%20
  /.notdef /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
  /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
%30
  /zero /one /two /three /four /five /six /seven
  /eight /nine /colon /semicolon /less /equal /greater /question
%40
  /at /A /B /C /D /E /F /G
  /H /I /J /K /L /M /N /O
%50
  /P /Q /R /S /T /U /V /W
  /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
%60
  /quoteleft /a /b /c /d /e /f /g
  /h /i /j /k /l /m /n /o
%70
  /p /q /r /s /t /u /v /w
  /x /y /z /braceleft /bar /braceright /asciitilde /hyphen
%80
  /Abreve /Aogonek /Cacute /Ccaron /Dcaron /Ecaron /Eogonek /Gbreve
  /Lacute /Lcaron /Lslash /Nacute /Ncaron /Eng /Ohungarumlaut /Racute
%90
  /Rcaron /Sacute /Scaron /Scedilla /Tcaron /Tcedilla /Uhungarumlaut /Uring
  /Ydieresis /Zacute /Zcaron /Zdotaccent /IJ /Idotaccent /dcroat /section
%A0
  /abreve /aogonek /cacute /ccaron /dcaron /ecaron /eogonek /gbreve
  /lacute /lcaron /lslash /nacute /ncaron /eng /ohungarumlaut /racute
%B0
  /rcaron /sacute /scaron /scedilla /tcaron /tcedilla /uhungarumlaut /uring
  /ydieresis /zacute /zcaron /zdotaccent /ij /exclamdown /questiondown /sterling
%C0
  /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
  /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
%D0
  /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /OE
  /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /.notdef
%E0
  /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
  /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
%F0
  /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /oe
  /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /germandbls
] def
% Command line: 'otftotfm --automatic --encoding=fontools_t1
% --tfm-directory=texmf/fonts/tfm/public/libertine
% --vf-directory=texmf/fonts/vf/public/libertine
% --pl-directory=texmf/fonts/pl/public/libertine
% --vpl-directory=texmf/fonts/vpl/public/libertine
% --type1-directory=texmf/fonts/type1/public/libertine
% --truetype-directory=texmf/fonts/truetype/public/libertine
% --type42-directory=texmf/fonts/type42/public/libertine
% --encoding-directory=texmf/fonts/enc/dvips/public
% --map-file=texmf/fonts/map/dvips/public/LinuxLibertineT.map --no-updmap
% --coding-scheme=EXTENDED TEX FONT ENCODING - LATIN --feature=kern
% --feature=liga --feature=lnum --feature=tnum LinLibertine530_RI.otf
% LinLibertineTI-tlf-t1'

%%EndProcSet
%%BeginProcSet: lbtn_76gpa5.enc 0 0
% THIS FILE WAS AUTOMATICALLY GENERATED -- DO NOT EDIT

%%AutoEnc_76gpa573ui462u7ov2a5iiyo2h
% Encoding created by otftotfm on Mon Nov 26 14:24:48 2012
% Command line follows encoding
/AutoEnc_76gpa573ui462u7ov2a5iiyo2h [
%00
  /grave /acute /circumflex /tilde /dieresis /hungarumlaut /ring /caron
  /breve /macron /dotaccent /cedilla /ogonek /quotesinglbase /guilsinglleft /guilsinglright
%10
  /quotedblleft /quotedblright /quotedblbase /guillemotleft /guillemotright /endash /emdash /.notdef
  /perthousandzero /dotlessi /dotlessj /f_i /f_f_i /f_f /f_l /f_f_l
%20
  /uni2423 /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
  /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
%30
  /zero /one /two /three /four /five /six /seven
  /eight /nine /colon /semicolon /less /equal /greater /question
%40
  /at /A /B /C /D /E /F /G
  /H /I /J /K /L /M /N /O
%50
  /P /Q /R /S /T /U /V /W
  /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
%60
  /quoteleft /a /b /c /d /e /f /g
  /h /i /j /k /l /m /n /o
%70
  /p /q /r /s /t /u /v /w
  /x /y /z /braceleft /bar /braceright /asciitilde /hyphen
%80
  /Abreve /Aogonek /Cacute /Ccaron /Dcaron /Ecaron /Eogonek /Gbreve
  /Lacute /Lcaron /Lslash /Nacute /Ncaron /Eng /Ohungarumlaut /Racute
%90
  /Rcaron /Sacute /Scaron /Scedilla /Tcaron /Tcedilla /Uhungarumlaut /Uring
  /Ydieresis /Zacute /Zcaron /Zdotaccent /IJ /Idotaccent /dcroat /section
%A0
  /abreve /aogonek /cacute /ccaron /dcaron /ecaron /eogonek /gbreve
  /lacute /lcaron /lslash /nacute /ncaron /eng /ohungarumlaut /racute
%B0
  /rcaron /sacute /scaron /scedilla /tcaron /tcedilla /uhungarumlaut /uring
  /ydieresis /zacute /zcaron /zdotaccent /ij /exclamdown /questiondown /sterling
%C0
  /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
  /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
%D0
  /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /OE
  /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /.notdef
%E0
  /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
  /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
%F0
  /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /oe
  /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /germandbls
] def
% Command line: 'otftotfm --automatic --encoding=fontools_t1
% --tfm-directory=texmf/fonts/tfm/public/libertine
% --vf-directory=texmf/fonts/vf/public/libertine
% --pl-directory=texmf/fonts/pl/public/libertine
% --vpl-directory=texmf/fonts/vpl/public/libertine
% --type1-directory=texmf/fonts/type1/public/libertine
% --truetype-directory=texmf/fonts/truetype/public/libertine
% --type42-directory=texmf/fonts/type42/public/libertine
% --encoding-directory=texmf/fonts/enc/dvips/public
% --map-file=texmf/fonts/map/dvips/public/LinuxLibertineT.map --no-updmap
% --coding-scheme=EXTENDED TEX FONT ENCODING - LATIN --feature=kern
% --feature=liga --feature=lnum --feature=tnum LinLibertine530_R.otf
% LinLibertineT-tlf-t1'

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: LinLibertineT
%!PS-AdobeFont-1.0: LinLibertineT 5.3.0
%%Title: LinLibertineT
%Version: 5.3.0
%%CreationDate: Mon Nov 26 20:39:11 2012
%%Creator: Bob Tennent
%Copyright: Linux Libertine by Philipp H. Poll,
%Copyright: Open Font under Terms of following Free Software Licenses:
%Copyright: GPL (General Public License) with font-exception and OFL
%Copyright: (Open Font License).
%Copyright: Created with FontForge (http://fontforge.sf.net)
%Copyright: Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
%Copyright: 2011,2012
% Generated by FontForge 20110222 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /LinLibertineT def
/FontBBox {-1082 -257 6171 1125 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (5.3.0) readonly def
/Notice (Linux Libertine by Philipp H. Poll,\012Open Font under Terms of following Free Software Licenses:\012GPL \050General Public License\051 with font-exception and OFL \050Open Font License\051.\012Created with FontForge \050http://fontforge.sf.net\051\012Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) readonly def
% Linux Libertine by Philipp H. Poll,
% Open Font under Terms of following Free Software Licenses:
% GPL (General Public License) with font-exception and OFL (Open Font License).
% Created with FontForge (http://fontforge.sf.net)
% Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012
/FullName (Linux Libertine T) readonly def
/FamilyName (Linux Libertine T) readonly def
/Weight (Book) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -98 def
/UnderlineThickness 40 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD02E6A4846487D7C635611A9EF255
7ACFE70B59134C47FA12F9E0E93FDA42378F12A0784AFAEE3543BF409B907F85
3777B0D3543D011CB9600A94D624D6E644674C22710F950105CEF2EDFA4C241E
1BB15944B318A624D85D7DE4803A6E6CCC765CC00099226901A3247CC8196859
DA4BE8CA9CA4B3A22FAD912231E3423965B70E9F031EB15C61C4B0C735B5560F
150479C9C58372612E586E3932D30205C8D3EC8F3C53B614B7DEB35D9579787B
E0D1D41E6794BD14F8D2F82768E186E1A6DE335D8B4B6D39B6EF5FD0A16FBFE3
F357E17C6CAD49D00CAC11DAA07DC71ED22FB7656C572EAD5FC86D15C9769183
F9256AD422584F7F1C1418383A40FDD630935E93F80077765878BF04AFD9D871
AE804A918A923FD597BAB256EA1FB12CDAD477A44664521DCA42CB4DC9432292
94E30E0FABB6574CB32137D6187A0746C96F33CD026C17CCD7BDB76F7D78DF4E
EDA9A2DE55709F0A1EB5596ECC00413F2ED433E9B95A2C3A88CE275C8F37C8C6
1785AF42BA3B0A5825D165E250DF1909F0796DCE74131CE8C726F3C7BFD50C10
9319F2495BC5DA592A5B3051E0AC9DB01B4E70BA62B83C77BC5F871D3E0260CA
F07EA74B79A932068DFE1235FE7C4A2B250B107EF34A70664B86A6191549E475
90BD66B99C01E2450A32E50E320260C939FE9EB448C1E07826480EC7268EFF5C
9B2E2174E0B537E9E688E2F081C4D1FC2E249CEA69D46462BCBF3786DF471E26
859C07CFB704FFCD8351DC4CC5388CD4B86AF70EB76EE248955FF55D0E52F286
834FEDE39B4CE1152D7E5572F4549B2DFC5210A92A3393F1250F6B464675C500
5C9FC285964E2109F586AA7041391D372A25296859CD02AE2803EC5572AE9FDE
0C41EE6A11ECC35B5F44E2E9CF884193782D14A64E0BB5689D0E649C36452930
251B3BCB3B176F46293E4ED54223911992C121B064ED9A3A23F1D3C50DDCC958
057D9C3064B648279DC46295F8AC2F8E292214F1F933F4B58031AB7700DF94A8
D23FA8EF72C3100B4E9969C33C2C7E100AE152433B204950A1E3244ABFE0D11A
D1A2A267741AA5918F5ED78B535648FFCF620B7001C10F99D657A80DCCD7276E
AED5D3EFB7ACEEEDB28A9DFC6630DEC4EE4112FAF8CEDF3BFEA58F629179DEFE
0F378373DD720B88C76D575C96EFC82903A50C0B21DE8C0CF7EED3B83085047C
19E0D1852AB7D488D10CC8B0FC62B04F553B6EFA8EAE069A13505C0C50916C35
DCDFDB9D506D5A06E5DB61F496E70C9FC762EA606404A34E031C39DEA79F10EC
8EAA82BC500FF4A623BC4F31EED1D4CD202D0542D496B12D24347EA87AD6047A
B358C877F438DE761723CD3A5FA0251D2DEE3D447EAC20209D904E40A671BFA7
BF77704F3CAA75F2C9924891C5CF36F5B63B452DA9068920AA089AA24EBF2300
802855130058716DDCF176F2689C8B30FCC11F0814B48F25B9C7E5D1A83534EF
550A873EFF2195191982E1F75E18C445DDD6A8E30C843AE02AC035EE1FEFA2F3
96852B5880DE19EA8875341FA67A31539D2072FCEFB6580089FF4FD7DE14F843
4CEAA63F4F2BA97CB1CBE8D3445880A35C61AD69679A28484BC5BF2EDF9BF06C
D5D84F96147F3E6E4F71C826E5FF825E0BF9C561FFBDF17CE73D887027B0D7E0
E1B249798D70D78F350F4C74EABDD042982A1B72B5834DC22CF88476C20A7922
2CDA06C6EEE76EF970DE55F07E6259B9FE782FE3E09F4DFA497A4D1F72C4EB68
19E9134187503DEA7D38CD58D8F330747F90DCDA4340EFDDEEFCFE9A887F6D8C
413C09782923DC4450606641EB35AE6DF6E30A8B86E367B1086840FB8284A017
52DBBDAEA36A081C85D6D4509F9590CA295CB73DC637C8100532048BA6E6F960
C2A6DF805D82CDB4EB4568EE7CDF3740840C5B57F83E25C0224601CEE21C0FAF
B0543D73DB77035D3116D9085F7555B0D599C1B74E5C7933823EAEA66D5C2D77
F829CD59CAEA3ED556E2A46C524AA54764EDF717E0A3A2617B45B9DBDD3F6E23
2949AD729B20509F26E22D76F7AB89ADCA0390EDD94218AE540FFF27E487F07E
CD9DE71440AE1EA825135F7EC84D404AE524CD11DB1B396946AC5C8F18C3C214
C249A0076E3152D356BE6FDAF0A00739095D7D63ED0BB5D3F576688ADD241200
15B72776C9E833B1A2E93CC4790523B1741AAD742AF71BACF5278E3D9E8BCF2B
085AA2E3211F29DF2148AA614A2C6412EA7015CA1265AD43D3A2095BDBC6F1BE
A03A38B96628C9D1491151344ED58A33F98C5769F5F28B5D6A29E4119A3422D4
9AB8AC12DBB4D9730C68589824134AFCBD9F7A5E01DDC92321FBCA3A4DCF4D3E
5C67070FF30756AE94D3EC60051BC82CA9C4D35A54256C2AA8E6DF857A011ACD
F0F6BB97B3191F0AE6D8671E99100772DFC98244E0911914C058EA75EE4B6EC7
E84E6410ACF432BE6BA2C8C78EE34E6AC51EFA0C3983EE54D37038F82EF34693
5209535880EE681E73E1E4D542E4079A28F90E98E1E9169BE8024B956E55249B
9116F232EA082E3731FE55DE2FDE685DC0501CA13FAA244BBAB6559CEDDAF05C
170A4A7F196418BBB29FCCB68425125F2E7313ACF0D1A8CC793FBC9675DF66BF
5A02223142DABEAF01CF6008D20591D50A5300C0B881183A2A1B087F09BB89A5
4603491D0010E3BEFD41CDDF39EACF6EF75312CA02AB3B0A1F8FBDBFD1AA5AD4
19EDD26DA52FF651A65FB90F3BEDD5C1D1C314038604E6C325EF55A36C178272
5B78B3F89840C966C40BD475F310675C69356681D0A18FB16A410E6D5EA3240D
A55F043362932E5742674D46A7EB45696A3DB9C7805612F7849BBA60F123088A
2AE3CAE95C7D04F8D9D11B1EDA2FD6379F8CC31F8E0401CBB9A85D99E9199404
204D7FE31268362A40F15390542A5456450ADA4EACCA81976224FCDDD67E3F2D
DC1D57CEE8BCF09935F01FDA17461EA5348A56275E6A2CBF166FB100951D00E8
E3237576965D93AE63DA97FB9C42C5F19254EEBB1C4ECA48B442DF740FA3C429
1E8F8FC0731BC694D4F8F1DA6346482CD56C869A724231151E94D50135FAA4E8
D4E066A42620F583426C22796F5D9417809A755F41409251CAAC2F103BDA5FF3
7FBB1738FA4D67C8A771A5FE293EA7ADD3401A7904341981563074B98A338553
F9B672DD5E4795FCEE763FADE04437E407156D9AC70EF8AE16A0530A69107A8B
897752F0060A8991EC3B6A5B9C700C36DB8BEBB80AD2BCBCE7C7C85D23BDC424
540B4B9D2F15F78096937536E33A3D53A99F90FB3E29328A473BEF076E250605
2B8261181FC0C9DBEFF97222D7F50C6FC3609D532B9E4F1D375D9C0981967A3D
0FB307D55D64B3F653CD53036B1C4E28C1888BF4926E5F9726770FE770DE103C
6088F2C5B67C488851932143E37ED991F9F012B927A9A5B088145AE1E766218E
8EE785783AA101685FC147D0910221768110E4A7F499B206B85925A822426FB2
9E4E89871E9CB6517A059E61E8EF3CAC7EAEA3061C196B20C4F7F6F7ED4448DC
1B72C96A3E7BDBA53270B7E5449A229FDE15990DC4050874FFF24451E2B5487F
313CF3AA55EA1067E8BD92078148BFB4E35A8B5C271540645D48DCB7619365D5
097915F5C83972960CEB3F6E538C1B3290F42330089E47BCC137226B3BF65ECB
0B720146AB3891E77F3B3242FBF05B8DE8A91F0BBEEFB17910FAAAAD5B24E1DA
FEFF25CC64BB55145386FB890E50E78D21BC660852D2D4BF8F927D6BF896995A
AA1DA6F8BDCF4BB216C433FBCE5AA0D5CD4FBE78927FF7C48AFD2B2189819A1B
E049753DB251E9802CBE9A5414577CBF067F1036A983B4A989C5F1C3E9DCB7D2
A3D044E8B9BAB0523076945C06626E1A5A4495A9F68D1586A014A94A651F1C5A
5B37078B6336C16D915C84820CD79BAD2022D2CD44B5435D5C7035307835ADEB
C46FC17F28AA30A917F22A8572D569E70B9F19DAA95A5E25E56F88E593EC8CB5
26553FCAA87600ECA1F89C893025569F97C78EE57EA4AD8F7A278A7B9236E39B
94A170223BED19D80F8DEE1A8E7602E1D51BDD0498A86D3DC07AF3E8A86FC863
1658C04BA76923A0FDC9CA0648FCCDC12EC6245F645721FFA8573D01E30BA33D
4FA1B456F771E5FE0F967DD25F79AB0BEA8D437BBA37F22A3F8733553F7E928D
C745087988BD67544955CFD7A67A02E067FB5ECB25012059BBCCEDD1EE02BEAC
D1049E4FDE6CE38DEB0F5385FF5C4F769FF55A63C0E57B42CF6A47841A8EB638
9FC95B308AF69E859B4DFD54475FD585845C4F5C9622D4D9607C0814448DFBA4
16C724273686E11D26C5990F16351D9586C3C47E37B624D930A43E27F3EE874F
49C410ED71902F9DD31B0D575BA130D1CAB5250C91C935BFA2086F6A76A76235
DE6DF3F66510AC9062B29ECFE6107BABD8DCD86D6FAD2F23C3FC4EA849B0363C
E1B50EA62EAF65FBB40F433D6E78CA801C62BA525A6DC075876CA17D313EF658
E392AE6CA545F793728A99841BC722515636B0E2BB53634E52A4208E091F1E22
3F26A37E8BCF97BCF4AD4C0CE6C72F9D059B2357110A911C9A9AEFE012237F92
5D64DCF7E6AEE253D20281B359D360E959C848B1FA0A798A8EBDEE03053C7855
8E607256C01499FACB650D295227825BBF06193DADE7078E849AE1093DB14C13
702FDA2DDE29A0AC3315CE5F13B638E17D8BAB675E260BE81A3916B8282846ED
6752E88601847FB984DE91CB61BE28C534F0F12D3B91A0AA0F05BBE8524020CC
7B7F0E6474B4F212C3C0A0678F14B24FDD244FE99EB7E6F1C93AF0D05B0C1B2E
9F1C4B4B60DE9646305C1E70235A63080E9F47F38B35F33E7744A54CC2BA732E
CCAB00E2FFB680B291AB6CCB1C1ED6674A9FB868752630522F4B994892EBF647
73E1C3E64A2AE4B9210D06C57DEC93CB75EF4E8C9DC41A40260D3639843E057B
C1D035F556BB0950F63C1AA01861033008F0191394358E73750997842ABAC2CC
98E58000FC2832219325AAFE634348B31B1A13586196167BA1A57D76CBE9BE39
A6F15319E055A5ECBC873B110A80DCE95C57EA9D6DA1683B2CDD0D839EDE32CF
28409E5ADDC07933F1464444ECB94DF8E94085270DF7BF7AEAA1DF4813B665C4
6730079072DCC1830E2B53CF271365FD4B6D4C55E592FE3A343CDED5CB792AE9
70FFF7AAF6DBC95B64EEC477032FA07F86FF19BDDA23D8B45957462A6B35F7BA
F1FD053564DA9A3BAD9DAFC06C7747916395AC616B6076ED236400EBCC425081
A1A96715BBFD3A1E6FBEBB070EAEDC6D77AF8E73B689333DAD2D825DFC3E4135
2B5B67416646E324DFAA81FF48B419E0E130C92735232705F134E8A3F17A51AA
E1EE00EBEB72C4FC508B930F6DDA0015EE5102DF200D7BD57806CD08119A3977
643720680224FDCF12DA7D0BDEBA050192DB87BDB7644DC3D1DF4CFA7A807B13
D7A4E22C05391CB0DD7AC8CD72A861D4982AEC874AB3F438A954BDDDE5E15174
DA05522D69D1D33B636CDC647D910D81F24FAE2D98C920325220C303BCC3BA8E
7F9880664B29420A8F85F98C03309FE2A0A652C09AB6AE191A760C4BD18F9B70
6429D46005CEF0CEA44E0E171390B0D99D02C3A54A36E93DD00C852695E8B18F
0D438EAA8B51DD6EF65D3F14E30DD41491D39C83BEC83E914C781196E4EB9E5D
8A96F2A5514D4624605869AC5B54FB940BC0FF739733223ADAB346431B5E824A
C04BAC9F2C62A1E34910DBA46694BD66B3642EE61829AC51DBBF333FCED69566
0AD76CEAA4E77A22CD78F3B4061F4375AE004A560512981355D0E4B8B783EFAC
2F35820D237140CD379E75FB6FEB21AF8DFCED4EDF8B2C8CD07060F7027DA678
E650ADF1EBEC47BCCF27BF3BB3E2CF823F0D1B4D3555941953E8297993E039E0
EA83B813ABEDDFDDA4248F45F8546C71389B373D2030F60EB98456EBC829578E
550DD92C362C7196ADA4DDB7A672E8750840320CADD2995A68B6CE541A3A174C
48D01EEEF19F82986E339B99B75F0942535F3E3B619B94AD63AEA36EEA750E48
D0F904D385E808B0293A9D5E9FBC35B4270D81B1FCA8BE54E576C591D1196DDE
D33342DF595C504B3B7BB51B6436E9A53DD1C796F164A7A602A99ACC30764508
5F1DA8F1EE34F1FD30CAA2D72CC41BFC19D827C3A7FA9BFFD17DD2AEC41AA019
D7B185C06A19871D674998192C973F5809C7EF4C225F4180F7C1A8ABE4A4989D
06FB6AEC300FBD9792F5D35FF2C34220B2113BE6D0CE81A13620AA043C921E70
284F7B6E358A9F6F4948A2C43C31F58C9BBE316D2B2DF8DCA423AB23B840667A
EFDB871BDB19949368FF999CD67DA81D654D3E1ACAB38D7B620DF8C429286313
68F47123BC317D5ED55D03182575284B630ADB3E712E4B1DCC798A3F86B8CDEA
FC88F6AE4039AE8753D011E59A625427B68949C89D76099173EADDF2B3FF1081
51E4B52D5D67C24A2CE92DC925412802DB2B6C8EBE24E6FAEDF00BF9F49182A1
28F309572A55CCC4D9DA3B177AA2F1A629B97325F818C4BABCA8C2A9E70F1340
91DDC16A69AA758A7430BD48CD6CB49339F28F283E1E3A05C9DBE01D84F964CC
3058D627CD0191DAE333B38ADE3AB56A73FC2B7E52B4B834204FBC41AB78AF87
9305A0A2B22E41420F4860E01C3843EC762CB3D2631B99E402417CF91770E3A6
627D9E689843DEEC48D288950FA8FD3FA2FB44F960145FAA75E7E801577735FB
0F518243BD64165DFA53456E6D1951F17A33AB2F908682107A69A46098B85001
39475434829A61FBDCA593656A61C7AE8CF61B27341AC9F7F50D7A49A5B400D8
4E29C0D04486F0925E778125C4FABAD95A9A06874C5BF7EF24D19A5C4C6862DC
7DEF058DC9286A4575F934DCF1252BB5F587644F6779D082178DCAF038334135
BC10942001ED6E4907B8752E8B24795F8F5E153EC8BD430D09A5885ACA3663D8
E6D46CE478F742E0697E6CA5A20D570A23291F6F9290761F005A2A3D1D436577
04AC8357A9A098AB727A6C3E07427732318FB475CFB31DFFD4B3B2592F4A9F0F
AB39ED4F7B45B5B9EE3622BF6F8AEEB3F24EE0A7FDC59D92BAE9D69D2795AFAE
078621E7BB4D5159FE2616836DD740D7C5429DAB2C9071B5DB6EE573A2D2CCBC
462246A837FC5E377623D9944271C19F338EC8BC226FCD489A59C29221D9122E
6496DCC79F875A157ECFB3C61BB62B4CC11861C13108F6F9351242A0A945E348
42B79BFD0F963BA4D758FFBA7F9C3DF06634022173735206287D43364571624E
94AE037496E8AC4EB2BB175D168ACE352E51CD2B7CAB5ED47557533E1C982054
0BE3EC7A678D7972327DB970F7D8E3B8BDD69BA8DD3E305FC8E569744A57C456
0E570189D10C7E10232D5C25B6EBD6078EE71C8DEF8FAD5EAAA2DAFF3D8D03A5
B38CBD40C30A9DB09E021E9B8E200DBD7CAEEF4C4E679C8F358A048147E38B8C
1A0BA66F5135645705F1A825EC4645DB43DBA36CC2B928A5C0F90B2BF7F2B747
ACC153162DD98B715EF35100ED5232E20B8B81D04DEFC16C93F0C25C96ABD7E7
CB37977579FFA33077E1B984AFE5BDBD8DA4A38A8D890BFF40B0907F3BDCAD30
9ED84C85F6F4831AC7BB72729DDCF7E171001EE0CAECC0E315231DDD748CA02D
21B3E975074FB292CFBE44037FC9CC1B3272FF56F65334167085E5F89BA14117
E50271C4F9510D3D1904A5A1EA4102AAC9F84D53D462272CE6533E1E0B78A68A
CE6B0F304D53F819C3B63FC830A13E8EDB008CBE932350F2FD9073686F003EAF
600856CAA82CFD073CE81FEFD0B0526EC0EEB44BBE497FB1400BFC1231F4B74F
9C0E1803124C66146FE182F161AF63F547F6FA9DB53174F8B463671FAA8510FA
1C88C2C257C88FB50A4026C1EDFF7BA0C723B6EBF66355FE681998F954B3DBB3
E2B27542D38FC3D9FB7E6B8170D1194D1B64EA38A567E5932DB71A7C47EEC118
6696F0E83F7067AAC59A6A7A1BC4A27BDECD1FE388E34721951867A0FB1A85B9
98824BF6511F1AAEE0D8BDA3586CA4061437F2A432D4AE30FA18C00FA133A557
6FD3CBD981B528776F4B77AA24032BD8547267218D76D95362CB561058570872
4517F1174F0F13B777BA16B992CAC59C8EEE3F646EAE209792C5CFC6A50956D7
E022212D4AFD3F70E046FD57B19E24E8AE3BA83F2A362B83432CE29DEE66FD4C
094FD7C70135A2E3C3DDC488A1359F5BD52D3242D42865B2916EF1BF70C062A4
56500668E59A7C0629EC002541FC06A1499A5C7ED84C7BC4D54F94718C14A693
E6767BD7DFCFA10CE43ACA2E2EC8AFB31A902119B3372744903DBD1FAFD236CF
BFFC41964E125793B2E2FAA295910562BCA50544E5D07AEBB593CB50373AB7DF
83399D0C9F7CE2061D4AB5FE6F1A75732D60BA2001A2D092AF322691FAA610F5
D1FDA37242F1A66354A4EB4900C327E942037773349DE530D0A12B3D75F3244D
FF3E2F92EF983C0CFF9A3C91CA1E32D373B9CAC303AC954222B4F2983E67DE4D
8AAC6F3A942347330560107F522D02CE2FB582747DA29AEA44A0C27A8664786F
C635B28E8499BD3BF24A57A8797FF12D91D3732590BEB9E34C0EA2AE82D3D9B2
BB1F2393058EA3E53398D418C8D726BD02DCD461C3DC600A33E519C3715CFF2A
C385EDC0677DE18C486D0A20C0381ADF48E4D6EB4CBF6E918029667D7887C9BD
B503D53F5321349511B5C776E5E4F6D25203B72A3FC90E9ACDB172B1E9920B39
39DD770977DC0098635EF4F0FD1DA244F00DDD16CEBEC8CD909B7B5EE9B38A83
4F071428116CB725D4396230D5F27CFD52BC02589DFAE6B70E37F8E2656F5EFB
9D5556B71345AC51FB978C92A63EA7FC32D2C2B57D699E5EB82A88F3D3FB93D4
FAC41C6DDD035005D9546BDB514618C5E1EA538AE40E7F5F783714F8FEC76315
C3AAB9DC3E12C1BFDDA721786D793BD01D6F8B8CAD1C8E0DBB8ABA0C945BE606
A2FE193719AE62013FD10333512A40F309ED0DCD3559696FCE2EFBA1C6F5C0EB
C7A0C295AEB0887B63BDA1F17916F2594CF503D842F2E66AA1CF236B074DBCCA
06BDB22F2D074B68019AEBFE7790A7AA4CF7F4051D35CE380750644EF934EA65
8ED402FB08C08C458D2C738B1069272A6AE455B13C7C820483106745AAC706C9
28A414FA1FCD2DE8A1484CC6C20A8268DBDA125579AC4BCE6F356805EC51A174
3C03E696CE60DB23DF597CE209CA3028B01E64F359D255C8EB6AB6C4646D8CE2
9E3510B1A3039D9C5807F70B205950CC3C716D00AEB4CF601F6FB6385963966E
9B6F1BEFDDFD6F70989D6342AB00A5C7C2FF51080137A2E7FA75593992BF5AA7
B2A7A02BC9EF31EE9C79E4F150D94A97363B24F840A1676C4C753AFBE1C002FA
7F065086C7C48ECB05FFC5891EEA9F02606A62034E5810B7A5FE5BCFE16F81B2
5D3C8C140E7045B93B580CD710315C8C992D1F0C7BD5B3310D9BD7681FECCBB4
BABA1BF9149178745B5D01B1FFD51EE19692ED621D6A0F7EA564D921B83B7437
FB44CE935FCD87C5F3F69F0417998FF19838C5C286885BCD2F8842FA571FCE24
737C044BBA551EAD50C533F7F5ED5DF17DFC2CB1112F643AEA7414992E8C1154
6EFEAED5C16287F5EC5CF63E6A68E4D42779206AA9F21A1C50D7CD23877CBE55
E88A57ED77E59C2A1D11B976ACDCCE41047A219B453620EB9D20660E4463CCD6
B4811AFF2FC0B81CC7668EC6C109ACBEE10CA638383CD6BEBFBA593CE34E8C10
08C2172E895F006FD9963174FF863FA949A697936EBA8441505EEF70B3490F7F
A65ECF4B6F6B55E6DD0F2BE9148FD403D5ED5690621158C224E9435D6577D1CF
B719FD00C7A2249FE40DF75B9807C8A60296C5D93BF25F79EC30F69C123E6318
37410E4904D3313911FD03205ACEB048DD2379BADE55FA4C688252061ACB823F
098D47ADAB36AFB1B666A553D356B604807215323DC5C6152042DFA10483BB22
9BA324E59A81107D71C651007538858F20BDD70EF02E745353F78014A3F76B65
7D08033A0EB87FE36149C98D036B0AEAD031E94D6257BE1B7BFB12954BFB6070
1F4F77F1D6868BFE9F953BF6E65E5D15CA0DE3625A752AC61DF1ECDE0C9EBEB5
80390D43C430B407248B6665B558528EFC40312068DC84DE62EA94ACBF5A8A41
A02D8404F601125F062CA4814BEFA3F6F3C9EB1B0A1725B703DF25B27B0B383B
DAA820DE810796E924E1D860526021EE04A6378DD1D1048DC8765BE21A9DDA0A
D4D9299E9E18641D45DA84F1E9B3F312F1EEA3F7EB96F189EBFA216A785AD589
B451B5B6FBDCE6992282BEDAEA19931393831F1DAFCA003932A286CB84CA1284
DD9EA66137C29A55E31C8F2982A727AC0FE18757EB205AE0CFFB2808646BE736
83DA2A8717A30EB97079E3F657E3733A772C8CC7CD303237D2A88C7085CE07AD
E6ED924354D68A91356CF4F9313BEDE966E1C6167FD29136A0B3696D7CD6CBFB
98AD615A40DFB40191270EE3B1AF5E9ACB07AFDE1F564BE71ABD4E08E640F507
941504778CCD3AB251EB9FD654EF7E8F0186FF3AD805A1AAAA1DFCC4C9FF1C62
4AA4B2C088FE4F940B1E3281C9BCE1706BFE0077AE2039F9710F17EF0AFCF839
B2E73798667EADDC9F23AF7FA64B863164AA9466874EF26519015DD68BD23C5B
2FD805839E3D1E6DA09E73E527E2546F1EC40726B991EF08B3DD28B01A00432B
ACAD39130B59BD9BBBD6521CCAE3E2A12AAD8EAB4CC90B12E10F8FD7EE88681A
4583A3282C4A9C64EF7FBCCADEA60B1C7634D559479D4E2B82093323981CE163
4F7DA8B03DEDB6A7E53431D83AD47EAA9822BDD93B579DAA749B7B41DBCCE9E4
8F09A93312041384573338BADBD906FBCB6A6B137D1815FD6E1BB3D5D9A3FDAD
6065A36614A6834694903EC567A69422900F34B98307B949C9113A87AA0D6034
B0171A4EC7894E2A0D724F4BE0FA7B0ED561B230F7236270F4F8EBAF6036CF77
4C04C9126F615EE74BE1F553316A7BCB942544139273E377B57C84214E9F17E2
5213279E7618D7C2DB8A19F4D26416C3F9BAF3EBE1BAE84D5D3EAADEE445439F
65967C51EABF6FAAF2DEF2C5BECB9731E6155BE79E19EF3C4BBE45B5B2AD6BEB
EF79A6E58394BD831533969D3B279B2D44E5016E3D49C2D5D9A5CEAA5E866521
F08F16C30A013642B16C7147B0969D29ED56F2BEC8D1AA714E650AF284926D11
21A122535CFBC2D6EB89DEF4F8A058BB8AF7CDC9A77EEBE2BADC4A2CEB34D594
7C9F8233A27FE4616473D1D6074DF497A0A78C628675895E5319FAF20F6B194A
B0C6FCBE00A4E8519C14DB55B30B7C007A9B385E8A28F9064C21C2F033C9C632
11929607F4B3FEDC85A3A230FABD11B83C7F0DD94319D244F00164BCFDB50C2F
9288CBA59858A9D2541A949E58852D64D1E8B167375F82C992E98F7A5873F70B
931CD068C1D3BBE56949407725FF461106D38F4480905D66A35557D12C7D3AF6
8FCF93A541E1CF69F43661719C6CD5BB7691BBF8C1F6E81AD34EE53E54945B01
B282AAD6EBA79E856FCE79C02BB01AB333B86A22C4BBCAE2F14C00E9315A8E5E
41311E907F64393E392FB6E03372379927504C746D8BA1725AEBCC5CB1F7AC45
09E8A77B48585FBB6E39586DB7CB534D1803B77D929FC41A372BE218DACCEAD9
10D8BDBF6BA7109F5E9D9D7638BB8AA51657E089997EB8437AA1805B978EF819
AD0834C9B7DD05AC2B08B29B76072793F5147CA479EFC1134C89EA2B428A5EC5
4C65D17B30479A24550570236343B9CCEE38F5E780AD2469815377244944D54F
73C8B7C24B09866049379032547DE5F0220B16AD00A931695F2A41D9D60E8E24
4F508187E6B32F3A80A7041B488CC7AB76EE17AF65D38720FABC322173331BAB
C2B016D44EB3B83AB537C7B6E64D64FE023485025E4A052D68985ED6E2B18C00
4FB17C30176418639006682DB4CCEC832D4A522E4E789020B1CC4A2BC08AD45B
769292BF399EC8874F529E4AF636C641D37E83CDF90E90C3B3F8A39F36447B81
315BEA1B5801312E6DC32495D5247D877D96A85B8C665716037168386E066F2C
8957F31381A7A220A10483BB229BA324E59A81107B9087ED7735A2A07B2BFE36
3BC5E777D703D396F6584A8210679275194B19FA8DADD216454D104831B41B4B
620B6630808DC0F34527EFCADB23384BB8B8E619666F6BFF72D385A5FB71BFF9
F46A3C36A4CC1557D3A4F79A8E5FD8BE4EF171F2CD0EACF006A2EDF16AA86DDF
01B818ED404BE945E82D9289D68DEF6706FF9EFC1E3357076030F9A68EAEE872
0CC128DCAB10DDEE5FA1D48A8A29D277F8134D0136CA2B0A6B7915C91B90C111
B0A3F808E890D1582BF6B326BBDFAE49D3F5A23530626089978C8EB895F94D5D
DE0FBC90F07DFD48CEF6189F1688DBD61D1F886F2B20047E5DDC31CB8BEE4BD0
FABA1F248F0CE3DCEE25D893676DE5025DF4D2DF40E85014CE991910C57A4782
5AA81A8CA58F7BED7547ED165435E628A295E895B80685F1CF10A1158EDE59A4
689F02B48F1A93BCCD7C674C4E7192D35F9531FEC9937F2FC102FAA0BCFFEA27
360A9093EC89B975E7707F5339E571079EFB5681E0A3565639CBD91D4F15829D
88D62EC74FD4B941A926561478FEF64868A668F2FAD39A7A3BA444F1B6A11A2B
995BC241A03676F278663AC6516F43E6C280FB7501D12F86DE255EF5278DE567
FB37E8F70BE0BBBE4CACFF17E97D91F3313696F1B71E60795F449E73F84CE829
8979C1453D6CA88C5220DC2D846FB8076935DB804554D23C10F8784F22DC1E84
FDE32AE0502AE5F6674DA84350FFD0D94CDFF2C4A2E7AE4503C71AEC1836F073
36B7ADAB1A0323D1649081CF715E63468FCCB6DE05B7F90577FCB0CB1EE425FA
28690954B38A242ED64C36852BF913ED44A41A2D1CF0329EA892BB7183EE5F75
2721620DB18017B00C58782765D19830A9DDC1C8E5A1260E029AE104502DD209
956AAD245098A9CFAE5B475F89C91DB6C788A2DC3587F5F1613F5F05DC244FF1
71F2CD0EACF006A2EDF16AA86DDF01B769A3554EE22BFB88A09F828E59584BF2
C141916449FD240A5279A08E97275AA6D6D5652FF51B3093874D67F02BCE3296
95FE8A8309AA69EDB16497589A2CF4398D2D2BE7E7A31036D7852104493CDFB8
D1D487917247805FBD59265E07884B1533035737E67ABCE5E8CDB2F874335CC6
917D4D29A3018A2E8F6AA87BB75D00F991C41FA4A5A4C7EBF2FE7D18B0F9E7E7
F36808CBD932A4CECA01A993E505B0F762416D719D63587B745C52FD491822DD
C1FD068069A5D99784DFDC1FE437D0740605CCC9193FA52B3CF447ED026C34AB
6B32B5003F5D1EA6CD822A81E47337D72D00C27F99EC32C1BBCECC8491F62C5C
29B0C117A58385E535F4E68ECA695714D2BB69D8C8F3710E116140922BD24F8A
8C78790722AB67386F2284702C5F6840DE3FEDA154B663682EE664643888AC42
C4B31D57B49B71A9DE1925D9534F2C1768DE568272CA2C60BAD93A259D0EF69B
4EC965F20C489E30DBE14CB390CDEA17CE5ECA50FE1EA0CD0B7AB91FADA5AA8D
D65B2F34911722D69978239835388A38FC107F1F6FC86C27FAB6341E643FCC62
E4826436EC1D07A9F817ADBD1AA1EEC468D60B16C9471E9E1B6C465AC9FCF580
127DE1287537A5E9AABEA33E8692ED1BAED7EEE098F23D26B47064F47E5F2873
93BDE478F5C4319D83BE8C03858FC6A68B9B834872B67AC99F8A2E285AC5BAC8
79B6A7E1A6BEA79915B77F5FE28D7B323A8CA32BC46B30A039CE0A50E2389542
AAE7A97DC2B00BCFCAEA60201E0D84259F62364D2CF76FEA298634FAF532B32D
D4BCEB50B7EEF4F0A8F1AFB3A1F7CA5C1A210F64F5FBE3E8E450B1367CCC4E89
D03FEBAAA8D1BCC9078DF69C287D243D18230097C78A7204785D8DF0FC99DA94
FB2648B845FC02A4FB68CBFA6B95D9F44558D3CC6C0FA2666FA277DD090FAC86
9A5EFC7BF136C8ECEBDB56B06FD2C898004BDFC2DF579A8C1E5ABDD5A2CEDE66
4730F3D091DEDF5015FA19A653D4CF73F0273091259F214FA4A1DAFF1C095702
FC96876480F5C021623C166172A1F73B7D3454AF76F9F8D4F02B798D99682579
0847C808588B1A02CF51DAB0A5FF779385EB4DA75B22B46FBCEEA91DF3D84D4B
5A2BCEB8AB14C974326BC57F15D490AC98AE34499DF8C812F0AC3F9A1F9AC0E1
3B1DE784EE6B64702F3F95C5AE484A67E7A5516247E26E133E012707E4E4AFEE
39FE95030A006AA88DF9E59107C89421C0DDA74A56AF1695817D1E2258EB8E4A
11442FC6CD97B3FE3D8D0986C5350312E6260061D2474831A54DDC9F74FF46CB
11DCFF10158F672D15F2C8622799AF076F1F53CE09288336662D1471F2D1A8E1
EC0A1ACD5AC6C11BC7DA8C07C71014265EF6A8F2C5EB49C52308C6F352F5934B
99C3A03D0A56EB2F2BE12BB97583E0DF233C6F5D2612E43BD4830742BFBED50C
851223FF8E3D7F0636E7ADC2866D5CE1BB72C1D435F43AB56A980C8F3BE25BA4
1EE9124FDA081478AEC60C14C3B10A749A1436FEB05FDBBB7F5D7EBBF1032BAC
78CC0994D3927A2087A192053B668EA86B7E2187A3BF218A6506750FC70C6F31
80147F4F3568097B60E1B61649FF6D160BFBDA28A5CBA0CFA815C7966E971A7D
B0658DBB9A296DC1EF079B38B28706972E2BD239D9CC82842F6B272B13242044
C4B466820D6F2168B68EF69DC3B99D7E681A98A157B78B6908BFBCDF72A9F616
19E09C929C492792206D8BE271DDA5F61F13D1B1337F22BC1E60A040F4EE5086
21F2913606704433208B9BD282E3C44AD05536F49E867990A56AFB0AA193658B
71D6A0CA5E22F23C7CC8F7E4622EEABC8CDC3E1A94AB1093B30D44F25A29858D
DCEBFC45681D61DB518DD564140AAB4C978BEDE427EED099138A66EAFA66BCE7
6DC6C906DE41B79619860EA8058ACCE10D39633C0EA3698B421A4C66C311AF9F
7E546F6AFE62D8510AACA18CAEBE7C4ED6E71620BD36A54FA4FE435300F5B655
3AA27FC43831FD101E684697A9914FBE80618AED8C548EDB3CA0CF7B4FBB2123
8AB6457D12F3169226E63E6694438D917357BADB12DFECC8B382A9CB0BC3FBF1
AE21D45A3DF444CFE8A7A8E2F65453F244CAF20EDB7A450C34B2DC634C9C0B8D
4D3415222AEA83F55F10201D202D52177956A06F2F0A166E029C456DA82241B6
4189EFC68663444DB13E22DF4F944BEBBE2B699B5DBAD91EF84735BEAAFD1DCA
41078D558CDEB0450B99E5E00C27A97670079E36D67AF8066DD493031D1A5D38
D58833A526CA38B12B5AEC490A066D10993F8120C923E64AD53E06130AFA2766
FDE9E466F8313B5FC6E21513780A9E6A96422158615F9400A2C23E137933BC6A
8E77C180BB575018B6323F1B4822462C303EBCC73BB5F44FFD64AE950AD033AD
04725C59F0E7BC1EE0E3D30AC70D623D97F3701FAAB3B89F357F7F55A770759F
116D67F7A6DC3266F1BA8B9E065A0F1B10726B5BF2EEE29BFBD1612A97ECE636
E612231158C169AFD69716246D99C18A0A61F652170EE592F7CA09D795048439
B2A9E2E525F2B5BB1C6B0951AF67887A7B273A60D565A1FF6F5EC31892A3BD9C
8DF94EEDDE8B754987D926F115356E462A75DCEAC117EA056D12D0D8C7659AC0
6C7B3645BD4F83F5B0E3183926137A7D069EA8A732349A0AA0AD5C08E8B57580
6D47741E2B0F63F3B11C2ED407DBF4E83C8F42BCDAE4231FA5F25B9B4EAA4D3C
ADB583085EA38F8C09C0417FC38C6306041A2FCFCA2107080D042EA71752D754
F974A142800F1C2861648073FB9DBC150F7AE36D6AD94AB078C70269E54CA539
8F58FD269B2CE9C17B631DC2610C9EB4678AB66B2A75ACEA874898A1826EEFD0
0FC90226FD76EE0B346EBBB899F1F24E1C7EDD2F6E1087AE2E5DDB7C197D9B33
CBC9C793F64A479F827EEED9A54EE6607CA156E77BE65B38A5F3413CD2C31E91
F4374CD9C7066DD698C06CC8F3C86176056CE5DB4AAFD1E5AAD343F5024D51C6
02C99D6B38EA429C4A142E1457FC538358D6DC89CF313CD15986D964040635C5
D81A4CD141CE88F7E280B79C990FB2FD12278357D86E46AECED0CFB8AA39A32B
FC7FD443ECB0CDBDF4B80250D312DBDF816341645623D2E47DE687BF44FC857A
2774635951424AB87C14221522ECC008E7B08F182D149B65BE865B757E814A4C
A384AAADECE468EB3E89E733BF24A582704EBE8C24D1A37A5EAF590C6B3636AA
A62CE68EB3082D1590514A68455913493F0396C529A2542C2F3E67AB8CBA1CD1
5FC815528085B1C9C8795E869B9B7151488E194AD7D2CAFA2AF62392F4313D14
4B2D186ECDF587FA9ADD7576FE07C10202637EAD6DC2CA6EB800D16C23C3F9F0
FE606458D70EBDE2FA14F2CBB582D804A178F70AFFEE9F3B24B820662FF0B673
598B2DFB77BC1215DF7BD945C18B02E3C7878E65CA3291C6E7195BC930DCE33D
CD523589E00EF406B9A1B84FDF353749530FFE82B8E1072DEADEF5691057A03B
8DB8AB2595E8184CAE31569A1B32D931660B57FA4DE99BE9728B110DD83F4AAB
FBA346CB2969FBAADEEC127C6EF7FB99402124F1A381B5C0E6BEC619DD7E62C9
D370C182723B4AA5C2D43138755F1357A46A860FA2AF035F57690C11FCA53792
3FCF6C4CBE8F3AFF39B3740ABEB27AB3AAC7B8952F5982E78CCADCFD0BDEF1A5
894A55409F1D73206E55E66ECFE43C60F1ACF522DA22C4C6CB5650C62A761566
70545E0BDD6D779B654A119B02AE9010928580690604B128409B1A85E0D0918F
99342104B4E8A79413F9A50E2244306F7D5261C85D4A073647803E1D026CC642
71E11D3F168D1CD681917C9E87D25D0B9C652667423B22D9891D75C37C3AF79C
A5D5238E832BB031A0167D93B3ED8E4C0DAE97C63F407A0FF097A350E79695B2
FC35486A051E35E72E35B40B02E56CECCA6966EE0F144E3226342FE9017FBACA
70F73946723CCDE5B445098DF4D5BD4090843BCAF9485F978170054C243103F7
C710D50E8F3FB756DE55A04F7EE7CA97ABA3A85139790DAC9E29FAD6E4514837
08B147F3ACB290054C79127FB181E5C1EE5A64B87B38C7F77D12BC7D6D732370
4B9FD2C73F16A9C030CBEA889B4745458474F4E2D47FC7000CBFCE3FE274EFE7
CA555324AD7827D2AF4E98F15D522BD15FB900E091BE04D300486F7A6DEF29C5
84E536D03E5F5A2CF377EDF5F4BAB179D88092E01559F43A8C07CA4BDF4907A6
586FAE57AEB962FA84EF5C034602E76AA593DD8901269120B0F0715B4729FFFA
1E5C6663F3345BB234239D34203C7C63D6B4A1367A5157C7DE9B455DCB92AE9B
397DFD3ACF5E6514CB389BC5900C4305D8CD54DFA7489F03F9B170152136FEB8
0F752E9DD3665622454C6A97DC15A9494E876104FE4E5E2836C303C685585EA7
03122EF3B16966C131A07C50790802485A981D904C44E2AAB340476DCC75AA8D
565C073480DDD048F9023D70E4D00CC47F7D1C8C8CB959A3AFC7C565DDD90757
EF5A096396C1BBBC1B1166547B306FD379D03B373987DF12E87CC67D20E51721
CF6C110CDCEB2FCE5DF36FE2658CCCC0E009F881F76FC939C7B4AEB6556BC6C7
FF68FBD045C143CC85ED16B267C42AF4204EC8E64AA8E0E76D851CD7323F9B6C
D65F67D42CE5148E2C29D68C3F4814650B9F47163232E7A7E0C1AC3DA922124E
1697AAF7473B436F50966B571AF175DB165BC27FB4A2A958B14BB3D7821512A1
7F363ADB3509DAACF1FE73D48B3ED3EE360AA687B1B2CC31E2A482E2FE82CF72
A27FA10B368B6A4F3E9E69460D8B35AC2F519FA7ACAEAC2AAD27AEFF1F141D1E
EC0AFD83A8D884E7F2FB3DD6C253F4DA01FCB9926E01FF028E56D67B1E35B5A1
EAAE559D216275CA7F8AD8E97890AB7B45386A13433D4881F0977C9EABE85FDE
1AC7925B7D3ED6D66B643350BBF6D3C9D55D6CC1C2482A00B44D21730DBAD665
A141B776DA894EE7FD90CF4005094B9F67493CD880C94A3FFF97794A1DF22E6A
4F66A29D42C2FA1C5B65768C9CB23983CDB9C1772CA11ED9BC94F240E48FAE53
CEC95B1E3EB16DD6D9257CBD973B546475B718193E66786659050CB432E8B56F
8BE03AF7BC2641DB03EFBAC85F9BF1CB6F46DBE661C2822893F71FB98D8F5A9F
F9674D6A5AE7A4FCD14A9518E4B808DAFFAFF9BF353032C031B9EC80E5C6524D
974983EE3716D420E8531710F3B5E6428E1F6EBFF80908DFD4D36FF2413C1F93
6F4C82FC67664ACE0EE594E6DE2159DC95D56642A713F9F3E7E205B9EC56CD93
65B87A154E7FAA68EBE49DBA8EAC28326F29090CE3F85C85955800D2C0D2F361
EC94D80941BEF11863868BF0E582C8A3CEE03E60D97EE90B3B988D41D1A11438
7CE01CD3957A093530351C77916F09CAF327C00B1F8C18CA46A10BDCBF1BA47A
F05D47396449E02F034D80826B27F025D73A3C33B647F7AF46C1D8D688554EF1
D1FB6E733EE2CD484BA7EB7CAF25258A6FBE57B22308AF01513D81C2118E50C0
76B2633F5086AD75C35E37CC6504B6F8997CDDEBEB0BEC00754B2523E1F4DFE9
32E807E1BB9A4DA4FF87C7C9FC68AAC0A98639F4298E552AA4C11EE5FC58FDC9
90C3D8ED8C95DEA8E9420BD1D5F435F3FF0B01F6598F91E543E38FCB24E45D2D
609CFE3440E6264DBD5B83EB5CC6194571E2B69CE5CAABAAD3A15975F5D55EDE
81C6A0A701EBA7326300248B42110C7089E5CCDF48AE1FC1A6A17F95820C11B2
1BBBE956F296212EBEFC4A56D4A62AFE88DE77060D2FEC149FFC9789586711C6
51DEF9FB3DD6C253F4DA01FCB9926E01FF02895474D14631141A705899CF39FD
A56C856E0F14CF89194D77D17EA16870C7FBAA8C2D1D52FCD2550463C3D390A9
5DD7292B4C730C54CD610CCD8EDA66958A2BD4F0FEE8731D3788121D0DCBE922
B3966D051CDF60A34B00B0F3D518706820101CC96B651C4FE12AA8A1CBCDD380
1848CC7B6AEB75358585740BB798449CF115A8CC226292D75A59BDB48B707EDE
D071FE96FDEC042691B4826B482600AA5E73A63B5182605474BB9367AC22DF78
BC053A65AE1FF7089F9E1760B02B191E92F99E847FA7B0D89B2A55BE29CD08C3
23F304F87FCA06FB321502B58A18321965E187609F7C67999234D302FD1A0CAA
395330E6FD901C13E198602BE9D9517B2D90BA99C97D2909F2C31AEA9D19FABD
55BEF0D9F6A5E50887A1420F1ED8619221907E04FE2208A2B0C9E9387368927E
5B23E1025A0CC4C6A9B799ACF71A0151201DF7794D747D9ACE8DB2B0365C6F17
EE9B60182B4ED6E6B840DFC767D1D646046A2CF1827DD0B979E7FD806EAA8EF9
8414ADAE26A78A0E3E1C4057B560A35181C837EE253964EF9C47AFF828B76AAC
4EFF9A2DCAA1213833F682C3FF18E73E7E3070DC734C96204A5AE38579D281D5
1429414C6E6CE64D4245ACCAFBFA9A2B597EF2230DBE19184F53DDFDCD2D38A6
480F55E66193041B7FB3CB9AD095E0B6A5E10CE7DF6067EBD50476B9BD487399
310C9AC68D884E15ACA3BF5420D0CB0C68AC8330113FEDDB8BD432AFA421D065
CF7FA127F490AFE725CAAE98F627C61CBC3B7DF2ACEE148665A87EBC1E3D56B3
A7506A7303F74925947A4C86AF0EA429DAA585F20325C6DAA100BE79C171B1AE
1279F582DA9D9350C0F614E59B321D16AF8CFE9373FBF0F7425837C264823E46
EC2B1364DC3AAFE9A99AE2744612F6086D8DA8B7F15B686826B5EF7F518A50C2
FB1F63587C2104003CE178CCD75F3DFFD0A0B5F79DA14B6FF1BFA35BB75A3097
8FD95B077DE59161BF705C6E0EE6A07FA791C484AF4C64DDC8406DBCD2274520
51462FDAB64C1C19CB27324D7C879074AB93B42D6759FE0A93C3636CC285DD9F
AAD38A467B4BAF4FF65782BA77EC41D014EE0589DB373F4DBE0DCAFC05B575B3
7DDA88D0E850B1508355BA07007254093B5BC70E2C0333FCCDE9366DDC52176B
9EB8A2F81D91C1EDA6B778AF995CC4587222813C9C1BD165E70DE8EDFE7D803C
BCD95AB5D403CF837891C7AD8CD353C40E14BD57E9E6DC8B00E14101F8631717
124D2437E5456E95E15E3F16D46FCA630494BBFED0BA2D415ED1BD0B008837E6
ABF939BD3783CDF9108D5B4DA054560E8DE7D0BA5D6DE6BC5E103193561E4C49
B3E0E8DF94CCCC38CA05A3B897B4B26679E5AC09FD0E4033A53615FFD23F2514
52E70BEA2B8B3BACA7DDC3F3CAC4879599402B625D5927081BCEF0D484F10102
7690065F0F661FACB6BCEED223EF301095C6E99EFA8E119AD52AE567FF2D9B15
10282836EE37A89D4CB97EDD5A9DE040C9472B2EA38F173D29D3B7B11A47B1B4
78F575D2A5F9EE021B2220729AAF9C5DCF7F1E01043483206B2C87D3A326C1B0
036661D0BF5E1FAC67742DFC48851E58D0D4993540CDB37DD162B67A8E6EE0DB
091CBA6D6374F325A94FAB604224E142F3A041C920CFD0FB5DBC110895FDD3D1
DB7157B21DD3965B88AA60D19C81FC8D03B9E94241A336068365DE2A3096068C
75689101E98FD9DAE82A3AC5B5285D1EDA0FC727C39DB3105919A82A6C54A40B
ADCC3DC87AF46762375B3B86AB4724DE25755091C23EECE89ACF7D2EAABC3A81
FB8470D12B77414B4C6ED5EAD2550500060DFC16E7B76BC36D1DAAB29CCA2414
C2B1A75E72A5D264B4981872F4C953978D66697176A560DF0CAD0E92522DCE34
4120AEC80007EA9328DE534015D490AC98AE34499DF8C812F64C0E9C42B49774
F82CACDF15B23F185B3E49C30BE1D417A96E86F211F9A5F0D5B1E3F86CBC404D
DFCF293B2A8CBCEDDC19B9F7DB2515D609D364C467A7EFC0F44A5CACB22DCA7B
F94592591E3AEC9EE2C413DE371674F986C6A3163EE57086129299A8891361BC
4FFF499F219D130A5995792DA6B4E59E82D8B8D8D9C3EABD2C3A55BDAFFEF69D
CC4527109F177093E0FDD3640412B9E3E690C511BB5D4F13D7B1D3C20E6ADB5F
C2AF9A3D145D6DC515C88CCA341493963009C4699201BF551F3127591BCAB506
EE043FB593307B7E46CB699AEA993B1A8F20991867262A67530091EBB2D5FBCA
E22D764F53F7E809B7B7D69C01BA3CCCB302F2F1DA64A050C76A2DEB50565109
6DD5762189E8BD74C3E6932F7121D70463C9D255FBECA07BE2BEE82FD3B8AD11
74492CF5DAEF593AC504920461DD8842DD196DEADF55EF9B1B335ABE38FCE2CF
47B42471061E86CA6D47F28C20CEB75B9AE8411CF6BC41FB98B8C9507A855F91
85EA7C4199C3B2F7E236874D9A3D81B1D2FDEC2084EBF012EEA1488D62D60467
5511A2F2E642A9A5656B92B7645A31761423CF91A9275E0C636B5CD2A710AC51
1AF5CD5388A0802D80F918CBFE80D08E443B97DBF24629B486D43560E233C1C5
2C3768385BDDB8CF7ACB4B264483E325B7D6E82E049433CB23DFF6429109D566
E8BF50177628257CCD3E67086BDD81351E4A97EDD8BEF33E2B180E228A23BFBD
557195A5C1AADE06CEEEE41F25D8CA59CCD3581C08F07F7F8FD8AF3E5EB27E5D
026AAE08682594CDB487F69F181789F6BDCDFE2F960F9C8C5BA11E986CBE4E01
4A9052504B6C74D1B1215AE53DFD9C66F81A02B68767BEE356803EA7F6B4554F
F7A1A9D4B706F5C51A242002726250A7908C951F54C201EF089EA490D7AC6380
D88C9A2AC80E927EF7D3C4B10969BAC63044AECFBB9754DB8E7639483B0E4871
96843C73BC7A78FCCBF3F25B87BCCA7277148AE89168C51E6BC57BFA24144AF2
5488FFF30297DCB1D61BFDAABF6301ABB5A7E6DB1BA353D5AE542E48A2827B4F
435F0986C69A80416EDE87266104430898D11BC6D7C39C1CC3843969219FE557
19BAC3D131A22F969D1BA94D82FDE8602439098DC5EFB58D48C7635579E7CF52
B739B1EAFFE5B7A955FFBE959E3E75A3B587ECEB8356802BF2045169129093E6
90C242ECD53B61767F4E96A806EB2F9BD201F6E6DC038F502023C497038AF24D
18D172DB9F483B4E3E83C8EB5710F6663644C98EC8E5B7B915712E24DBD27DAF
0ED9A06DB0B8526829AFA5269D4359C140CB766C2C01AD11EBCAA0CCCAD7FE46
DD0EDCADA4C675FAA155B7FC33C2D094CC938D3028CD9C816531D1935D797FEC
9C8A4F0EE99799B749830DD778D32B82763D3C8145F36828B2E22D2FC9B9395E
4AC57F55BD24CFA4DB8AF129D60438400E05A563D1C5E94BAC3B26EE963F20ED
E5226410101C5F1A2A1BF6C0E250441EB8253EFACB7A0C175D8C20994382EEEC
54C1708D1D959197EDDDFEC4E1B2455340F3C3F48F531B1E9874467C254D74D5
09224486132EEE09B37359AF0F3CBE0974F6F726BC0667CD2815D792F538DE5E
98576EC29AC37EA1FAF071F3E95AB2677995ABABB9715C492F657191886B8DEA
57B290F130D83BC8D134CF2C55180CDE4AE8DFA96614F932F98837F99FFAF786
F8D712D9FDC750E356E526DFF66FBEE70DB6DF734558A0BF29AF1758A378BBED
787BD33E55BB2A1044BD6E6B61FCFD3C2BA11BF41CC057445277C892BC08D304
16E6BA194D5D0CF93132B57183592062C082C2C9FBA016F96E07E4A3DD5015CD
8103C51CB9F50407BB009C016ACA7734130A495DAE0A3681F6951A6619622C95
3286A51C3454FF7B226C0F00192A4D11BB33844A8AF73E8CF31C5D103CA1E71A
5EF7E6D1FBF36ADFF99C78613AF62054AD62B72B9F7F8CD99B30A864498651C5
705B19B8FA1D04A449ACCC37AAE0A02273A47AFF1B04BE920C5691FFA14B024D
A5CF1F78C47032F4254234F3AD8162EC7A6E7BDE6BE19ECA62035AC6F0199933
7A5C0174BA827E7DBA9579F1C0480C7D8EE5CBB38C1F0683360F2D3620C78D7A
8335EC6EC9E3D00D4B13C28573A8F378BE218381B40AD0A0DA786C6234FB98DB
869DF298DDA3B40DACF05439EB43D1A040652D8AACE30E28F471170BBAD96419
7FDC6B98342CC97C66CBC2FDCDF26C429A9D806C2CF8ACCBCDB6B1A461462F8F
A24612993121152E7903486A38A66DA289040D44986BC913F0D27A0F909C725E
BB3736777C9C1DE3C78A0AAF7A2F54CAE2AF42F220B39879BD2073F645753185
11257BB0F4FF5BD90C322EFE02904D82B25F873211E6E5FCA3CD97602424CC86
C82457AE163276DE2440AB7D64F3C4CE59ECDFEAC1757EC1B7AFA8C0D2E40319
464756BD98269E94F3A1CF3CB63E5578DD5A422D7570CAC22861F2CE80AF0E90
1B47266945D9077600B0399D115BA2757BBFABA2FC89CB8AA5D5C034632153A0
F3F3C15296D649B8D34C34ADB130C00CE8F0CB560A545A701D8D93659EC8BF53
963BC9A46D3071218A789E40C1E604CDAAE1437EA4B5A9F08C5EDE78A35CBA2E
22779C13D879C878A67C674BCA165A235EA7E738E9BFC0538F1AB91BC3AE700E
FC742FFBA113F9A622CA32014F3C59B2A872BC0D0742A314497D1A96FF2692DB
C5AC368170B1253D45C14DFEE37D32B16BC9583A0481DACE57A09F962CEA19BC
F9859BA4C4E5A2A93D78F46AF4F001A38A392D32DD65FC5F9B4FBB53CC6A863D
331503372616C33EECCEC900FE6E519F3DF7A42DCD2CCAAF1409AFC8471E32AA
716301301AF688FDBCE19F660EFF434749375C2BCCE37694DBB3FBC2494E5B36
922CFA25B6D7FBB581F15999E2AD0B2D9CF2B5E5126521D740199C6F9CEC0E2C
85F1AD5778B9C7A21F225F83C4666E90BA30045070FD4D43872BC169F92A8906
7FD7F556A64122283CAAED08172CD2FFCE0791549217EF2E24242C03E9E7630E
ABC9D0D92569B9FB7D454654E3A0C697647502CDF96CDF5BF89C973F9098F178
4F5710BCE380637988942DF5ED479F0C481FB28C4E998ABFC56EB7BFA0666205
F30BCF8586FCEEACDB83FB1ED4498C8DF7CF980657C772EC08DE1424D2420E1E
5A36230603A931DB3235C450451C550EE2767BD8B638FD67128A67F1C0B014E2
B65B5B073097A0FA8C83E4A6778CFFF1D5B63E09984030E08EC7F70BCD012FD2
8AE7F2FDA020994517AB2D708A7FDC8F56772FFB7615A3D0A6108A938B6FC80A
05E93A4C7B16C5FFC37C0CF8F79FAB4A506913BD1DCE750E1776BB01274017D4
5393174FDD84A2FD240E5FE5C96CCC5C1C23F50F9FCD090629146BB9E0D14D16
6301B0DE01FB8A840D82FBE6744617685896ECC88F4EF26519015DD68BD23C5B
2FD8058399376C44977C8CDBD21D35CA59D535567B2F767AD5FA9572B1A13A43
B4F109FC99CBF5AC6C3BCE50247117736D246BFBE2295613268FE8A72A2FACA3
82972E03E80E02797B148B8941DC4D4E345D3247F9243C1F84255758FF27A937
98518687DAB6485BD89877475BD1510E122F296AD42B80E1A84E2B1EFCD4A73C
CE9CCB61D98C5D68277FFB2D9EB5FC10D8A73FCEB529F97D6CFD220CD7012912
69248EC598904C8288674777FA2A33CB125639D0F9FE44C80D59CEAD71480407
376C48587B7F4F6BB6239582D303AFB488E7045687F73D78D9C5A4009466B5F6
49307B9A07465957BC5C6B1992738C9946E00ABB47AFB14ADB9E8F2A48779428
49E3226F6F19F8454D6851E2CDF7714D94E9ACD15C96A5EABF0254F04B7FC03D
43F47C6F57205B449FF4F69E28C870F084A5A74282463F05F7D7A3DFF807FC56
1F0DB554C056A1DDD7E91101B46493E984921382DAF90A28C08968617F7DB91D
9A4A2070324DC9B2B6C25A3BEBB51FD8FF5FDBEE982D2A30435544899E9BC5EB
5917E0027A59D6F1575682E6A86792FF4B1C2312B53F08DC136E04A3775C1BFC
36618212EB8AECF13057591B11405D64938D845D333EE8F3AAAF56159B79B90C
6DE8FE799CFF1FAB3D732E6711889B90A77C7B24EA082C8B28D088FB6AED9D20
E968C350B5FD8ED73B010EF647912D953254FA1D2CBFB7C4F51848BFE4F35F4A
C3C00A69D77B78F707C87462B6750EE4635C8AE1EDC41944F06E07EBDBC6F9BC
706A27DF4D0FE15EBC61B43D784D9C5767557453CF90B261222CF493E5258B4F
80702ADB06D0266F3D9FE1D8CFAE085B8D0F10DFE650723736208E747395BE83
F93F178D7A24AB2C7782145688FB0CAD53B15E49FF6F778D8BACE3B16F310E3E
879CB5A863F66122E702CD92AA10D303AD2F26505C48CF01F87BF3BDCA06EDD7
4390CF0E2254165A94E45AA7E25825A8B896E3B25231BF269CC3DF5D7E1D43BE
82C54BEE074D1E507431B6E0D4FEDA3366AC599497941221BDA647A4E652598F
6598EBCCC8663E68F678BBE53BBA04DACA0A51437AE3F14C48B8BF60837B4D05
F3A06161458B6C93A16028FDF41C2AA28F6657CCF88CD7F9D9FD45259198073E
1B3FB432D88DE3DEB9E994FF0C6A63BCD60C03065AAB5CF72BCE4473932308A1
D01BCF03969D5D05E54BAB30BC2073A5FBF9F09C94F7A89A32FB88849DE14B90
7CAB448E3BA4456FB13CEFEE5A57BE41A68148A5E603B1459D6270EFAD513CF5
C6D517E391E92EC651BE06F66DF633A58C0B35ADA03D2EFF80D46458A34909F4
25F90DF31A05969CAFD3ACCB5025F51618502AB62ED40AECF7C4B350822CAE6A
200A3CAB415B03402A7F706EA676E3B32425CCFE2BB1E3B5437216FBF72C42CB
EC9CA34E2694A9F4CB0646CA575E124ABA8BC9EB8A1BA17E8A296AADE1C949EB
984BAB5F5CEEEF19FE8BAEBA9E78D9EF578B2E507397E65DA587D681C9FF8645
F0B57F90870FA1CA880D932E8446CA06A8F09FEB6BD0C4CAE557ED66373B8202
2E16CF64A5374CF4C248948E397F8898FF76311AF3E38D762B175B089E488167
D41C9EC52335B36842A5949D8EBC017BC0B32E731B14F49F19F8DDCE4209B195
1AF23FF6818774BB8EA060ACD6C0A665667628C2257AA4D71BFD21C3AC407FB9
B5BDE8D8B0F73B4A0F7C640873ED95A850A001F8617D411C52FA69B880FE31E1
7B8C98207D65824F530A6DFB4862DF59AF2AC90AF73A923E2AD093B00AF010CC
D4DDD658D1C6940DE9E445A03C052D4A7069ACCBCFCB49FD9FF6D41DEB9F5AD6
FFA10BCC9D394C96CC6DEA04C27027236C04B7C52C98C82C77A308FC31AA0119
476362466410C94ED4474831A54DDC9F74FF46CB11DCFF101083933C429825F3
1A93B73E9003276E22FA46DB4A73A811BD27F60B578541FB21A36E4C6AD9DBFE
3DD459013001E4CD301F5FE888E50109568111680CF3120BCB66BF597BDE3FAA
223840B2C0AB5FA2B8E6435A619684F502CF64CE0344AF20CD1988660FFCC3BA
F798B72E5AAAEC52076ABE40258D007AF4A42C0A08C4DD7BB911A562CAB0A754
E5E32E0E8CBC71BF24F977396ED8DE3148031CAC69094D687FEFD88834C360EC
556199679E59EE73573363006AE373029956C3E372FAFB8C683BCFE474121FFB
E18538D9605748ED61D153F982B67F7B72C7000E4CE06454E524E354B73B808F
50AA332AF5CA7332019B86CAC411BC79646781C455C402EC30131776C9BDF634
5939F378CA63501FCD480F3511F823ECCDEA65D3C803D2E7C084C157F353AA89
2BD253E92228384729609261F8C480108F18DB35116FB37B31EB76342C89E15A
8034043A1BFEADA81814332B622EB1FF5A30FFA8EAE43C687C8067797C0CE920
D8251E311D67F2DF1CA3B656D9E499649DD7C3CF7F492FF2B9729D896A115BBB
4C4FB26D27B7617E7FE1A3CC544CDDF89A2AB03992BDE06FF6CF2A98E6B2E523
1E537A0293AC0EB8D7422315E7B80761EF5DEFB2B89FFAFFC5B4D4B8A99BFFE3
1D6CC6BD0529E61DCAC207A7101B46025334DFD3931E0A2C1FA9C4312BF1BC38
E9275A241E6A95A19ECAC3970EEB606238729B437ECFCCA3C74DDA592A6F3661
0CF1C3ABECE422FE20D669EDAAEE490C76CD606A0EF32E599C0663D7D880369E
B7121FA612B45C10DAEE2C196C45BF0814F5BE63C6C87C2BB3E2BC0477ACBFCF
447E412E412931A309E28AF755ACC233F4D753FD385140447CB399037A9C9B38
5348ECB4D1AA4B69B7D6510DA3D913EF22BE83A0DA04F43FD13DCBB18E462B56
FF0E253414DF79C50367FA9DC019E9DD684659B957CBDAFA0040F713C6EDF59F
573E7EE66BEBB62F5859964A7060DC4F14637E71EB29B662F85CB6CE131DCE34
25B6FEAACF65D8C833B81CAA6EE2E7F9C814594DE827864CD1D0B7FB2DA54F1C
53AF1809C45602051A73839EA7A6ACF836F194C5244EA130DD76A67920DBB342
8BE828EE2DC1118C21439D3DF2D7F68297CFDCF2EA91B9C549C560348916BF68
357885350CCD51EEC83132797DC14AC2FE27CC11934DBE9142C9406C0B293876
A239E92B6F7C3E83E1EA985E5AF62ABC2B2AC566E43458495EF125B6E89D4D27
C8809B34522F0F346F76214D85A7A220A10483BB229BA324E59A81107D778F85
7FFCF9EE4DE62209EEDDC3986FFE2AC22202A341932283488017D950A70713AE
1DBD2F74D3946BC91FE7502D832AE53000DBB00A27569E8C5209FCE232770F1E
B78C7DC42C9CB7476BF48C5C5AD70F35CA47DF4C4C6CE5FA663D4121FAB3A35F
9BF92B1A79C9C70907F260EA01EC001E45A592004E125FEE4463A6034ACA1877
8CAB39F30E2B365BF89C5B6797BE5313568917E8327408B43085D300377289F2
955CE364D9AF9DDCF26955F5809F8EF098A124BCFB704353DBDE62B96A7CD224
7A269A6C8905418FB78C6EC0DC3FABD85B0F740A54E8489F00CD30889F5CD3E2
92F60466E3CEA81B4CF988DBF2947CE88667BF0FE54A8E67BAB571F8BEF8FAD7
51B49A2444285CD25977A676569D603A212E296A252D55642E3F3B8CE807C284
91F62C5C29B0C117A58385E535F4E36475946A3C05037F16D568015A4D417E9D
19D5DDC5FF059814C1285D3C54A4DD511EAFC687D659DF6D77D61246054EDC8C
7A27E45795A0AD5374BC8F6E810994D64D1FE6765657E2994F4B5648E914A642
0EADA8A54DD0385F3545FACF4640CDC4A30C1745C0D9E8A74DB6D8CC7E9545BF
DD5DED0DF16F90F918BDC4147EF60655CC994A078AB65B2B2CB9C7874C114996
FE1616189D77F70125EE14F3FD8F77D0A81BE69BA65DC11755A9E15C08595A42
1931AB21F853C531720FEE8B797A4577D6C20414EA830FFC6172393B8F5AFFA0
CFAA2BCB8FAA79C62AFE5E7BE7A8356711A43B415C7F7610630F600DFA7179D2
09613923BCC53819DBDC25845C8080E6B82BC7C6BCF1576FB299C35E8389269F
53D3347370C51826A24F89930C9E20FFFBB921E6097A2067066E4C8A83178548
0907BAF6433D2EAC2F906CA68A0F125A0E7C1ACC75B4236EA61AA94DA9E6FB32
2B9B66DE517DB910FD9A709699AE48CA9FED95D736691B255C66C0530A1BE513
AC31046FC4FCDE74F19D8B865AC1BE70A472BE865F80AF8E942C0C69D8E3671D
EBE79B3C922234C3AB8B2DCC9F073C5E192B6FFBD4E8F566B55D4BDA83DA74B1
F6189FE0ABF7EABF0286B76196E350498BE9D9BF8BD69AB6F53264013DA9C1D2
85F15CE61E151F126F607D3AA7FEED34D4B3BB450CFCD7F125D4EBCD3EBB0C88
C5871E9038CC67BD736435BC23B3E4D5B2FAE102A8BEBC5D63381790A773F0D5
1E8A849F68876CE40626179DEC1527B978D0D2415ACA78AB5A380DD87CA80ACA
5E99B0DEAB8DD5B73EF04EAD7F459E317D6D764EAA95CD24078317F01C0E31E1
AD0603181E42EEB3AE47EB048EE8120FB303D064DF929E49A381C623D4224C92
7D32A783E8269FA95C40A00CEE89849E4CB3A2B629547DEDB687F8D676BB03BF
B767160E4D69E0DA19FA6F66D47BB06DA22301903963A84EBD4426D1848530A2
87BC52F1CD081ACF2464284F56FF7E9900D14C4C65AF4DE790CDDCB68CC67D68
56E1CB3AFD65DA4EF46117163E07E3317324DB9ED222120D6EAFED0A19A1E646
4D99BD591AF0221C60884078D20730AFDD020D7B2AD6E28925FD043464ACCAD9
AC58CA06A6C90A9C3F13C04777DDAEF187D624F7D78C26C1DAED24C9C1A228D3
7AE6D6A8480D4BEF7B1B51D84898E4963399EB39F34A90316A3FAC59CB784989
7E780D6AE24C3388DDE9AE21AFE51615B0D04938019F7DA16914F8C55BBCB427
584AA0022DA0F6268221F50AA7BC09F3067A70BDB96D6374F325A94FAB604224
E142F3A04DACDE5F0ECBD5FDAD9FF636EEE26184D68D56B856CAE3E31F9952FF
EE3FCB03B9A0E4BBB1B74C4B55454FE7AFA9E820E843608DEF3A04B4ACC0D59D
99093B8A1D3BE08AAFE98B3840087FABFE10C69AD508D83B173D6AEF2574A74C
EE1E9DCA6B09BA48D3445ADBDDADE18CC3AE4D070CD19B5533B0AD669BB39A19
49292A5CB8E58C7F68EED036993987EDFB19660639D8C32AF14F6C86A3981796
7D344A4BC9A5627ADC16BCE6D1DCB67914CD8EE411C90A03F6AC8168A3E71D9C
2DB7F07889F5B438C06EEABAB48FDEFA51827C5CF3244C90733BA17E4F1232B5
55E76E7DB86DE2F0CE2FF3C51F0E03453B9C20D98DDD52629300807CFE4BF7CA
BDF65A393E95E4064CDF619284BEDF7FAE6323B8DD02016294082246333B1E99
64BDA8C4625EA9A9213E24FF4AACBD3B8370088E03157F94BE57C95DE7E5A676
782D9A504B2A0A92DD2D6723B4ACF56291189A61DDB92EC67EC4227F5FD7FDDB
FE406BE332C9215ABB00DB895A75BF0A04581F8179EFC7FD16DD4BFDC262A5D9
EF7A28221C3E65642B4ED404150DFF0000F3BB7CE8DF403BCD30B857F381018C
FDE166F6BDB71300EBAF3DEF0B6D626B4B7BD2D7B6FBF68014A3F76B657D0803
3A0EB87FE36146A5E1A1673FA842B9D4DC8866A0698E72EBEE5989ECB6236438
211D9F4B80562B21C6D0B3B56750B42C980C4A27A7245444DD74DFBBA8CE1ECF
0B0E7E72560F3047B0C39C8F087A7E0B16B9B49CD927968CF7A34037F06CE425
2F7D914393CE1A2C036EE980E75A230B890A3C0F41CF34765D6775B0D8EAB1CE
63B736201213E60090EBE1BDF988EF8B1106D9E42E1BDA6433B166D9A8E4A792
5AD8459524D93A92EBF057FBD95B7177BD85C0AE98F43E185C1A8EF5D54BB5FE
BDD9E80DF48CD9726CF2A49D4803255A2C548474134CB1516BFC22D47632DB63
3FCE2A985357779D33962AA01C1302C92BB35F43D5B41083C4E4E64E4B6B1700
AE32B8333918FB10B7E5B88843B6823C4E3D2E01A9DDE02A6C453C3DC0368C94
F67BFD060EE610D5B8FEDA5D58BA933F1B3F399688355B9D0CB5B7A324892D97
DA24F2EE63AE5996B8EAC48A0004B0A6E50FDE6FB6B27A0F5A1ADAB1DD5E6634
033D42A8AAEFD8F32C222A02DF36E4A4F17FD73B92A53D535032B7ABE1136C4A
E216392EE45AFC9FF05386A0B1D7C64DC5ED7B2C47B50F5690DB190D72E0B3FF
C47FA639D853A99BFE6204D50788C6690E945AE88661A712040D5352E9EB0D25
3611AC9EEAE94F2C970F25336D66C4A23F343750A5C1FF6B34CFCB418964B3D5
F265BEB6F0A6AD8849F98CF9AAA888F83BE0EB837DB4418922D37F9EFAE47666
1170B476BAE2DA30D5937698573BFAC6429961E1DCDC2FDFA7C11B165033544C
C77118123B2D8BE3160E3A63528AE3E23D323472F819A5899664257FFA012327
1CBBF0E1B4D894BB1CBE6F6F759FDB4EF35D9DECEE6F9E9FC427879C7B563FE0
6CEBA1119AA13FB6FA40CFC5DB23384BB8B8E619666F6BFF72D385A5F23D03E1
0836307497EB6FE6CF8F2C6937B0903894F167C7878F66793F161891F0FEF721
89126E982E476A1F59004062E3B392D2CD31581FE961D5FF296038C01C6B8836
083522612A15152689B113A3E34C32E51AEFB4E69ECA9CA7703028C9CCAF37AF
2D0B4F8CFA5B1303FDCB24AD76FA946AC00E7EAF5BDC32AFD8FB3B6DB89D9BFA
B448A10364BBBE22AFAF5278C64FC7DC178EE3B234A44A2652C19C8D31C93A70
57A1E913B3A0921A4E92659245514FB48F6922432E8282CE634ECE7F37A15EC7
446C4AD6CA5696155ADDA8ECE3FC943AA32D2E5C81DDFF1E7F2BF06EC31E1B23
0401A550980BFD98493F6E8741614363ABAC51D01B15D0A656E152DBEBB5E094
967F7B448A0DA42C5E4565DFA6555C27B86DC2865E134C36B2FCCCD0BF95A7A6
2203E212877D6AB32B73AC3BCB3886A544ED09D5DAFFE35815A68178B986088C
78FD676090A1C4E6CBB37F614A52C9CF58B4948959A41B1E92D27AE555A283AC
738C07D29A254D199E1E1A3AB1CAF85D9A4FED05502576684A973B794380A1E6
7BA5CC45608100C7E4FC41F4D6352DE55998AB0EC6DEB96170BC4A62DF21E3ED
AEF4087D0338DB92FCC991DFF9067155649C7F916492307817C09D60F5709E73
747553F643A8A9C31DDE448D6B0B9DE5B2608A6710737AA5CEAD87992C3AC923
2EEB7069DD8911D6C9B1814A77BB187362FBBE662B9BD5929FCAB867CF26FBCC
1DDEA0E7B467F6629B78E0F7AAE4A9DA2A4C8057DC81284942E2F24443736EF9
9D7D74E2B52727F7BBDB94E97551A6919C06554CDCD501C1A5CC0B61FA663AED
8AF53B1D72031159D7B21C65E834A20B5DC4BF9862EE643C19A5B715F981EE21
82153EFFD1221003750A3E3BA941097090DDB3A1CCF76AF07098D4E23B82D155
89D5B59FA00F11B13F42547F2E2DEE7689BB7C935C447BCCCE52DD4727B62F23
7774FA5AF973D985CDA5BC132DADA68F6A069EBD4B0EA25D371BE16AABC61247
64D8357C68881E5062A25F8900A846BBE06206D78D0E6F4095B56DC85BC50574
1838BAAA80881D2952152485A610A2A4C3D954D2C853EAD28CE31581BF9A11ED
9F233E68CC10C68AC76000716AB56072F0A343B792B268788A7B2D4EBEBFE0D4
29DEBCC5AB0E31E8E2A16976863F160BBBFD2C717646CFED9B03644AD6664856
D62575FF45AFC56539492619F74996F8E31D4C00952FA29C49E2D9F8891E9F31
69AB7E1F3B20ECFE76748ACAD801654F0EBFFF2A0D21469ED034935C3A0DF3CC
35194771844C125D97FC9354DC4A93EDB7B6F8D6E63ACCB3B0AC0E7E73DFD6CC
BAF383B706005273D0DC72B746134928556628295F5FC3DDE2545C285483086B
1E92870DA7D8D14B20DA66CCCADAA2992016A59D9C57DE0C572DFBF92F05D5F9
DB94737B5EA1C9559246C9FA7B19017ABF12FF9B399649C76238BAD444D1259D
25FE2EEB8E64D3E1C8332CB1E5505E764B598FCD098B39B05469726E2D6F6723
52A156428349DF1F4C5BEF5185CADBF9DEDD098FAB6C2D60071A30A0F8763F4A
88DE2D7515B5BD877EEF9A45D7A3FF6192AB9CBD174CA5E3C7207F2E72652020
775515DD9CFAA477132F8F18FF7992E1E4A91082F81AB38B9240BAE84E158F28
2CD757CE2418130A3936C4504264C581BFF644F3987FBFCB962A81910C6EC895
060CEA9874255049838AE4B2DA0E2145BC7029E7C5A546B18710F67CFBD9F019
8C07B86D86C34AE5514A169249B8E0D49654899B8395C5B5BF126E20604B198F
1212CCC7F398B49BA94A1C65599B390B0FBB19589CC2B5DC72244559CFE4FB94
62BE3D4B21BC3AD46EA86FA3CC6BB876A70C484EEC845143C842566C031A2778
215EE61010E3AAC3CF6AF4596330893FB13ACF3D619E50B5570FE2D38EA22941
B1A3BA9410B6D7FBEC28C5B3904355FDC5A27F93471CF3D7A1E7CF174EB850EC
402F70F4C2B40B828B699DB6E927E8426C9668315E9262C14E42942155B5D7BC
7DDB0964F8B737D0DB9A55499B4CD02494D5D2B2F98563B3798DD7E43F5B8BC6
E8F2D3EF075685CC108C6321EBF1CE9DB07BF095CD0162CAE3007B3FD98125E9
21B90DFD888C0DB701D9987160E858F76C4FC6FB92518A430E37B463BCA26721
2F3D633FB6F8897365A8DCE3824DB16EBB96A0A60B69D42670FCCCF75EA6712E
9A0EF8C279D4D2091CFCC5CCBA56DE145483571C27883C79BE00CA305FAA5DB3
FC75BDBB26DF2099D19B44295AC8860E332E799AF9968FA531452C7BDA4E215E
804CA163567DF91B7495AF1A97FE884BB6AFC9124D1FF07CBB0DE17C65560A0E
E4086619420A4FE92989C389DC19E19CA5DF2F8CD34C88521E3FC4C5D21AFB88
D09FE4D1FCC0BF34D8B3E423AD60CF277D93A79D9C9F27814A36A0552D667BDB
2B7254EE92951E4A202ABC9985E5FC97D3B64D0C0D12BCC890687069FA3292C3
1EBC810529DB9203BFB3D601BC9A493167DAF5A24BDB9008AF30B9DDD8C16DBB
6412450254EA8E652E349C864499251C58ED8625081CA97C66B79FB0358C14A4
42E796E118C805CD51EEC83132797DC14AC2FE27CC119DB1000C79502EEA777C
945EE06A5FC0B48EB63A11723A980BD3D2430F0348D3C3EA3B03566A9A9F7390
BC65484944BA86FEBFCCBFE37755C83E58F5F1C05B190D1F2C507DF980D3D0A8
F545BC050C14342FA02E982F9ED1C700A5D35B4529C211E841D398A309023373
FF7541FC76BEF18074C2F7C4ABFC5589937753F78644B84FE0C1597DA770C763
050D8E3ED64E519211622C953286A51C3454FF7B226C0F0015DBF559DBFF78EB
D97400CCE7329E8B02389C3944F175AE21DCA9080A4244F4405709FAEFAEC4FE
5D78361D83B2E44B9D8319141D0F6E7256C2992891AAD7BE21F82B1B5D1D8C53
8EF52E1DCAE2C65525E81006E3B598E3BC4FD03E649B25CA5839287A1202AA09
DF5554D8F6B349358155769EC2CFFDD22C780278D973C260B49A84A94B09C4CE
7A255D99F0E55E5292F4051D8085F01346C072A1D4B9F9539CC6DB6EA8725DFF
75B710119CC0C4DE496A308467D061AC90874E506E329C2B6EE2B9E3E7C9A622
D25CB7505B7F59ECB9ED4624A13E91220E40F1187F7D48836FDE9F3379C5C56A
A8118BCE62A09AAD018D5A99CB0572AB6D4539424239C618F1D92CC3569A6302
537543CD21344E73C74148C1ECA13D4EF8AEDA625269D6CAEF08DFEF5DFA13FA
CFFF4D162186B006A0114E72AE6EA40AD3FDE9687B9B8650121ECA94DA4B81FF
539DEDB60DA4F348D0466D2B1E9877DC93590FA686661BC239069DBA4E530C59
16F2E1C4414156DFE0D783406699B4EB9C19EDBDA4454A0BC2CDC17BBF1B9D09
E8AA2859DFC7AC37AD2B8E1C7EA1FEE81E0E0280C9F5E6D3B21F23CE31F9A135
E9C9F21A4880F658673D32C02CA919AA023F208B63AF2A8BF64F9D02F492AEB2
0C91A659AFC6F867A0A6B1ECE5DD1CB1308419481480BEAD3AB69689DD741141
86AB91EE5560BD5971EBEF1D3FAB9CEBFA1E77000BEA0616289C2CA6D000A7C5
79EA6EF9325CB2FB7A8C8D94E995007759CDB6B3F043AF3190250FD36EB088B8
ED72E4CBC21733BDE3617AE87112A6D7625392D898704404C2E77DE570C4D780
5D7D6131EA6FF4543B20D1038C4F5F642B6B11E9390E4E3E15EE9215B085F4E2
BAC9E4F7926DB48F26C43D640C5D23EF52E21DB63C14CA2D319002E93022A06B
20C2DF579A8C1E5ABE859A41D02F87F56AFBC2A23FD48660178B7B0874A34BE6
18D122E422CE329C64DA64F101A4E9D473F04410781EB7E8C18817BA3548735C
48CF24B40DB189353FC68A7CE650B0D9C5050670A80373A26A6E28F8E732D97C
D80D444A93455700B6BA8D030BD0FDFA7475347611DFE63DA3C7CCB2381E3994
AC4390023CA4F1AE311FF2EE131507FCFD5FB85151B2FB02A3082B99772D5853
29BB96C627F150F56411DFF1142BE165D39AA88F9991580E0DF35EA042B8328C
151D5598D5C19B709364C96DC39ADE17F98092A80B169FF26E437A71D11F4015
1AC740528747404EED051DAB07624E29A1248BE4A7D5D8F5594456DD2B434C59
1088C6C5EBAB51BA25FCEAFDDEACCA99724FC626680B69B14DC81750C1128A16
3B6C6AE0D9890370990A0C82D5E42B73D5D7F5E37C8646D08376748B18339A62
EDFB18EFDFFFE0C38C89266288ED4989602F09E209385799E8120D2A4862425A
B0E285395AECB9A0BB6D1590F4C85CCF00A9650BFA0DC588FF1D9C301AF90587
A45AE742E8CB5BC0853D161683C3FF6B0F15FB3102DB7A38D186612C889E809F
17555FFE0D0263598C96F4D3FF07302F7E139C437A8594A7EC882C325566C315
ACF9426DA9C531EAB0AAAB446819939C8130D5C14FAD07A0788B73A46567EFA0
9929F74EFF611B0D84259F62364D2CF76FEA298634FAF6FEAA218AAA0C9B59A5
602985157D55650E78400DED3058BB0EA6EC70404BFE5463C9619F0CED1B34A5
DB0D303FC1F7FB12685D7D153D09606ADEF295E469E1CCC33F10EA29DFFD42DE
8E35B865A390E8F2990BA00B0E5735E4E116AA0593AFF8C9F1C1510395F5A216
7CE1A9B1386693DAAB45D00CC7119107696784BB7BB9B715C44B89D580A3206B
7E130948DC99C33436A35995B50C4B3C3040FC9CB4675FB05CC1C8143537BE24
6A952EF7AF04AF6653D30FA1C96305B0D042E6D59DE0669D59D1C3CD1CD7D8F4
E0594879B9A9902F0A443E62231AAE398BCFF003A4C88B3080AC1804E85F88EB
EF7F6A91AADF2F5BBADBD746080D1455C805ECDC707AD400A976ECFD5DDBA326
9175FC9E27969653513BC90AD1AA715ED5ACCF13A5051AB18C70E661D2C75B36
1BFB67AF9124F7554505374AA09A3C188D10986596BA56AC3489DD283AD2176F
3A2C060E5A55B9BF4AC2EE65D46B7F96F52021D6EE28DA111D278B122D39F100
C9989C14AA92C83441168703C1504798399545AF9F46301DDA50258CF17E31A4
D9C996E3FC25AFB2FD450883A1C46987F1E49241CA0D3B9F10FCB8905E68F72D
76D46B0E7416A6BD1DFB29E80A3E3409A7EB5A3F6657FD5B27CCE77DEABEE9DC
5CAFFF52081D0D7C775770F81C522441AA6FC658B946D96EC3B231046BB00C09
B952A829C1B62B3BE1171E90A5EEDBD4BC5D6DABA9931AAD290B15C8EA28D731
9AB777FB5F3A48DF5E0C7BC5C385E452011358C46C7990781C74E52869095CC6
E1B7BB12FD6EAD4B5FFE5F8B3C783D071BFD601E10366768E57DE708309B77FD
A513DFA9DD22980FF42F853EEC0535C3E56A8EB57949838E051AF8083F10080C
19386971DE077781A9E494ECB15497257618360DCB6AF7ACD21613127A407D1B
991B2076E88A66C109EB32CE5162701ACC6A0555CD1AF6BEB93F145B6B40DA1D
F5E918925B96B32B59FD01BDE3060772F8E547CFEDDEEEEFDBDE95252156984F
BD1A772D0C98151CC80EF1049B6DF073BEE1625B19DBEBE4C9A81AC1A76088F5
5AD341B449B1F221D0151ADB4DC2C7F76F9C2C1FA1488AFCCAD1E38F66FDB635
B6DBA6B6C90039854B17B866F4DD0C3FAA11C1548BA52C437A763810DAD7C555
CA7C1A3014CD898DEA63BA57C3A986CF2EE57D21563F33124B63BC4088ED47FF
DE196D72A23EB1351CA800EF63517567519548F9E8F505DE85B5F3DE5E608291
73637A19C4459148A4564BE33B6810E923D716124D08917E25579BA36ACDD848
205648CBE820C1E801454371263C4C2DA5CF247250C134FF33B4D987DEA76332
A98009C1383BAD0D43058F54E0A0A4A40EAE515F68E3DAE7E00E79197F001EED
096120E50CEF532EACBA0A0C213E6E213C54D6C337936BB486F8C5DD02CB6CF9
21713E79CF048B17E8E069E3703B68998E6ABB9062310BE77728C717106AB301
41D23E54CD1A8B717A6973F6C8202C9DE801E9AC5C250BC794C6BBE8A2AF20A8
48EC0216C035039A81FD90AF07DE1610FF94FC318AC1372022B997FB5B3B4E77
769007C7BA4846D6763BC9107AD8CD11E51EAAEC0F6DFE2EFAC5B7BB1C6B0951
AF67887A7B273A60D565A2A5523D202C6AB6C95B790D3A6A587952E2FD4F8020
7D2D1776961EC2B59901B8563C2F66397CAE44273E454F26C049C7D55BD054E0
58D3E91F27DA095BD978DFF769B0BBDDCE1B88CE115006FA816A99B8C1A37AC3
0B02D8F01E5ABE8CB47AA03DEA7749177FBBF1D1A1E2A8E5FC47B8C072D5EF7F
103CA70551FF970CF51155E5C7EC7E59F2A792A1C4CCD8482ECC9BA4F370699C
8678DBEA3583CAD63F7C9C77D2AAC360A11E9F5F22691E57EECC4EF93B4D594F
1025FAA42025B278EAB7D2698E8EAC37C0E0FFB7D89D00AB1F14DCC9623CBA63
6744F73CA49D06827C72F22E721B8D3C3EE1315859250E09AB8CFC3ED5156D12
DE4F56F06A68FA2AFD3D6C95D8D09E8CEE8238655E1CD86A57A7B51AB738668E
690261A5E37FDACD21A823B7C4D66A993AB12AB7294F11F5D48A2CB4A6BFA657
8354E3EEAE52CE63ABF9B840B8F8AB567C946A3C05037F16D568015A4D417E9D
1F884077CEE456A0158E08B0D4389D1217080B7637E29F81D81DB94102F07870
A2E8E5A22891250F62A22B3CF447ED026C34AB6B32B5003F5D1DF97DC028EA9E
D51D2A2942F4B5DD688729F3F255149A7D960DC304A2596B2B3B7C1EA96FA420
DCF7F49D550BBD233F4E1A28A299E8106180DFCE5BD9970794AD4A2DA1136404
E769109A3CE8A3740D613806F6E50CDE81BCAA85F3F57B143C06C455A8A7CFEB
9E33852E444155451033CEE9854685781D42ECB01AED0E8CAF02F10163A0C640
F9B7A4D3E6A9E866B13E181B368CA08340F96C9F0FA03DF00BA99FB4F14C41BB
B36ABC6294DE19976FBE728A7EB3851471F7A62DE9A66C31BF8A7C3329499350
657B0210DCA0B58494405D4F005DC87BABD036FD61207755066437CB4D69CF8D
5F88EA6E66D2039CA3885BC505BB0A5E985617A3B5A4C06130F8B9E0D5B23873
45C9FC48BACD6B8113ED913A287B930BFB1D34B257F662977BD6D6BB76C5EE35
D8F99D14037F8800B4F92F7791980612B87A15232A3246B9B5EA106E3A8BF06A
093A7506A8D323BEF92517B2A7265C3A2BC7600873ED95A850A001F8617D411C
52FA6EBB13CAA49D73FE3E492BA869BCB90A840609230359D7FE5105ACFA3D88
19F6D5C847C84253F5CBFFCF6DFF63ED1CDB2A1AFD5DA7E08065B0A9102F03BB
5462D5743D0BC0136E0E1F0FB0A3B5D6359EE9ECA8338FEBD226BA35B2A0F95C
D0373FE88F23767543507A3DE46080B5D041E2A87901C1544E6CA5BAFCB4FA66
2551A7BD6FC76D541D8A42B7F40C2BB584E82DFC8DEE83F6A664B904AD2CFCD9
5B870EBA4E44E8FDB4800850417473B03CDE88421391BC4552F3F7DE5CE57978
C770337CC105B1EA088685AD854BAA1C72B37A23727542A290BFA22D36DB2F94
973EE4F7F6CB9344242CF5BEFBA94041250507219F411B53860AA597AA94FEB4
B93F6041642E5CC69E5A25A667FE1498E484C8337FA2882C699385B3CD763CA3
83149F6CDCA1324574C10CCA301F89A1016CD07FAE8586587C702542D753EB77
E4B8C7606EC7A4352FDC1E84FDE32AE0502AE5F6674DA84350F6941A0744C8A7
1E60BF6FDE3D0553CAB203D9D286363F03E8C79FE8CAB8EB8A90C87CB9B8C64B
CA2BDBF5A1AF45135E52FB46B465E68F0751BD9D2A47B84822891816B148F098
CEE2A1576FAC7CEF116A6529B303B14A139466F7F62EFEBAFD1A8A5B438A5E8B
6E929C72975C388195E801FF09681AF753A44B5CB83AA20F43EB98B9B23583A8
460F3920EE91595EFBAC46D8224E8952DB01B5BFFF3B4FF7600ECE54230F2834
07962BE0F0D6A613125F1DFA12A582E39952810FFF3EAD5182CABECAC45CCE91
3F1DE6C35BCBE54593D56D0B740FC2CE5D16A2F1DBFFF13C7DAC43B545D993FA
632122F3DFCE56B9A46B3F7CCB4FE2804A58C4F12C1755B0743405A37702223D
1466A03ED9E0B34FC64F3F7052DFDF91D076228D1481481264023390D3075909
703754A099D21B332EEB71E7F30D8CD1D44BA54049FA840261F7A8AC9FAABD3F
38047213AED7A681E5C185DB2E6090B096AF42BD89F9DFBA07276D9B038B151C
E7DB96C60671C4FAAD3701874D1A999CAD1A5E9DD5390CD84FDE4D4BD0C5102C
EEA2096AFE70E806BCFCC5AA93731F1B39AF2C92449525BD879F6DB1FEB243DA
7334E31E8013685C51D23EE8A5693692CC404202E53DD9B4AE0FFF2957BA9610
AFC00FA3A9500C0B2473F979E3E0354517C3D95CEFF731C81B7F55E1B5EBC89F
F32E4F2275FE27E4116D23E4EF638B2102C9D074E798DD958F5122878CE9061F
6B56DAE168B6486A3D06624643633179731A8C7BFA5F6720A57985CEEF4463EE
DB89EA659786419D4CEFD3A8379888E6847DF35E1089C58E6CA58290DE0ABB64
8ECF22AE7B058E4BEB9C322FC1C27805C75855AE4E6168C756A30072E560E8AC
0F394770DC3A67EC1E0A7DA92381214A1FD3F69A7072FD837EA47FA3CBBF9BE7
F55D3BA986E4A3D0F269F7ABE64B951812CA25BB93F4C74A27E772F806BFBF4C
B5A7293D454276E34BEB4189B84A381014F052E527C49A28402DA2EB390CB691
0A4B8CC1B3FB81DC7D3C71D9E085388C0522F48377B2DDA1814B058ABCF56F56
87A00249476C08C473F2D74E66F11F3A1ADC2804A331BB052A6CF80AE3CE1205
40E9B650E598ED267FDE200CD5F89353F5CABF827F495044C23B5BBAD8BF1D09
17492D7546404C7C1519C03823C2A48A933B0518C83648300C8C4E43B1469DCC
89485C203539DAAC588F367E850F9D9D20AF0F734C538F83E411F7F963A4AFDA
A2C9B3B324CE432658C75011015A85920BD506F7D93A7149E9834F61218B4D78
6F6A9747787AB8FF470B58E55331D316ED13D4FDA2F3217D0EA0772D73E4B30C
8C10DA3CEB4B1A270938270A0BA4B5D424286B613E7D055B8305F38E5492F48B
32096DD2C6B47E20855A6BE4B8F6F84A98C9716257B4C8C333C580641E8C2020
30E4E23C5E0E7E8068B3828C8004F8ED72C495EA262713DA7EC6AE64597FC99F
8A2E285AC5BAC879B6A7E1A6BEA472D7FF84701E9B6D0C81879E4B5A7F10378A
9A32B214C5BE1649962B633652FBBE33FBE5BC95D6FDE1CF14B9D4931D8A85A2
B474E79B54C8D19D9FA7D310FA3231744E6822C4F42EBED743611543AE058CF0
11DB32DE6CE8F4217C2A536AA276917D6153EBAB1A18943ED301C3A74B9A9892
D7D8BF936947A4F690771D8CF895A44E006FB0DAE5D1AA760A9F9D70773A6336
9889DAF8A3F4E650EC71B5F697D86AA58B0E1C44B0D90C20DAD7602C61650E61
CF5F770CF68B05604EFD0DB86CBF7D3AF79CA5D5238E832BB031A0167D93B10E
86C8A6A3A25AEB631394A2105FC2D898DF5FA03E720D5E0508D07177EC8FAA74
E95C783EF9C330B8D63BE5C217E45A1723F35B6E2C376C4F4C10C3E992AC0D78
5978DA8F5D5D8547404A02528DBC709234A81ECF517B4CC78B48040A2C2E1E46
31D3A3210FFE661C7A328EF957C8FD243146B288A3E4D53472C704BB41A81A21
F8A1EBF4DCCD4EBCAD1AD38D6918BC3F896535D0DCF53C211D25A201924BF40E
424C83E11A4E961F1FC98C88E8858649CD697F1E4490D7A6F79A3B1804E61BE3
4276E64942BC748DE0F4D26B30D7AEA554D56A4462FD919D83D47B96C474DF3C
2D253A93EBC8E8EA72F0D67A1B5A5EA2C53C567618FACEFF7E2890559A898DC8
FC80408D750304E9FF5FD28DC22DE6EB332020E5EFA20896B346FCDE0BD41F4C
899049B9D263E077C857CF8618ABB678C8584D7296B2DBD186FA729C275FD32B
D38905561712EF314527A82C577E82FF229A45F7FD774926440A086BFFDB84A3
81E75A9E731920A0C6A237373ADA1EC5F97CF80AA53B258E61F114A6506C8399
6E77D5363F7D9A1A42782A51E5AB54A5B6FD12278357D86E46AECED0CFB8AA39
A14FAFBEECF90AA111D6B2A9F5E215EB4853B5FDEB03D898C4D98A81B0CB7AF5
F0CC81333957B8F14B13462B4503E3C69BAE617B77D886B36E1ACF3D6F3D1255
F2BF24D6A0C0E3D0D1237B3FD00903853CFB0AF7FF5CC56CE06532479E48E7EB
E15301B51935BEB2F17092985C4CB324B0007B78B9798E242CAD95C87C14CE28
BABE46707343CB8EDBEE2C196C45BF0814F5BE63C6C87C2BB55F2AE9EB10091F
B92378A0F11EA6E3E3EEAF334F2140CDFAB6206FCED453ED797E7569F71560A6
4FF11F5A302C9207AB8D55FB08ED70950205CCD156B5D2CC7D75E36B4BF5FE3B
413805A02886CB67B6C7DC2A325939E03BD8F283FB6832C1015165B4F053ABAD
73732F2BFF83A2C4705A21F0DE2435EEF70680BE2083BF4743110824141608B4
577858B3AF1F9B15C6D1DFBCF8CEE94B2FE3B2EBCACADC7551A0B27DE4174FD6
8DA8D6B19524432FF37604ADE5C1D63057F34DC891DE94B65D7C1119D443B5F3
E98079C749D8407CA5E2425E444CE4BFE3DF69B82A0537B9FCB7B78BDC97A2A7
CABF9426E5EE1D8F5816F21F6926B6C649CCF4245CAA483FBF263495C24FAE03
298A3589FF3C3D6C51F00D024E19B3717BA7BCEA10E299AC20683335D445990E
DAE51158AF491169D7F67D961DB0AFAF1AC8F7AB13296F3745582FC99EA49264
4AB4749884F2129D577BD8E0D6A709EB3C46BCC198CDB1BF7C3BD75B6570EF74
C082586C037943D51787BA9B570767979CEC35A112A7BA5703F749157850CB84
737714C5FF1616348C5E63D7F46F1773BAE0D265549982D5661489C3630B6602
8C851C24E992138E367F796267A935AE8275BC5DB5F2BD6D5288E168E18C8694
A3A60B879B02548D553D41AFA816EC666651DB40F9A6ED870AB3CFD68AD9ABB4
D0AE6285563D80DCD766169AA4C7FB4957644DF97E53AB4918EDBB380F7DEC9B
CA5BD920373223236E809ABE911500F603D9C3CBDA4D49347CAC398805FE76A5
95525801DC3F7858FA783C4A77551CEED3B63F2315B02307EBB7C59A4C458E91
E7EA641EA38F9EE6A3B08EF548038470802C99351299E0C9F89D9AC0BCF4FC76
BC1B14AC637F3015F91615AD5B51C29190DF0196EA40B596018CCB25ADB0E9BC
0B684C2AB3B549BB19C3EFF9588CAAD1E91F50918698D1BD8A16E33DC19E88CF
11D2E7FBC72B308375D15CC27E585290D239BB28B04F50B0AD2B41BD68FB69AB
1E18D1F0E09303F8F6B66442EC4D66AA2BEA81F9C951536AD69F860DA404DF79
64F93828B45B307CB9BC1C8ED0033F5C21F209D2E72434256EEFEEC018DF9709
0B2F6B5A5E758CBEBFBCA436780839D30460335D0C09F11613C812FF1DB6A728
9B648B3F5FDC321715AA82560F400293615747C1A55ECD147F205502DFE46F3D
4876546AF3EDEF435427C9861CC7439AD6FB5BE865954DF1600CEC04DF35DC49
777BD5D56588537AFCA8DEB432F8C7AE272F8CF645E3DEC2B1B054B6F2F4222B
4A7DDEC789195D75660F1142BD3B247852BA5D2FFEC29CD83DE07CB78AE20412
0A38B7DC25DC1ADB97C07BA247725297F233544E8E7745B780D4C3AF4C1DDBFD
88BF7B4D7EFBD124949A252B48E06B72248FE3C616424D955F107F0816BB0572
43B1EB202AF53BAFAAA87425813AC5A95980CFF8703071D204F98C8413B9EECC
5A4383F38B76DDD2B6E118FD1D46447893C6E02DAC2C2A95AD6D04F8F648A3A9
E159E8C4DB3E908DC4D0D1170FBCB19B4C29CE1E7B3EA19A80ED14B0E2822C98
D1064DBF03040D4723C95A20AE318067D4C827155FC7F5C67034F5FAC86538F6
CED04F31D121D5A39060F99EF165DDA048FC65A55CA2C568BCD5C44675717F95
45ED1B6CF4E70C9AC8DEC996474B810591C847D5BAAAF868B82BFAB5B0920C15
FB6356827BBDC95D7F3872D12586AE81E82B16CBE3D401AAFA46219D03EF95F7
7B1407C8CEFD0151FF96E6C9A152477E32CB9924F004B12E72F14AA63B127349
4A88F91767A3547C7B0B708E8E83150023EEF8AF053040F63F83679B918B6C94
ED90D38FC4CC493A71A68E7C1EDECBFA026796EB130B5C436F67B1BB1F239305
8EA3E53398D418C8D726BD0605C72B1E6EA85C135420996E76C827664C531E19
E9FAC4409564BB15100132819EB6177E6B1431FB9968C2FCBD09F3A9669D374D
AFE46B1D8BA04D7DD800FFC27F61F922465298B05A57E2F58330AE38D003680E
99D4CB3EC67FF81E7E67581B37E97E2E135403E4142F4A62FF3F2F1B1FD2D2D9
7CC862EAC182BAA1D89304BB7F34C33DC2667EDA860DBEBB45E675B626AFA046
D9996310ADEFDB391E591AB22D8413D1EBB0AB672BD3A9FB15C2C1F45D0E78B4
92BCF2B45DD711488E411E665174BDAA74BA5572230CDA008F37FBD0E34F5A39
203FC3A0CAE3D0B80890B00376917CFD92480C8426BBBE228D4F67B2BC065A56
AB2AA46498709C30B8CDC1EA5E6C8C4D85A2B9A839F13FC09707471023C5E360
CC7026F32A3ABB4069D659B9C0198F4DD4410C10681BA9970D09F1EB0B6B0329
E4D6AB773B2D888E525888557F699212FE56C6E5656DD9F30AE468D1CC587A73
2FFBBBF1E76F9279FC919F1CE11333FF9EC1DAE6950EF8D83A632901AE68F9F0
F7D986B1D435259F1140DEB86B9FCB8896CC25DD7A119778233E6D050F1A51C5
18FC96401D26BEAEB70F4589046205E35DCC46355944FCCE2A8DC48181C93F2A
F9BB4E446A741C043762D2EF5523597275369160CB05C5D9087768EC4FD5C0B0
940737ACEB41095C528D354C04B75469805EF51C5C3F8184C25A26420644C942
6E90FE287F3F28CF40C14149A5C14095E79ED8BD5642A64811CFF78285B945D5
BFD3B191EA195FBA58F21FEBEE568D8F67BD9200829058280497B720D5C8005D
2871DCD98E968271A4442DD96FD530D830E9CA83BABE929845EDC0E0514DB605
432A78E93ACF92274001003C1701B4393F63A0E779644367248FBEF392A0EE50
F8A615DDF5E02935AE52877E2F61BEEE56BA8F0F0A5F87EF6A1343CA68A22C5A
5134CB06C7C5337108B824A16D6C56CE6044AA1958EC6704446E1745E4160DDE
6E426A71DFA8CEDBE3D941ED9F4691482BE9AA9D025E2D00DFBA1D8FD928177E
96BE04A75CA35CA43B9BDA541D3F3F7DFC11F189864562A0E8654447F68EBF49
1EC597B14ED8888054E8D690AE9B7AD41755E9BDA7AC9C436402308ADD81568C
4A4AA10330C6CA3C4B828740490009FA1F64445C25929B54898BA9B322BBC134
8F0DB5AA7D0836B201E774592CC400600924B6E89D4D27C8809B34522F0F346F
76277D32C85B4CF76183A84C75226FC30DE2682CCCDA74FF8955008591A027FE
9BDB027DB398272531527578808CE3BC9F40CA6B939B4B19E81AB2267EE1EE24
E21D6D22B2154919E5C99CF62A74FF969A5FE2543DB5D8DB2A4DBCF54D19ECD6
F22A566F01A5C710C9CCA2DE0F7D05AEC38EE03F4789903C101E414CB9D510DB
4B98B063FA07A6AAD26BD41721C28792504B1B627B7A8FAEC8F49517B0C92D54
843A348F5EB04E5A7D952E716E8489F4BA4E3378FBBACB994A566CDDC866CD6A
1BCA855B255DEEF49B9E4719D0C3B184E4743D5CEB3FA12610FD6871875E10AE
13C40486C06770FBEBCF153A4110B175A3F0B35A3FE8DF5B26B24063A5087923
C9DFE0E482ED4FBBBCD1513D1400F7D25C10213141A7973AEF0CFA7DD1FF2053
26485885726C4D37772E094CEFDA321359F956CB94AC6E54A6805B74D8A92F20
F315D8DEA9DE0C16D035F7E98BA787ABDBDDD8DB22470CC69F55EC32E354EE14
A525AB6AD47FC4915ECA2038CCABE0DC8F5C38BDA398DCD8F7DA254922350522
2309C09BA3C89C21FCEEC282C0F00CBBB086037A1BE633CDF3BE8AE7D3DD8A00
47778F243F3423C5042E68A7EC2117F16598B835A0B93EBA22B03472D49949C3
E4E75550765A9D4B494460D73F83D1650291D81D3186DC7060235145CED66A19
2EBA0B01A33DED5614597763D2683A596EC1AD443F6E168B7BC3FDD7CC82352A
5F5D446BCF39A468F39169E608C6007D613F23E810E4D6750F7D1FB6C11FCCB2
0A72C49503FC4D5C87B370099E9D31543057F72E6E43E7C50DD0AF30437E7905
C7122C7A4727F610237BB3C6E242EC5EBCE79FC5FB491ACDD807EAA36050E7E0
546034C7FFB8C78DD1D43E879B3770745B774D879A7AFEF517A2181DE0670225
EF0F3B74E35560D21336AF2CE45CB7FD91986AF8C5EF8D5806C641C03A70FFAC
515C4A4979F33E2D2633CC89B943551A61A5DDE19D42A412BF8FCA62A6C6F745
E0017B9AAB750517916D071E58992201AC3BC10722A146D35AD8B8C46EDA6CBB
B90821443AA81E1DF859FE0738BA7DF2E9747F691339D47F8525D41C332E1A63
603E1FBF70E2B7B83253A236A14BC96D519134A987A1E5F9DEA2FF2EA4BD68A6
7A45869BB301AAFE06C0B81F1A7B42568636759FDB60907967F4E6D908882BC0
4DAD2CAB995370882DC03A1B498BD7F4910A13B23860D75CE3700A0B5D2E8979
4FD53C51DA3B8DB62C4BC7FF106E590E0A3B6A07408BFBB53441591ADB8D2F08
8F7CFBD22736D6CC731D5CD1C2DC65755635984354C341D631D13A8B52833025
0F9B6C1E277214C75EE3D6D6BB666B627C5E37F1402A7A7011C7A6A925FAE4B1
8844BCAAF617825376C975A3D68D5E225633352C69A2EE4ED4246CA0155A506F
C400660E6066CE391A194FEBD786139375BD8FF4E3C381000267B3F3C27E48B4
CDD5F28E74D7484E898FAD1B239EEF276C725B73F6E2282B5859F7E75267223F
4D999453690C2945D12A5DD31301E26FF0D7E389D9F69A15FC31DECB376B005D
46B48DEA1708EFF711DE24CAB53C624E64AAF64665B4933157850E03482CC063
B75140714BD3433C693FD5103CC1CD48ECC69088FFE5A8C50E470A06E687399C
040976A5ED4ADBBBA23F18710EE8CDCD40CE71191B725AAD72FA5E356E2A5D8D
9E991C2488354C253763AA077E58D96F07389178321C91DA25263E1026FFFB8F
58BD87994C46A0E66686041F090973057AADC1CE959E096B79E6EA0A91866943
0C2D10CE6A1C7B86A960AE9975A58D2FD308D990E7A12A38A89BD870BB03C5A6
FFE0ADCBD856D632F88A4EF310FBB601B87482C54268E19218ED3C46E96C9744
17F86785195CB8D7EDBF86325DD8DC1AE11DD1EA53FD75C1B9E686BDAF6D354C
7EB7BF8F031652AACCAB086DBE4F2592312E9295A42F6A8BD1210826A2CAD549
ADB2FD856C0F14DC71F3703816B50A5773D15DFE98595AF1CACEBF7299500D38
F983269CF3AFE49961FF9D857D9EFBD289AD0FFC26FE6EEAFAA50DC647AD2E75
440B4FAD19E015D5905B5868257D75AFE822EB97AAF4E7094B3A642315B5F1F3
CEC33302D11CB4A6025A8F4D5CD3B6E19A2893B59E8AEB45915895070514EDED
D66B6B8A904BBB58972EB3EEB45A26663E1498ECAA1DE52E45F69317CE56AEBA
0646F87A90BDD7537B3A45FA5C4C7A728B485BE2CFB3AF841391561D2530E99F
0D84C1B53084FFDAB17F0689478197F7BBCBC0EF7115D4A4D35B006CE68897DA
38C3CE29F06FDFC147522297D1EF900E89C176B981038192F37468497AEE74B4
003FEAB53517EBC2E2B4BA25D13424C1F6521925BD4FD8199F7DCB0755ABACCA
B38D2380278FB9B8E12D243F83720B6F934F5309826BF920C8FEAE3B226024CD
457DCBB77C99CED848EE14B51B2D985DC7522AC5D00F813095CE680BDF496A8D
3BC5C33D2FA1454D6F8D1A1128667D8A6123F3B3A1CF28F3A9EAADBA49B6BBE0
83CADC055F9B7AC5B70B198EC54162603F7B08387AFAAB7294AFDC13C77A652A
B41A25989979BB373A6F933FA2EA6A474D27C661DF6D1B4F71324A2B2D4A417B
3CBE7712F5DC5800862A54869133EC6A81002AE7A15D6C995D0ECCF1CA0A2E75
4AB5FAAC0FFADA14707BA164FF6A9C3687762F5BD8DFF8B5821AC9F5A3BF18AE
3D8E7009BD6312A6A94F0B83CA655E3F77F386E84F871631C616D951BA702DBB
FB654767A667EF5833E8AA271AA6FF9EE7A2C46F5FBACCDD7045E43F1122AB3B
2964A1A94722375C829CE3DBD7A74045E14503754847E28D80D27E7ED6309B80
4F56D5CE95B6C9061B05B22E8F05CEB48D8AF29878680DDB5D61979894557929
B02824B3082372E576BBCBE7B8C5C86283EB4BDDD86B6763780F749B448832A4
DE2BB999F2ED82D6FE6DF1AC459EA5D877F09FAF5C0BEEA7BA624F1678CAE9F1
9DCDF7A8F3E1BF0B7E35DEF4C95BE5545F2EAAEA5F3ACFC2B7A4659EF349BE6E
9B87BEEE8BFA77536D7DD4F5E299604685484AEE906CC1D0C7C8B61F85278A21
42CFD0DA1EC7CFD68D1A0034DCFE5323324B81F66B94E113B7FE4ACD1AFB8962
E0694AD01B5C57AACA10BB20E8D7E9AAC235BC863DFC095CCE0D9202E197FA89
FAE205FBDAF0D48E673EFC9F867CFA5CFC645BA2246F01C3A60624C6FE7EA206
A7ABC43ADFA0A63911E18D9EE65615DAFEC7C78C8BAB88D0ADDE12E187C32FFD
D7BCFF6055BC430DCF80BB8C3535B4B9FB06E18F986278D56C22EE0228761A36
43F2B9368142F7246AE06156B8DFF94B706E8D8AE6B117E7D3C959DA484A1F42
A8444CFB2BE42816F88A4B57D75E2159DF11778D9DE21A3807D9A49306545DA5
9BAF2E1950694B571CA23E74B4857731F30F6BCCFA7519DBB19F4593956E48A0
49BA3A77260A28DA1E4073F2400FAA3724BCE0A7DBBEAA7A6837C6005C87CDC1
1865B4E130C78FEDF193D57EB455A118F1A619D0F0D07BEAAF8EF667C21300D7
498A032F336C94C6B5D1A0D014B839DF0E55F2B2B654C70F5370E2544E67A667
EF5833E8AA271AA6FF9EE7A2C46F5E820FB3ADFAD8F5344EFCE875BCA9550E20
D89B4101080C83A2233E225FE8E33ADD89BFC13C446E58E4783ED0E1523E6E03
4C9E21115B51A31FE4025B0A119E5ACD131EF3B6A9B45DD69A8C860DC1923C7F
1D4C291991D3D3DB55F64DA03C7A0EB4936BBE3EA8DCD04131A2917935F900BB
8C11688F1F7C37610A7E8348AA90CBDC3D2628083C028095C2946D5B94A92987
86AEAB1BF32F9435C75A55E07C23ADA4B5E53F46EF208122DB50E39225441392
73E377B57C84214E9F17E252177974F27F1CBD85BF42C945299505C8D1E6ED3E
457FB5019F491D1C80A1D45C835CB096F1F3D2B30094317FF78D906DEB1CBF63
3184CB857E6F37A60DB606992FBA10D442573A56648C90B4F3630556291DAC3D
42CE152610C6DF152CD3864AA3BE4C1C19CB27324D7C879074AB93B42D625214
2BD512E3470B4B48B48C4D725FCB8452DFAAF981D62A464DE4CD35A743F2CFD1
8B26B111D8D5301A90A5007B4F7D1E6134534A315CF63222FDABE6D058867414
68458803BB26487C139269BE26D2B1D6586C5DDC45C52FB2AF2E61D48B8E8563
D41231D20EF5F75FC0E4FC155733F1048049C0242FDF2E745194FC2AD3CC8496
259C1C34A3F267FEE6BD0253CB75AADB6E27FA79787268DA8A08205A39A7FD5E
8D0274D057C0661FB2F1288087B9297A515FE9FC7665016DA0D967F960C989C1
676279A8B02F8854B02920BE88F8493AAB7F5AE8977F9C78FE65033FD1D17DDA
9FA0B23847BA58DF1529F54890068953CD0554E042A756CF3818980FE488F343
F260B7BEABB6B6F31FD236B3EC5A09301C4FE1A3554A0BE5B900C634FB0B67C8
CA50176109640891C8849017E6E0918CEF444AB7976BDB0017462647319E38C8
A5EFCABEF40FC3423FD3758576254930567A877E6F8305B51935BEB2F1709298
5C4CB324B0007B7F006147C7BD62E7C81C15367F58DA60B8FB88CF92BD2E7E58
06109053D04524CDC4DFD912571E0ADCAAC53A5371D95E9415C215BDE294CC1E
A28A7B087628F30D50357F4BFD25E5D4B24CAC9DEC6250ED68A11E61A4EA0112
F1804CEFA65F5219B7E0D59942888CA3344A2A061F5D409ECE620A34BDBE3C4A
F6452874A48286A97EC6F6B95D6AE664BB4C790B5519114090E2D39F9B2E10A1
98C51435611B0EE9A2B7CEB513FCE083D3D6F953E5A92FF5D95A1350644ADB10
37620E73A80441B7349001FCF086A7F3ABD2897BC9C6E0967B94210BE6981B87
B7366402045F9A3E8F2D6FFB210EA03DF00BA99FB4F14C41BBB36ABC6294DAC2
B055F58C584BF5F91147B362BF40B39A442E4CB26D69684FD908411B7F2FFCD4
DEF3DC9F36DB7F7C2D1E44EDF3C375DFD557FB92419B6F325B8D164C9CC386B6
DE03D7569D309DE3ABD986A816A753C636987F25062BE896D00A355A1D22073E
27FABEBB6D1013899A326BEAF8EDE7CBFCC3B265EC925765521A220B23631D60
DD4F03EBE1A0DAB3FCE827E8BD00C1FC41C0BC94DC2F6719580C687EAC6B9A8A
EDDE18506E73B4E392A50B952E347A9854D74089D5DB40B69F81A0737739F2F4
CD7D222B4FDE9E7EBD76815B0E7D79FABBB9A4EF04587F2CAA52CC2EA8F3AC2A
C686E1C8B946DA2420B3E3A9F7BA55E5268D7DC50670C4A1B9633FAFA4504531
70D9AB04D531540D097477E049267FAAE6BD028955844CF37C6CF03E8A1DC742
D72EC70209FB9D13E7D7EB59D7520502BE0F218AB9968C7C58E41D8FABE14467
AA88F49267F6BCE6792B8E701E97A57C400F062F8014CD5058BCC2B4B1565385
444EE30D969A1BCAD3BEB72E91073F2FA44D46673BC84C902C0F96CCF6F6D3F9
DB5A147DEE07FD469D989615447059365020C2C68C1A8E90FA38E1CCFDAD6F7F
50C98A81A5E0A3CCE1B4A24084CECDF954E65768682AE2CD716F9F26554EE809
E4FB6E07D5C45DD8185B0ECE882054EB1280852C5DB56F5E079D3000F69E3C4E
6440C769416202C10F532327BCB6353B48D9FD2FC1F70B3B0753E044C7840497
F0BE0C8E95BC94534E20C8ACF206EF6A61621D08DA601BF5BBADD8090A4360D8
29E3905EF92163AAE9B1B3540FE72F48E2A07DDD622086ADD3A49A8262B82F3F
53C5CCCE0DFD72D09F4029076D741277C9E3F07778D873CFBC936787F848BB96
BCF8997CDDEBEB0BEC00754B2523E1F4DAE5FC2541D8F0F7022C45D17F35791C
D367DFB0E6959D153664C8E79777CBD5A726505067072D05F424FBE2C6B0EA56
5B82CBF83B4D084C9603CDA33558BB5BE3A361587D96C24DA3DAA51DA35D353F
F5B3080172FB9DC92423C555A7BA87D34F159A019C918AEFBCE7B529D187450D
B7C0720759804CA163567DF91B7495AF1A97FE884BBE3DEFC839A51938185F16
8C6A6A80494F02A749CCFFF8D4AE93E1B54129F878D7655957F1D1D4A08C81C8
52F5F504AB38B822FA6AE823D871F573A44AFD141F8D4793CF5D017B3EC5E6AC
B2207C8D31AE88C4045BAFC095BA002E0282E54CB82EADC85D559F7B532371B2
DD6E1BADEC43FBE7154709BBF7B5F4FCFB450D390396F1D3BE6F94AFAC83F2FB
30BDE997D0D814B09AA8D57F86012F75CF894B148BDAFA2040ACBD6FAAB7F7E1
81866CC16BAFD8ABFBA9DEE5690BF4E925AB2CBF5FC9112BBEC8AEF2D488F54B
77554F6167ECCDCB8F16AA30E8644868498E8A20A9326D2B50B97F65E819E3F9
7CF8D7F844663813D94E02A66DF768750EEB8557870D8DF258AB1B3B5FDEC3BF
3076667E7E60AAFA4E6A0517429B9C4E5FE983D723218901374C2AADA17A2AFB
114183DA45B498D59A77843AC6C353271450FD3DBB18715AF3127F3BF2D53318
5D44F2E594FDC7C0D4075CF05CDB0FC9926210F711EC205A40E58A483766BADC
8BF2E2E73B4519F4C6624E146098A7CC2A625F0E6E8C091F6AB397296F881A94
578C408CE8F1F5947F01DE3F3CE50B3D14C45D0C8ACE829CBF1B92E822FB4D5E
3D1CD7E0ED86A61279D544E1FA636D7313E389833FC0F895F67585A228176CDB
B8E2F6E5774E0A44540FF8CDCBC94847713201F6AD02342E7FA9F592E37443B6
9E00A7497EA269EED8BDD7E2AC0B7F4E1A56A3CC07A5C157C2F198DDF0F1C33C
71BA45E0BAFCB1FB0EC2D909E6E9DB862EFF46E0C3EBA20AC324DEB5610EE7CC
AE6812CD2A46FECF8039040F4DD94817FC97D0E398A329F6A6D33D0E9981AF8E
E6A597241A94A174652222FC1AF1844DD2EC4C5C58AEE119547FF2C98BC1855A
13FC133D751551E44FC07D67FA41B6AC7F41E503EB0FEB09921F1BB831804AC1
744854AEECF2B5158AC5667F8941D1EC6E942E36B221D2B197363BAE2998C2FD
75488002B8E528F18147282CBEF607C948A926FBBBAA468BFD05B45966A9FD02
7D24216394F39CBCADA249D05E9574D5351381E4E156FC8A6CB88C7D546EE615
97174C8AEBD3A7D043213910A964F1C4B41231A7FFE0989C94884C06329D340E
E9580FEF514AD485368162E5410BFF7EA073A1898CF993F64F70145D467501A2
5DB30E22B0EE3B57C37B9541C373426BEDA8277251A46A054E3A47FFF6834921
0461A17689BAA21C2B4D9FC096678136931306FE5DA565D9E221BF6768D98EB9
819C25D60FB82101C19302419D3FFCEE293014794D2848C90120F48305DF3239
42B77D128367B1B596C4C6646D3F250BAAE7286BFCDAB3C433C3C255A41DE393
C3F338DF621368DD7980ED8268816F79E76BB6C87F32EA51A98D632626758BEB
6BB0B1B026882927F13F65357D504941120A2EE093A4DB1DB8ADD7EDE3FDB00E
6D5249BFE39DFA995FE559C111A64DF780307168F5F61A185B5B10A6755623D7
45676602568BC87422F32488BD7A144821070738881D6984C65E12F2561D2FA1
C83DCEE865636E571D423E5EF9C3ED577FFF138AD95FB61F8E764AAB335A47E3
505ABAAE0979759CFC29C39DB36046C197114FDF5F688B05D6FFE37FC04AB08E
BB404C17B1179CB9B5695495E8472DBC281516B620B548189D085A7DE13ED284
CB30CAE2D347AAB8A1F08379922A63753DF08F0F11ECFB15B40B2C1E0E081727
28FB0D3B21985E88A99B057CA525630BF0B5CC539DB7ED646D5E70AB70369AB5
75613DE69E901E01DD967318BB5A15CB2104894976567F1CD02EB36346FDEE82
578914CA9866AA3B971E94EE6C58752C49DC60183C156261E54D3B9237193F2B
A023C3A99342D7EC6A3ECE8381910E8EA5EBF6D1D3A4F478F27CA4716A24C681
066085C13AF52E30A962B0B745C7882C843B0438DA76A0A508D8A482DB042953
2C44DC36C90E4040F9F5A61B558BA26BFD2204E65C964009684F0CBEEBCE9EBC
285B2431BFF276074355FC68D1E1F46742DC29BEDC80CE067629EEC6526AF51F
E955C8390E34A50AB09AB871E7DAECA15F9C9DDC2F597C8D4B0F22614B294F33
2A89C5D1AC8A3D146E3FAEDDBAB41BE245A6275285DAFE01565E3C825B0D6145
120FB6F612793412AED62598828BF88EF4FF69F1D6118C4CC8F086836257D598
E87AB110217CA0E2020BEF4342118FC4FABB4EA9EB1409B5A16FEEC264A1B2AB
E4A8BE1518040B568B0E6B133FFF1033342A3F923AE79EA103CD8FD9A3278D7A
7BC0D790470FC8ABF6C6D279CC08B086858ED66C56FD2FBB5DC8E1B7256E363F
1E05B58EBFC1FDA7FBCBF4E95A64EA72B49219FA101B88EBF906930300E04CB3
DD8815B373FF3FAE53532AB903DDD1372D5EB49BE96BD3E210DCFC74F2D26CF3
878019E023EFEC35F208148F477747952B18BF2A6DB77D11924AA4C0D864190C
E11362E7C2FECD20203748F7A09CD51E045924E18F072236E1A8748A7D5604DE
D3B68FBDBA63C29C3A654AB0CCD858020ADCA1F25D1784D793B1DE31343AD76E
E645D95220FA659E5B909CAB9ACB87B7E448EEE8E075B6AFA05D27C8FA6DCA0B
BA0FF8FC4686BA17FA42C53DCC4433F6F5A4DE5BF8B92F3E864EF6214C20FF4E
EEA1303B6B7283508691DF91B27FEFFB46A92B1E211F0A7E41C25DA8A5FD1A53
2AAF7947EAA1E852C4E3DA30AF3C1FEBBD1001E7AC3C9907B0C67ECEFA041D11
8A831D0B08613BFFB35AD71E666E82909A1D825725B706EACA7D2E114A0B3026
2AC9D1AED22C2EAE8C22D74A2B439F0ECD711A3F3AB2A52ADDF6EA994693E91A
060B20BC8F255658FC52EE4892481E812E16DC0A0B26AB90084EDA0B96B3F322
2DFDF61069196AC298E16F08E7F4229B736986ED62C0B5EC292098D942936835
F17CE3FCD6FC5C1214343C704ADF4A6336A0FC0A6DFE97CB699795C6B28EE1EF
D3BEC414E8AEEFDE25FD7C6AB8543027F80109FB3385FE7C057DB10F0445DCD4
76B18E5A6683F894283C5D860AB55E7F75E7FA06107BDC0F67A82EB1623D641B
D081EAC8AC58950B2458A4FBA50CEBE9866481D723779B3785077D1ECB1EB7A9
DE664AC3242781610A7D9ABF942FE833AADCE5826309624038186B76DBFE9068
C401B8F4FEFB1A03D25C740DD13E70A4B7B99A037C2D19AE3FE9FFA7B1719B1A
80303481285D4A7E873A5CA158ED0E25BF6955E13DA0B4DBAF5ABD7120FE2647
C4A7AED0AE8FDDB40713F1B334E4A00DC79F2AE5AA29C2BF2C24F464D9A14E78
90C0EEE9CF1701FD25DF20EB1EDF35AE420344A09BFC2AFF3FF15AB4263412C0
CF0B6144C7EF6B46EAC3BD08457A843FD61AAC4452EE1DEC3D1F6B6D729A2271
41BE22081F24AC95E037CB2CD356CE1DA764DB690793B9F0307C776C20199A94
F92CC5C04C53795F47FCCE9C3E73DCE4171FBA5CFA3967E0AD61CB0A1E8891BE
5F6A0F27186072FD4FBB5CF834DB5591A708C83C63D6D636704552DD3301F4CF
13AA87BEDDA6BFEBF791C6DED55FC690590588C7DECCD1A395E7BA2F075B7C94
64095CB0228165A67C3B6481CF7F0942952847B83B1CC6D3724ABF09B3E6FAB3
0DA7FE41E5971F2A82ECBCE641C148498636F2E3097E424A09400BCBFDBACF55
99E93E4096B0733440A7CFD3A4259809EE946E53D53A3D170218D6025CB40582
F40135423C1E8C0AC9B9CF49F1E74131EFC3C072A8514CAB3695C1D6DBC323F6
847592E838F96391E81AC7C3A0CD11AD8D92F7626F295582A8DAD318A820B993
E2DE87AA82D152B57D8BEDC32037F7B8F6AF56DDA1FBC56DBE817F5F46A99A69
190670911945DE6356BA976B0EEBAEE903C1ADC3F4798759C824FA2F48C9A647
F33A5A37EDF3C905DC8A18D06A0B4EF2F9A8AA41711AA5B981D1A189762D937F
2FAF5C06C8C48AE0EA1169AFC8FF3EAA5F9CE57642F42A0329F3A8D525D14798
FF0F3B89649E52F055CFE15E61DBCE6B7A58F62CB64AD87EFAFB4289EC577E7F
CF4EC4DA0C8DEE0F0896819782D70BB7AF57679BE5AF415E18A35017A4F6CD51
8EB67C27F9AD346C4AA5926BCA7B775814EA226DAFAD36DF4DD86AFA2FBC2A17
9C34D6B973F354B99536DB47FDC323348F4505533B3348951B354102F98ED86B
EFF843EF4267749404BB684B2963742963DC7DBFD047B3096B0D7E74E351C19D
61778A0FB622C3BCF633C3C279219B1676030680103269BD57285FAEA5011FA0
09DEF82C70CD016F4709142DCAD730B5368C099027EC10365966AF2C0E15CECE
541583BAF9D8ABBA3AE91E22D2F5A3F63CFA24E5AC3C906F22BC8BA7367F8CE6
8790E7F6832BE9681D3B6F61B5FD7902194490A4C13B592DCCB2F7C8EE3A7AEE
45D01EFCFBBD1809598210DC499AB33BE474712C8AC479EEEBB609E8C7CB5265
1839F4CB6349912B6D9C211717CEBA43A9E636A15F4E0503D8166455F7821A44
C279923712D143F7DAF259952B1267FD002A4BC32320BB77AC0F5CE4C0F54713
F6863D275B80A24BE7A1FA9A103CCB198C22224A700E1245ADAD083028340053
36974DCC8EB91C8ED4E24B5E8CE82367BB323D235E008625AE3925BB9317209E
33B852CAF9A367EC7EF8F8DBFBBABB1654FAA5CAEB4A6D422DCD583F640E5FBC
C244582511812E6AE518BCE79640224A5A55EB75BD8C8B15B6914E926CFF97A6
4F1C3FE25DFAF601E2EB6615E557AB1ADBFF5D00D6B308F759968D2172C3A64B
B762481950453E6A4C70C1A2F0D275488BD6D6FD326504B4626F3B6FC69A334C
F98A4F749DB3175FE8E75483012477855700317A06B3722A5F085B140B01CFB5
3BF72AF3118E30CEA0F5B50B8D438BB1A27F8AD3EC38247C03750FC0A519E7A2
973BD8F6A6805837DE694BF444F28DA1C82B091148760C234FC559D6DBE273EB
D4D52570D2B55776CEE6DB0AA2918D88758AC01C1C98B56D2A1825D2039538C1
F9039951CFBB3E23E96C758F1A4FC65CA47AB5FDBA1EA2962F9F78AAA5215AA0
1FF11C2B68A1B09DF1D1D5B0A1D35D40B75DC47BEBDF404A8AFE1233B000DA62
24A25849DB41769242C8A4CE888A544ACD7953AAC7FDD231E2C797EE45C6DBF9
041E5A9BA77C4347E35DA9EE60065A2855A681ECEB6466C1DE8DF646DCBEFE1D
5B0ECE882054EB1280852C5DB56F5E079F9CB07F4C3F0D2B426D94F79ADB280E
5CC38792F4BF41F581A0F0E38E15B57643B5BAB496887FF2A41BDC07EBDEFBBC
D98C6D02341ECB3E8096EFED1249A4D4C40E53EB71D9592AFE1D6488FDCBF7F6
020D30C34265B2A2DAFC69673E1FBEC0CFA4EE9B14B878DED0330C3828D478B2
CDA73883350FB87C8AA2AA5E15A883FDF4C04A1EFFAC16373A39D52413254765
34D8FF497D54824EF6C864C8DDB4A24FA5CF4B9506054A5911CEBE088459F4B6
90053C9BDD7452363DA1BA69C728BEC47FD2C0DB0D4C91577EEF84A36EBB74CE
5B448CCA94A17DF0B4CC9629969E4E7A93AA015C7B9AD27C7C2AD53550C44DF0
8AA86E554A2C8375EBC30C0C8139D1E757953FB1BE0128C6BD47F628053D21BD
65812176A3F1AF5D53AC484C54DBFFF7F4CD8AC00E10A403A58DA94773BC1AA3
52F8DA2D320422F59F5B9B494EBA7C40428095DA11391A90A5007B4F7D1E6134
534A315CF6322F7939702F3791D3E110795F08AB34397B5323A1E24BC4D90820
EFEB0937572ED8008C31C9339C98FD122AF6FBF55D814EF3A7EA5711A1499761
D21D3BEB6CE2FDD093EBE57F1FB810A9FF2CAB4381EF4D3E16FAA75A5BD642F7
F50AE117B3A004C3CE8E6780269683C227C63DB2AFF09B42AD5F43A261FE7C28
44B47DE8AE398F0ECD9029C27E29AFEAB328E08AD4775247A6AC65DEFBCE649B
8FD474E1C017E33DB4E0CC99AC20DC2E574F2DCFB302E32204ECB6C28F54CEDF
C72A141246E88D14A75701BB16FD7C0442ED380125D0584DA7A58F7A6B32B701
6EEA79A99AB0622795E0C5B41B1D661477CDCCA069E8A3115B94FFCF3B201EF6
4087A0D7A93F31FC0B91C99F9EA3E2D2C757B330E711F92B0CAD43E2110E483C
AB7EE7C3CC1CBC1574136F0A0FD9DEF9F2F8521C2912240CA7811E5E8C10A3AD
069367C51173364B697555D4FCECB4C6BAA689AA8338AC2D98DE5438D0A898A9
5B7C733B68D4C703AD5C787C37A44435CD69E8CFA40997B3D7A361D06F65A71B
56E73C46BA66CB83D7102EEAB226E250BD21F87DC5821F113A5346D5A01E4C1C
D2BD437656EE331F4528AFC6E2B23186163113E6B7BE70C02F2AD0DBCBD5DAA6
1763A97B8BFED5C9ED874D5140196B9C9BB68C6D46FD31AB835029FD78E23E35
AFD231604B33E9CD14A07C37938BC8FE2375FF009BAC7A52500394D11AC9C145
9B0B3AC1DC1178D4F0B4CAE75E3BD2C4F506D2B39110AE5BCA227BB7FE466970
C6D02EB17FAEA033B10548BDAAB9C732A513E6E7FFF7BA620DB3D381D5677019
C0410C2596986A66BD5FE2E0FFA891F7C4EB8EAAD18A64B254F55A1926626D6B
FE9FDA94629F27215A8D8003DC914618828779D087FB176FE5509AFB7D516DF0
D1A7C5D828D78AD19704B6CDD77F3EFD992B31A94BF80E26C392220832FB0366
0BFE6933343980D5177913394E9A848702BF4BF090AD4B0ECBF3CF75D506A640
C59F906328C023C6CB4050C0C994D9CA0D4FDFA87C42ACA58D2C55258B36D558
DE7924D117ED792DA48B785C60E3C43ACB2A2DBDB772DE3BDD86015BEC640A1A
15ACD70FD009941291028439EC8E5B8120CB1EF3895AB2C1EE4471471FBD3811
52783F00287B40B1170DEA693ADB9FD2942CBA82B08B0FB8520B2D2D086676AE
024D3267A7FD5A42D0336AD7DC6C3925C163542E0160136BEE30A0B65FFA5EE7
503162352D63BBB21A2B3771D04D1508AA2530F3CE41DD1A4931D56552050C90
9E925129FCC9DA91BA99A20C34E175C5B6F56199CC1DABFB1266E7D29473536F
322D32EEDA3DFF2E9C9DCA2D34F5A926C8B49BE813657B78B7EED0FE68781C5E
03CC14BCD058B58141A8AE9C4E28C5CD9C57D1EF85E4A31E1CDA0068BCBDB28A
7FC7D7AB8169CA0055AF144D31DEE2B4F08790D167A5CE05F05FA039D6BB90A3
8A90C448FDC45A9AD65F28661BA3F3844CF09EDAD2B14BBA989404C59136847F
0A2979BBDDBE74940E3418BD0761534E7F66B84582583835C9BB9730C4539A8F
3EDE9D118B21F3F8A53357A0F8F20B9F2C9BFA63E0A4211489D1F7B87C4F577B
66232B3192CFE082F3FDA1CDC58E6C4A9E80245D9E8D139FD4346BCD0E304177
ABA73350AE6F055641C5D5055675F41C428FD7C65B6961A24EAEADF171B5C074
51A2D2BF3F9EC53E7FD41E02081BB5652A8679D030641CACB60DAD05C9A95021
8A3AAEA34711B3A47E464D6E91133C427F57B5F1164FAB22A3936522692B8DB8
234F0CFE3E8BFF97F1B6024C5B7F6182EC03BDFD7E3A1A16515E787F70CFE716
4859C3105FCF7D27C0C1F6918616CE476C12BF8BBF17E4FEE585C05CD754A63D
9D962E225BED1851ABB7EBFF843876FA648F9FC0971734BB6323136DD06D9557
B937E5B611113231331995FBAC29AE20B929FF470C1156392DB08FB514952CBD
1818B0B2CFD7E629D862C56A5046047DD8183F1C47A52225592CE18376277172
5A7E2D8B4E409F6573A6AFF563A1617E945251D4DB9CC0D55030DAAFC36137C2
18EAF4E5CA52AF81F8FB349F92790C94FF41460E14F7A1FA42886B5EB48EE085
0778601BDCF84E3FB59E4C7FCDCD4BE0090343F8933C2044B3FBE8CEA65C0A0A
AD834EF879016ADADE568BCE406978555088A101B9AFF87DCD042527278B4B37
4510A6AB4A2B8CE67E65E22036CEEC1313D7DFE60DE90966B9A2828948BFB443
AAE3DFC64051065E7DF448EF7C84CB2C70F28AE47A3969715519015F1BD3EFAE
E422E621D544E88D2C2382F2A0DA96A502BC592C69E4C45715AF81DCEB39601C
4CB010AE179F634499BCA5A59BEEE1B30EDAB65D4106CFABC41D1BEEE741DD5D
7C7252CE6C255C9216E000486D0F374F3C28D5014B39441148078B9A79E0B93D
C0658EF9497B91E5EA3392DFB333EA66621A56159AE0CCF43D685716F6ADBE91
3083D58F6096E0C509918296B6596500A1ADCAD26A4C06710978065A4473DD91
171DCCB189FE22C5569B2DB12A7F62EA82859475E9E4AEE6A93F03186A29C686
18A14B6426E1601068774C689BB04A12A787BDFD45A1524C0BA555064A5A9939
640EF9C73794B42FE6AA087682845F359BE34F5C7B2EA6C0AE9E693E9896CD8E
915D1A403CAE2EFBAEFD9CDDB8DD26B4668A54112210E50DEA1445D9E4CBCF00
219C25177CEA7B60F1FDBD8233796A985C0F57BD6D4C2FF0E6BA1DEE8DCD0693
9764FEC56D0BC9239CF3AFE49961FF9D857D9EFBD289AD0FF105B8790959E6CC
257721B6E05D0A0B2E0FCA5FA0F45EF03C7B79A772BCDED448F0BD7A12E7DE08
FBB569424DABA5009D97811CFE6EB8A9433F9683DC8FF7CDBEBCDF80999E98D9
13AB360CAFA62220FAD0B132671DFA148BE140BCCDE6A49D9BB3DC9C6B66DDC9
DF4907DDB687A20A0BC8DD097C9CB0489007C55E7B1DDC46274CB39713EFCE67
6B5A4DC2D5C516EB7AB0D7C7210B0254215FA2DC860C821999939E8FCE2E4AF1
F3B742DBEDC9C84F7DC4AB924469A87C3886435AD51AB15E81186420D4EDBF4B
F919ACEC8D5987FFE4238C435ABFC8AF9626BA82E9D446F1AB2C3BDC48A64E5C
41050BF63E4A5FE1307D53A8436602952B0069E3141CCE4BD9F112296C518B5F
7BCA43B55A7E64922C20215014347EE3FB1EA1379C3C6C352962499E99B977C6
8AB1C2BFD00F84467127921ED849FC8A2E00B1FE3903A941EA20902C10A8A266
BD000C1F88CFF5D5CA41BAF982AF57828187B9297A515FE9FC7665016DA0D967
F96C94006AC1D29F88AEE2695A7A04D5A51CB2A26703AD4D65622899A6C6590E
6CC234C4F66BFEFDA0E3209F2144A9749AFACD39FC3CFD65308ACAD583DF9EA0
DBEDBCE7C2C70DAEC483F69422BAE5259BC4899A9FF869E0C7A590D6C817424A
A190A49BFFE31D6CC6BD0529E61DCAC207A716397C048906F6FCDFB88C3F28BC
2BC1F61B40C581F0F67B4ACA89C65753C5BAFF0157B38044B75ED148C922B150
D542C633D5F831D38B77816F396FB069A7A1B81718F83E2CF4CB9C39E511C318
7B2905D5F9DB94737B5EA1C9559246C9FA738E8FB70AB9C0840F95692C3F07A2
A21D43EBD651E2AD0DD2EFDF6925E2561789BED35DEE30BF20A9F78C3B8DDD32
A24B01A9B3B9A5C5F434734C21D69233C4EFAE92AB125B6CB952450083313D92
043F767B03BFCFC2ADC69ACA26ED5D96E78472538FB6DEB164817D6EF7A841D8
9700FA18C5C831C207E817265F12D01F905896F87AE2C1244F0F988BDF5CD52C
6E9FCA1556AEB8E16DCEE02D08F5A6A4D87FC58CC8E49BD41ED9793148747A9C
56BE9741C4DF4B69966A789FA2F37D752A1E4B2D0A455510C6A06D2C533DC004
D6F4C7538372BA98001359DF6685DA7CB345F9EE10B250011EEAFECBE9630524
145232C379D553953F2CDA8BADB076B8B54F549DD498E95E04A726AFB71C2A8B
523937FF305DAA265561CE932F3BDD9D58E9B23F41B8D9381DE87DAFD8585239
53FF908E6C9483AA65287E4CD2A2FD2D948114EEA9B74F5F26E269300402EE86
66D6A0B14F8C33622FF1774C5F40A0BE909DA8D052D2E47A9725EC7CE8F536D4
6A8573ED0005DB3F493C27EFAED714C6C519EB71D59DC7B74B395E5028779856
7D7C9D79ED163B7FBD24D45E20F0BA59F8537C88EAC44ECEA47575CE9980891A
D4DEE7C73D21C57E5A3E8B6620D6EF04E1D9C61B46B3382E3EBD07631B419017
8F1303013D4910567FB7EF2CE341DBF1F245849901838630C1539275A5FFB5A8
A520F24A554538F9F058FFA2F1F9A03CCD8018068210F75F0E69F1664CC91705
16D38C247C26F078D3297B6136143063E662D47AACD4AD77F712825ACF94085A
AA33EDE9BD962A475AC8E1F0BF7B613ED3D4FA086B09D005FC25E59B029C021F
184C7AC4A71C1499C528CD9A1A562F1481E14A24873CFAD6873046FA13C0CCD7
5CFE65E1021AC55600174379E63D963AADCF4829603BBDC54AF0EFE06B684968
0003020A5F6C02176DF5BA55284F6E224468E3FC77BE36AF36B47F985273DE3F
8B8ED04F13761952D6B0C8950170438A63FE5988AF6CCD91700135B7E13900CB
00E970CEEEFEE7ED975961125F459AED14FD6A58590CABBCDA5A23002A9C413C
881A9AC60C8A3205F2507F836A374E1BB6758ABB905CADECFF5045C4FDD62654
4791470C2ADA76F476D76445B4E57E8BB34BF5B5680EB176E737F722477ED3C9
E82219DB2CC7D076DB76EBDD30D3E87F6F5E3C48CBE8B8D965A9C8751A7D6395
6B33CEB0A96B24304773A320336B2EBF2705E7494669BCBCDE44BE8806D06CE8
9A9748CBE05998289DA6CA9DC9E2ED373FEC856624120CC5EF4CE3599A4B1867
61649474290383761AC21F550C4E6A2E6A34DC95A521F43958095E6C596E84B6
13755AA32928A75EDC08F42E5FCF07AC8B4E9F83269A99D550366B869BB5F3E7
56F6F36D7E2ADE54B913F1ED476E37E704DA510B6CE01909C3B210F7C0C72181
F534C10E661F1FDED4396C47B44A9CF5140968E28D01F299667DB6DD0207FCA6
0B9A203E6BB52F0A303F9F87D1A6A8A3FD06A1739387577D67D8F0D7D850880C
9CFEE35F0733BAF9BA931D2557F324F090F290945DACC1CB2915A925B1655FC3
0E5A288B37D28585B6DE5018417C37FFED36B3A5666CC29DE451F8B60DE49D69
AD360A543C781FBA778BF64F684118D731F239BE883C519B625BDBFDF2E51F45
87A725A9A3A97D7C031F9E8B50C17A3CCC64BF35AFF4C0E96F32AB08B88BDEC4
5DC980A7D81E94B791742E37B7836B2B4CFE75EF821A0B671B02BA439ABA1D5B
F00773410D289E0D8CB56AE7D6934DCBDF383D124AD0A3FCA9ECEAD7A850116B
04C9AA74E95F79507D65838D128FF3049452BF0865F5E0EB021CADA860FED34A
1A7AB3DF1DA1BB4A889D63BE4846B75756EF5FECE785473BC971A57908494C50
597F58D5E44A24DC1ED269BD4188772E358CDEA9FBA4EC8948E59267103B89A9
393B7E0FBE24C3092C12D6A210723B19B70A1E3D2C1707959DC637E01A756393
4361077533ED9337DD98E2016A73BA08CE02A41D44D2F1CEC1EA112B3410C6DD
545F7C3C9586DF9EA0DBEDBCE7C2C70DAEC483F694218480E603757532E47994
F39FC77A46FBA5A7792944065E0B44CD3A7419E91F0BA44B5017A05D595A1C16
7DF90BDE98C0EB3FBA9F2B2A40EBDB3B5BD81189D378FF7222AE89822F3DC3F1
02534902E543802AF50BBEDBC3A65A16FA152620B7C941B0BC7A1FC3DE574AD4
3A2BAFA4423177A81F60D6763A481BEAB54B5A961B1EA3EA711CEAA9BA4F2521
67B5B199710BA5DAFD4DCA68502F0357A5A10DB9C2B6365D18C8EBAE755857D5
1F1AC8490E799DB96F4661A76BF2C44C86E2EFF409A646A38D55D3C26BD4C6AA
EFD8E6ED3CB1468AF4160386B1108DFC39C0F692A22381ABB95F169962DC7A42
90030E9226C944D0BC2AC6BB0C89D99EFAD5E0553E0BE2FB56F5CE2E7B2B310D
609604818F442492E7A33A0A31CE4A66F3EC2549F9CD1377C8C79B30E180AAF4
9289DE4F4865F7F6E917AD3ADE99FFD63A015B5CA29A7E73293A6E36AB59F789
32BA72D6FA81BA659F74D54B810354D27A96DC431414FE8C66A6A82D7D756183
861D1A86BA7058FF202F1C092367EFD9F77515EEAF2E6AB053EBB67063D0B6E6
419174661293E2B5215107D0DB5F63642B3F3829CF75DF156DDF940FF5B08239
6A1C7767895FB02F823B2CAEFD61B4F28A86B7BC0D53F1F43913282D7DD29BBB
3C8B395650CE735F89DFADB57108933734658AA3D3F472CA0B62663097C71408
FD1E8FD5A439DC8EC132DE74EC4917866FE481DF6360BB129CD5E9AAC235BC86
3DFC095CCE0D9202E194530CA4CDB41501D0765F7A760DD7A81CDDA23D860C60
4135829A69E2BF541204F798245660D00D61A6AF6993CA35EB4E55FEE036634E
FB88A2B1E1B3E791AA78AFBB56F204DB89A8805F8D70DB2B32151851C1B1D3FE
52DF6DFD04632DD509BDA481CB350742DC47AB3935C05BD6232B0B7023E0C157
F68E6DD3CAFBABFCE86CC6CAE184B126A68EBEBCC374E0C4505B0AD31AAEC036
756DD504B86208CF1556779CB2024DF4B5C25B167ADB2EC066F43838E2F2A55F
60E5E5492F176158E7C6505EAF27A95C5FEBB07C87C1F2A618F4BA07DBC3CA63
135E11DE3BB820F706BFB7420355B063D1B8816CC9FDB887C69BBCE78BD27F74
041732585B7FE6446BE3A48211D0CE805938270AB249F40A9310D3594B5961F8
65EFA251BBF7CE1AAA634AD6664856D62575FF45AFC56539492DE049FA37CCB4
19499D34D5958BC9670F372253F3807B0D5D4EF999C3F5F97B07E6C7C5BDB287
73A896DED910CE126E4589D622CCE2408EC84962AFE3EB4589F167F4053026DE
84CA9635BA972CBF9DA018A82B278A782BB40AC54D2E45D205E472E271E8747B
B8138E2115F9E09CDA43120B7C3E3998667EADDC9F23AF7FA64B863164AA97F1
AD98EE3605DB72BB036B1E48DC653A89EB1B3C0920F69BB5F389688C77133AA7
CD431BB67D00E275F99A3106C682EB65E26C9F0048B1100AD5B712B5289F43A7
491BA97C79FD63A4DFA958C1C2285C7ED744042B5DAD4759BCA3587E2EE7D64D
738D7E76887167562E0D848C5D9668F6CA5E21B5C583C8317DDCF841C639AF02
693C47AB98E4F439E7B114C105AA5AB4769D33FD660B17F1421A8F4A8FC35C43
D5504D5B341D7433EDF565679693803F3F6A4B542C444271924C89E11F2C274D
F3FB30F063F008B250818AE5C3E71703B4658803BF53B8EEFB197050363CCD7C
BBEFE061CBD5438FD62BA71A8755854323FE00320EE80A305BA418A6A77D5D3A
1E5DCCB9C26B9FF9D5C6CD9BDED78BF633D60A8D7384DCF20A308392C2265066
759C72C2FB807E27EFA2F26A639CF014D3C01432A9B0CDA15B2035D7D232AD00
0EDFD83F5B27AD775E4D26B54DE359480E5EFB6D31F211790A4AF9EBC6E2074B
0D160100C2DB33B93C581C86077920F8422483EF6D587F638339D47753F339B3
B3EA0878B51331C2D9EE7B65B82278D206D9C34252718CCEBBBBE1C853DD25DE
12B88A584C472AB89E041618890CFC9820CCC2FD1589A0FEAB4EEFF9B5E2D71F
3EB7F12E737719EB784372E539B0FA458A2998D349D4B7BF503119452C2D240F
B0514306E6483031F98EF3E460534B21C4F892A87C3190DEAFCB8D87BDA2D2FA
6EDA679FFE1F35FC4E6EC1D71DD4372EE9DBD87BEF54EAECA717B266D8CABB2A
BAEF03EE07C23CB91210682EBC0178A92821DE83747E516D061E5D52485D0CEA
6A16E2A7B04921F0B535C66D29F430C972B1466772117BDB2CCE83B83A3AF75E
63672C891F0D615CB63B4C8DA741023CFBEC1EDD7BA72202C71401FCF18FA7D4
EAC0F9BBEFD0B1D8F3749E05918796CCF7D97749A925E0B64061E2E6DC8B00E1
4101F8631717124D2437E3E6C54ADFAE7E3417414F0796D5CCBAA6F264F125A7
3BF75616E5C0F45A653D3002D39B4380916AF1B527C56376532610E2BEE2EB81
3B03690D3E2A16366827C0F914ED5F7579AEF49A3D4F22D47E425F23D66CD2A2
1DB7D648FABC1C7B0B4890709C911BBF24D742C767966BD1C113A2A3EC8B52F2
6C9600132ED94F295453173D7DF585736ADCECCFE5D7B9AD89060FC15759128D
6CCA853251EA6CCF7BB8E5682DACDC779F68F2A21838F750DBCE551CAB6DABD7
A96CD83831472E387EC192C5CDC49AD7EF03C476121FFE37C74CE40A27A60BCD
3CEFA28DE86CBFC36AAD3511F899AE3F3CE46621932C2779C837E5174EF23956
B13CC6966C7C49C63C15F8F6DC85CA1FCFFEAE49314DD1D9E1402CEDDD4EA57F
77261BED14BB6574E7C3940B39709E67CA7D47EE35F889A7107E9E8DEA4220BD
1958D7B435332D31C2662EA19C6571692E617EA790BE706B8135460B120AFAD7
B77DDCFC47413A7829EF7A06577760274BB4A254B6D6251489D1F7B87C4F577B
66232B3192CFE314D361F1BE0A67BA43DDFF8A63016F79C7D0E51AB1A8E4966B
D79B95BFEA07FFDB2155DAE8F2B567B5196C57C7516D929D1914D56A5142B2E6
9106C39AB70BF10D01225E7325F9077349C9660B3354EB94E282C94F6785DA2A
4AF9DE5A50455AB0D7F42116133015E2A8547A0090F0342D48DBA209F33C35B6
88B79664211B4E23A6D022E70A956DE5669AA70CEC4066AAB2903D44D3E79BDD
14B0F1DEAEFC70EA66C4A85B8F0097DEE9BE79D2DE6F98756090F8DEAE027014
24A6D49E48E54EDDFF1A11712C9DB927E5BC8072ADC6E6D5ACE2EB94B812E2F6
B429C720EDD9896EFEB119A8B3E4E200BDBFA2B45977D797C2B0A3D093805D77
3CD8F6A6805837DE694BF444F28DA1C828E311781FD48D89506CA77F7523B721
B2B9C0C7F9BEDA441971CC4D1A1A63811B6D5AE5C8C30905328E95DEA8E9420B
D1D5F435F3FF0B01F65FA4041B5A17F722DD86AE2E2E1BE2ED884CAFD3154429
E27A843AA41FD99D58F384DC27B11B307CA21A5DF7FE09037D93B9E987F29905
ECD40D7B7B48CFCE47D36E0DAEC3C46E6FF193765CC4BB6242D8A42109B864F5
6ACA47C3614F7E4C87EF01C2CA6292D29D19CF7313EA2C5610209DAB5DDB331B
5F224108ED3C9FF5239C62338F7EBB16856EF654DFC5A23E087C1019B8A18D41
35AAF7A384F9E683829329EAC3B744AEE2F5C10C13345220BB826ED15BCF2406
FF5346D85AE9C70DDCE2F3B6F4C0172F3218FCAE9A895D47D5DDFEF4D8409B26
CD09E76AA250B7C8FAD56DBEECD0F3C1931B7C7592DB1B5690D44EE8874E54DE
3DEE1D80A28F8D251D8FC77E9B350B5BAFEED950747432487A118BA9C59BAF05
6D8566E84939338769D1B4C22E9CF1599579A9F255C6640ABCAC65668B59BB5A
C7571B0CF0F6E4AF1A437A205F74D8745D4A72D2F2EBA5A39D9D73EA96FEF287
CDC621D1270FC69B310DCE8A8CDF069387E4FC34967E7E638F7F3C2B1EBF5EF5
1C5C3F8184C1AAC1416E57C4C24F340356133F3C323F865B4DBC1BE1FF10A2D9
E14CFF3F336C8E68585AB5F5A79F275A2A1DA96256A2F284391BBA9910455F26
12272AF8456E5CBE1A36EDE7E4745E67F5EF60E68668A1AFF4F803218EF218B0
3254F35619A3388AAF8BBB6E930447DC04BFB1D49BF5BEB231AB3C4D11196F96
534FA131F8880C15E753D68FF82458A3F80BDFF451815B58F2A48BC4D4A75E74
8E9B02548D553D41AFA816EC666651DB43077C8D23C7EA5DDAC811AC7E7A19D8
56576915F21D799F41AFA24A920DEBAF8931ADDAA4018C2E5403C6378F446210
43CBC1CDF295882A6DC1E6CF4584FBDE1C38774DE63836A1EC53E443C5AC4D12
EFC851D02FA1925E1C75F856D7C269CB65F1912DACA46B6A7C7E467659C2247A
0B252227D11A0C7D0D4FA04FE9A00F0384955B590C7F559A4868FEE581E04BD2
C3DB534D21EF12F5C72D2889C240E38F98AAFD01597C9A8068828C2FC1A656F1
A775742A1B26D452A51046621D3642135636487DC9FF815B75593A54A7B31AA8
5082862CEEF841B7356973C9C9CCF99167639A74B131A3CFF6C156F99D6D015F
A1C84E749A04D3F2D705D3E398F06A6E34D4F97F5F502F2F1C38C45849ED7F71
28A1E4F9059F4013A0DC7E2E93758F051B86D6950015F2E11263EC419BCE1D83
330A3F02F961819636683F4D66981384DC2E63702A461C8B3C91A9E69E60E8E0
0D5DCCD6DB9A8875BD02F05C5BFE9A91F2FC963C0478D72B621A2C964E47CB86
85EEA158E9459264BB59E8ED0FD9A726BB531FC94B29ABD54E2A04A2F2C6DE70
CE14C9440291FCAC3F3639EAC70582BC3F61534FB1B288036F94B31AEF100981
E983F653DD950AAA6837033B8A3EEB19D589A07484BC23105EDFC9C6006B4C9F
B31623292F3A57FD6F3A111AF2E42C336828A95C12286559C3DA15C90D564FA2
6A991D1CFAEC2921B122CF808EEF614A417E38BD071A820B5674662FB001D5F9
DA84FA530B89999A22E5718B122B4B889DD107F682D9DC53254F82BF9BF55D0E
2BE94086F25183DAA9D88552BF4CB5BFCF59D252D2B1D580346D913BACD84D3C
32F73829536DCB66B907CEF368DD836DE60A41642BACA506B9DE4635B4560DB1
2A7687ACCDE102B6A004A1E35440F1C51D8B70D386CEF204C596AD4ADA98E456
FF5E8B2A5BCCD284480DF4870F7CF2CB0C009BAC448920AB3DAA1D2A0C0B9A03
A2D56B133A11F29622317F5DFD2EFBD8A7F34FAE046B5BFAE92F463AA8E928FD
C8155030818E1A0AE6EF764185041EE4823E86D2D04D3AD30E9AC387C1F19B99
0AC59369CAF4916282963A4E63C94EB0C761385FD2070031BBBFEE54AD50B511
D423089B7312AEF8AE8448BBC999C83380DB23690FADC205ABDBBD871AF4056C
369B30FD947CA1BBDE47CD198B13609014E6BC5060AF69688676C2F082CB471D
295CCDAB8AAC408CE85FEA405E147F0A7844F49575728D150095141A55719CE1
59C757A9262A62BF096B816BF1E35CF6362D21D576445C5CF6473FB4126192FE
536E1BE29341C50A99F05379826C464A9D9065620C90BA79B89E92F80B7FF641
E5329F12B7A6E0B7AB6FCD44FD2B9FE2C594C71A3AF841F9E3D7DDF9F6052C90
699F277162CDD78FE87CB5FD72CD52C5BF57D8689DF05184265CCCD74CFE6974
B476778768A73DB8BCD840F8BCE27C810BDF93B3FEA8B05DAFA01D0670E5FDC1
73B68826B15F4A3D3F28D480DF8A789DE52389CAFAEAEE1C85F8DE9DF61B25A9
23EA96745FF9DBF2BA7652756008D3B473BB916526AC5C638471E3F0B4BC36D2
0494DBC73C65E4D6DAF701BD39F5357499F4D0F47CF5DEAC7B4C83FACF9F00B7
F48287F12F91058E3431EFC15D5D701BC2AF4DF194765FA41615F20B23113B3B
90B1CDC3016406B2BE245EE89B9913B0C20D44199D2E4FCED47D16F4DD245C02
4611B87AF35466D05A4F3C7BB8FF0113F63D119BEA96DA7996380E3D19371A76
6262D2B0F1B235F69092C4F07138FA11DCA0E08D087C4C5C31E87B059C97D03F
AE1923F2E29BEC3089D23D1400FA5A82B52D3CAF9DF409F39494094E3ABB50FF
B7EC58850E6C671E779043D6DDBCE847D0CDD60E2546ECB52DAF413816116268
2A719C6F3B84933AFA5B048D864F995A049EEEB890448EAD38BB357FF0AA61EA
82213FD463BC757AF84BA8F9203156073465C89E94E2DD99CF4DAD6E0C79A971
2AFA3675F133E8D5DF0C5BFF35F8A2A0417FC35CF46A9E1B11724CBAC3C084F3
37D1C46FA5F539AB365FD0B18765BC693AA01D8B1993A1E516B46FDEAF2A7EBF
7DCC63B8A8CF769781EA183632A45983041ACB5739D3DFC86495810B117F6C4F
5EF539C7229F5AF3D6AFB7F965E87153A0E9B0325FFFBAC924247D78344F5617
55B9E41186BBAEDCE77924D61C01B842371D586BA12A48D71A1AE571B2C8F53C
297A795976B7AAAF416EA44E2929C3989ADBDAA0645B2FB1C9E9DE3317E1BEEF
47BE370BC457EBDDCEC1B3C15369B27993DC7218C21F1AD30AFFDE82CADE3497
755786E9B81CFE349AE6390B2D12C84419356A6559A18CC6A59B07C19281CDFB
D8134E7A8F213740CE0064D79672784DE515BCC974BCC28E075EDED54C7DC65F
1EDC5757752C5AEE42439A73813E2D0505DCB485D184041E376809B55EA363FA
B4AA0D02D14E4FB964F1BF27180E6F9B009E33DE07E4B8AD21A297CDE5CF4421
803E88923E9D39A2BFA41FF8F441622C6E452FA02FE7E5F59AE61ACD846B7D11
46C6E3B6123D75DB1F5D1DCEDBA942B9CD8A5E2256D16A0550D061EDBC6080CB
9371F75CDBE85C999DE43A7CAC25E8A1DBC38F9FE9ED29BFF0344F303861016F
2C36103CE6FCEACB2997BA8D3BA07CA6D28BB0CE288A3797DD12ED8E63364572
4E6AED960159774FFFC2964E31D43CEB66FB67C91F57B25137A409334E3B7894
6CC1838B58331202A69506F715882AF009497C9F11202A3062F96C135C1123CB
216D74B6CE4E6FEEB5FDB95165CEDAC3F2F69E73F816A3245832879797A1359A
00936B812CBED8EC4F38D48398D1BD8A16E33DC19E88CF11D2E7FBC49F8DC58A
D6939F24A1305CE4AEE92C35EE3913999CAA0B9F368EC29ED9B7AEFFB9D6B061
E3880DBB6FAB1D048628CFBFA7C9BCDCFB67F1B66A4FB9289F805C2D36FFE4E9
EED628D02024F0464636ACF586E750152A9FDE7CF4A5D5D9B89D2074FEF3A86B
1C1F12A64E79678830CA6BED68B4C76C8A7D35841F621DBC3B4876FC8A9E07B6
9FA56A2057FBBD9C7300D8A5F7E81E23B770F5B44B0BCE182F2F1E9E66A65C92
C2FD4006211444A08347BD697C952B12EDA0BC1407B202F3CD1A97984FE1626F
2EBCDEB552CBC7539470C7635B953258BA8AE6C4489968A8DC7910808480E697
020D5F17E3FB346A9DFFC67279A95F558EB0BCE69B14184F53DDFDCD2D38A648
0F55E6619302A06A5A371C54631F3880ED727126F236C7905B466FD9D30A7D79
B732915E1F131F51421F247B76B1F3A0D2B411A70C29EA82E98341B6BA6B08DB
EE8D018203DFE21AFB7498B83A1EB5FB5E31E1F0D7236A12CF347E4E87FA59FA
1862E4277CD2769032F0BBCE60EEC532CE92E3B52A780CA54856FDD25854F2B8
8C0D3B9CC4DA476FA01462A5D96DC8DC404BAE05CA2B37B9D012B8BC5C0ACEA3
854CBE2B5CAB0B68252CCC767AD09AA9E89F389A52168822C32CD252C57A8D7C
A479E41A705B041B1D7DD01B0798E4EED9C98A5C5AB82839EDF3B2394ED87516
ED5E9CE5C38746DD5438066E81FBCFAF21DC1BF7BFF4F1E9B18DFC8638A00ADF
B3B7E687519975C7900E8E6AC46A6B33F5275426E269300402EE8666D6A0B14F
8C336174FD691D57F78E8F6191B05D32160590FD48126BE193D001126E4CDCC9
06D93CA8594725A42DBAAEA19D859BD09484263022862A1BBC4196B5ED09ABEA
AAB47BF1CC066C2735396E21EA48F9C155BF07D6FBEC5B7F4799C7AA78251241
B468487E923AAB0BAE66C0A3F52248D706E117DE48BEFC9A478CCE50474764E1
4DD40726C5DB38512BFC4CBEE258789BD4ECB0AEE3ABA7AF04C8C7464500027A
35CDF14657B3B91F8CD458C787BA16268EE3C4779DAE2CF1EF756E96EE74ED62
A1FB8DA5B2C9A3C2AC3A4D2A7A1D01761D3A68F2985DA3DC39D0CD46FDE76EA7
11B5E4CC2C47C607B9BB9E402F409F8487B1C62AE8311C4337297E0AE6D6E095
1510732C96CDE6C5F8B14B95254393744525535F99252AC61D0EF5C2431DEECA
F201264C6D27DD7392DC0676CC131BBB42EEBA080D82AEC3B3D1CCD428F6B0B1
32392D317A0B83F4042A4EB182380E8C704F5A2E99A7CBCE624911F9F6D17476
6075B1597E80B7D3FD49E1D5DECC4D3833242EA4B81A47CFF3565F70BFFB876F
8CE8766FC8CC7D99CF59DDB9EB967AC2EA971D21EACC4EF93B4D594F1025FAA4
2025B278E98BF9313E27AF2E207024697EEFE344F7665D5F1311933C412296D1
1C112464A57D0CC0A75083E0D57FFD548D50D30E853404A88A57346228A1393A
502B98CB045E0AA119532B3AC9D62BD413CB659FE5E1F9621B41A9489AF91F30
654219A488181CED5E21FB57B44E9551F10922392F1BD36CA84490CC556845CF
9CE1FE2B681C391F7CE3C0D39984E8398CC60723407C96840957E36A23A85390
4D30E30D0D24FF216AE1DE80F21E9030FBBB6E62EBDEFB50A9918A5BE5EDF99D
DC6058EB499F7CBF1116532ADD4A2D87D6BEE02E18BD1D8F792F6FEDD2A467CE
5B879433A41FCA23CAE3B6219F208AB8F2BA39E2B70E8198A1BC0A91D2520653
134D7B154EBF8FBAF1AB0D4645AE258D762C48923DDFB35C814F9758827B199F
D07BD89B8DA9F6270C0F1D166094875FB1003C099CCA6CDC0CEC89ED33DC4AEA
CD5E0E0D21CD6BEE8367CE80D26A7486E7B61331B0FF94968EF45E491DD69D2B
FB9CE1AAC29BA6F6C7272B77E369C596B9FB7B0D395E159F4159C91A453A8C4B
0DF7BC4F4B5901A2D4CC711BC21C6F969288B1C98A34F07D9E84DAB00C97D7CA
01CB56E4A805185090266DB5F94A02F61111F5A0D9989BEDC9464F735BCD4285
676CFFFDB8B314610183673447C953D4E4F31C381E4D2DD155457F451A8177E3
77EB008451952F7731C0AE1BB7E5593DC6B1BDDCB3802CEF8C40288B6251E605
E96825738C4A4E4318E4ECF9DFC8C902C044AE0C6870CE71FD97A50FB1576EEB
0F8F9BA1AF23F62F9D961827797A98F7751D0C1D877E5ED0F36B9D30ECB1BAFE
ADFF1F88EE5DD843BEA3306E0266BC78DB5BBFC1A5BE1AE5ABEBC87ECA9FF1E7
B3A9E1899AF8E8751D3A8DDC1E018FFC5A0C04A5516CDE50C766A1D10D44CFC4
A4282BA6EBCCFBC26B35BC986A3AE97CA91B20D49A4AB49BAC0E8B4E338CF046
79FBD0A3681A84DA300CE7755AECDE8F6114628EC4659C7CF300F1FA1DE36186
81CAA89E2C28515AD43DAA4EE956C5BFD22467E3B7B7EFD05F89A17ED427325B
42A2D690679A219E5E16585A44A290BFA22D36DB2F94973EE4F7F6CB903952E1
4E1D4CE8A149E46F4D055D9F688B1F4E58D4BBC56F4A177BE42D9554DB2E46B1
61E4E49D37EBFB548F6836E3C6C88B19890571C60827910ADACB25DB46042C79
41FE083B062CCDDB63C0308426DB352FE7DF1ED41319B985D05E5D449FA3B024
92DCE0AABC02E9E6473AE9140BEC5868844CC3FAC986E9DD62180631C8148232
2560B182D31C138DCA3133D04B600C1F59DBA1A19A54B039B213047A8B74D2F9
CF3C9D174083F063ED4FA103B9A077E5256FB20E14DC06904F068334B515DF1D
BF27F59CBB9D2FF00CFEB5310A2D264312F3846481881C0CEFD36B149E833866
B833AFFBC9E8A3DEBEB08A4B3F2BFFB49B4B37FB1ECDBC721D4628D5FBE1B1B4
7F21FA1BEBF9130D66AD3A0FDF616FA01BFFCCAD69DC857F9BC4C439E6744612
F6086D8DA8B7F15B686826B5E94799B7F6467891F216D731449159694228F4D2
17637160AA2F2774E3A47420DAC47BF25B05C23DD1529CB941476A8870BD1383
7B9EC973599754B143A96F640F93FA5CDAF5600168775DF39D63B6A73BCA2D32
C268669F7F05BD9E5029B6C79C0E9C016ACA7734130A495DAE0A3681F6951D88
631D89EBEFB2E3483CCDF87278C13FCFF6B1EBBAF52D3080C143C34AE242A6D1
58F294B19181AB67595AA03F149D827C7D61AAE6F23C168274CBAFA3FEA3B2D4
B1C60568E060AD7BF221339EAEA6C25ABDF9AB2A0EE201C51E84D9573C7AD712
5EAC63E25971784C642F2553ED0EEB16F43921CF381AD054FAEB77D6FC840E3A
C7988F23886F36580D1A434A3A12F0122A886D3AD63FF076777347DBA54C7F37
D23D71003681B4A816B378A2708D7A6C29B69E8B6CD94E3BC0B755824CE4AA03
B5130187CDF78B7441C0DA178687006553028E7A82C106679FA687CAD9B657C5
3F197CC43DAB3B962F80E756F92D16BEF6103E5CF2754103EB75728D1F9717BB
14706E47F2DEB90605D7B32DF7F0FDDD9069B5F70D43A8ACC48FFFB1B1CABCD1
73E02A43FDB79F0D5BF2DAD4417255A6D99B2BF5FD13F6E992C5E364170E0D91
C3AC5A586531A51EDDB35A788CA61A5985F7D9A1C4B39DA8549F0F91E4E7E31B
4185D5263AC2A471C49F923F216E113EBA7C3E77591E3F95B9158F7D49E25CA5
7AADDE64D74E8014531CEA9C31F2DFB014F11AF49EBDC17437C539AE998D80E1
FF106C2FE2CAB85520A7009C3E7618C6322D264601E92D465A54CCF9FEE02E32
96ADB222FE21529CADD71DDC06CF81005DC5BB9BA339A01EE6FFE00B1B1EF347
412F220FB53E924A60ED01FD49C73FB79B407E551D119851495543AAC99F4999
F1FD0D0F781B84840DFD8F117A79DFEBA74630559C5CFE047FE16F871F20F178
1BA4CD3A2F9C90076D40A8AE652D11C5A14A17B3118E50A9DAB080F871FC1BFF
C8BF8CED703C27AECEDCFF8E82DAF50A928FA7D8891DDC9A8AF0CFF1DC3F8C14
8BB281E50E5EE241D7548E3A8AD5390B54C8AC69A4F6E217F2CA0C76C5E9BE1B
D08EFD522E22BB8D781BFD3230CB8D3816C9775FCE5AEB083B329245E88C3024
202A175C8237BCF5B4CDA692576D0405DD501B2155510871D2538ADD45B6849E
B65E6701B1902F28B1254A1ED24539002C7903B80A04581F8179EFC7FD16DD4B
FDC262AFC9CCEE91089B5E98CA518B8A2106AA74CAC58C566D7B6E34E74AA817
B3E56F452ECCE1BF30ADDFF9F017C57519E46F89EB44F689E2BF95373747848C
48B104CB4FE1CF07FFE6254A979DC5B22FC7DAA79375D63476C648A6B019310E
FC5E308CCDBE76A7FF370EEFB742AAB9A29D15BB66503B57BCE16F96B585D149
CBDDE3DD98EAB24D34FFC716DDC4358E7EB05096C0238912226D571A1F937D06
20E9A8CACDCF1B1219BE525A61FFEED5E43716D420E8531710F3B5E6428E1F6E
BFF9CB7BCD1F4C3BA3EBCD91EB13B68B91B9057A7B8F892B54180B63D478D0A7
A28FD0AEDDF8F568D34CB44CEDB7678F96AFCBFB12C66C8B6CB9EB120B8E5454
B12E202399B2D2E1F508F68AD5FE2C5F57C9853C99FA7B66381E580898746A33
3855391F1397B90C8F3999BC05B79A1E96F4F6F731BCD5C2032D732D07343165
EB3BE7A22843BA8E6CB414B9AD2678A4D2CB42F7971264162BCA49A12AE6863E
5377C8278F980C58B6ED119B8F2ABBE1A24378414BA22A2FEB04C3A6A0FE09FE
13C9B35497257618360DCB6AF7ACD216131279963766C0165502A33F35B8566A
268801A7242BC3D367D5DC9EC650122E23218FBBA2174F6F42D4947B9DDBDBE3
49FB388DD910D7770583AE6CBD43B857C766245B65A5DC25B86B07F3BAAF56D3
EB3EE2DE129DC0FDCFC0EFFCAFB580AF74163C38AF82C6061BD48E64093F401F
42165F0D57D56BB4C34D0992CF23FD6D395989C35CB2D3E4F4FF08649652843B
5D916D4A6896BF3168664A9EE9FDD4AF146D2907FBDAA72C369DAA3978829AD6
1967AE59D7B64ADFAFFB9ED72DD8062C5D94B5524DA054560E8DE7D0BA5D6DE6
BC5E10374F1B2DFA87D850F4F7EEAE137A7F48B332D42B7A66E827882F7EC499
27BC7E68BB5FBC64336E2088B97F49C4B863189973D99CAAD492FC6BF90DFCCC
EA8C2E5CA98660528DD45935EAF72CFBB52C09D42CCCBCD41BEAD3A63507E8E5
BED7DD46A6CE0752B0333D160A47926A7AD4A39C3E3DA28A205C63471AD76F2E
9B15DD1F2977EA82CBFDF3173F08A7EBF85DE282531B743058E2AC3794875CFC
8015E628191CDDA0F44FB32709CC538DBDE909069011D85263C7C46CEAF94CF4
BA20A560B1EF2B158043BEBD9E3781F9B21AA9AC2DB089E514CEF14A0F012392
37244C917A134DA7DCFCB2684FEE001D6A480CE1B8745736395AEFEAA62751B9
6829B0EF2EB444B6B167B820AD87A0F4746B5357C07FB3869577BC07041B903B
F632C568A80AFCCDED873701CFD78DEE828BADC21FA41FF4FC327642DBA3FBE2
3CA6E81B848B32F93E058906A9A0194F06521FC8B9CD9158D75683E8B89034C9
175CB81693CECFD951BF6DD21C3A0E3CB6001D54CCECDC0DDA51C90CB9815BE2
BA93D2DE60A60BC3232D020722F4F2964CF570A8864266DCA54E790A3A591370
73313978F2D2473B092310C91E637A290A8D3A743D5E41F8052D9BA4AA4FCC42
6C59101F96DE53F4A2C4AF6BDE7E405ECA0EEC76414ACA888CDE224CB1128E48
84B198E15B48962C8FF107FAF3D331C2F86F4629E01F27650C429AFB5A428C37
E133A909D7F57A65C0F9168BD99ED7B8B8C595021BFF5304EA3E91412B4992BC
3BD6AA7370C867BDF8F8CBE2EA659379653DD50F1005C99A04E9DE6CF33A6F0F
38563711EF45E6E4E167F8B451062FBFB7BD11733BD4D92FD96B3D48017132AE
6CD2829498391555AEF94D5FA683F09004DC142553CE137DA02390ECA0BB368D
B60C6A44B3025DA828E7DE56A07A31CB9F5B9A2D28080159EB390801AB0B03B7
3DE7AF93828241923521AF702F2FB73FF71282254EC2337BEB5E74B9C4894856
D69D6F8C86F3E2B7F8A942B8AFC6939A8FCE4E68B91BC8231433342A3F923AE7
9EA103CD8FD9A3278E2EACE5F5E020FCBAADF54325EA88A7A3362B7068A4E0D8
860E0712143EC0FBB35FE44DC25B275288D4AAA549B80FE03E44DA90B76A0586
0EF094A3E4708D458DF1F32D30F037242EA8FCBFA5C039EE656206EF12245A84
F5EA43672526783F635A4DC62C623FD1E62A0CB52949603C0727A5F39BE0A525
0AEC71AED2B795E69BB6708FD21B44288A03DABAB6116D5828ED0B2D4F7D552B
0D61C6F517740D3DCD989B5C6EB0D85CAAC7B014F7D565F3249E17F22E449BF0
F2F6CD3E4A4EA8B00554FA492DDBA4D4EC636D6AD25B03A44356B31D366DEAFB
41A343A6155C847F0CC3AD42C795153438E9370942294BD6E22330BF572FF878
F16CCA58EDD5471B7A25568C36C9EC5AFA0F3DC4DC3FA7666DA73FCC44266B9A
9511819D1F2D586676A08B60952D93E83C775B46790D67CC0DA9ED9DB35B2976
481C9FE1B1A27E3521C498D05C636E14E4C0F28E3CCDB8EC2384C3A178796DD6
293F4878D9CC027EE905304A6430A70EC98F4BF05E19679823BAF22F33111BE3
C1B6D3DA1C894669D36872993BF2165194B9F6A1679797BBA996D1D94AE8337C
C25D09FCB4CA2D81A942C5DE8C6E17174C59FAE8D072DAE3DC844BD3047F8308
344F99AD78AD44CC5F7843FD99CB48461704CB7ECBD4BA678E6DA589F539BF6C
809CF5481FFEEA472DBC281516B620B548189D085A7DE2E28E3D2A5BA2A0EBCC
75D6FFF4DCE02D824969B6842296FC2D1F07980324C8A9AFFEE819C265C7F2D1
9407953A7E355E9AD5B6E55A110CC62D9E877CC4E7F01E5BC225DDE03CA07FAD
C306D2D99F63E8C963701C3C4231C0B7A7B5856745613B5F9BE1864E9149153C
FDE181B90C51D70554208BB9DED3D0BED41B259F8A2DF891E2EC77688AE8391A
7EF9059895EF2CD8C640558938D5D17555D83A65E937B694F95B69129D74C011
E179E386EDB92C58C31CBBD6903DB2C5992F25C80CE5B8E62B493FFD95F32783
BEABA6A577651BFA4DDD84E9BB626B5456795EEE3FAB3E8E69689DFE5185DB95
75D189B06606513C7C1DB5FCB996343A3ED0AFA4B9646E85EAD47506D2F6B527
52629C616374AAE46948E672EB210276CDB3B1DF3D281AC97BAA3423B9E9B698
030672C53966B8879AD279CBDC7A2ED1C7E9A21A5BF2DC34E177284DCE1A90F3
8F735C1C480589012D7881C8E3425BE00E6AB43DE3BE2EF1965E76FF2374E36F
52E664E8CBE8DA1E521621C6A95DEC14BBB3E335A988079953A3367BA8A510FC
82C8DA6CA3CA9CFFB7967F17993C173602D2B6E447A751622F141EBF72EDB08B
5473D669FDE6EAA3E54E66ECCB608CDA073E7A5B5BF92AF6751AC2366302A7B6
419ACECA8C45D4BE37547F6D8D16CA42529B124FDA78A1CA60411CCD6F1D7FAA
E03EA53CB3710AC413D9D1563695CC66F1C1DC489D5F23411AD0FAC9B69C6FB2
B8439B5E0E9FA83A47EBD606F1358A0FA17A05A010CCAFDE0C2408E39D36A3EA
45C93E83DD53F4DA01FCB9926E01FF028F08AF2EB2FD083E36F3D0DE0356C702
F538EB0DD31968C045210AA7A44FFBC5A95E0AB86FFB4F86B7CD692294CA6709
E54461993AA7285727B0FBFE2E762B2A971A09120CD938EFB182637890EDE3D3
0A964AFEC71306952ED903E7B54769B0B256D5B89D7E964CA3F799F3925DACEC
43096BF9D5273FBC9C6B7E2218A1F6CF98CFC60EC530BD3588318064845B950A
61E816262EABE2E3D2FC0D812F4FE23EE42441A72138889852ACE427B42114C5
0F1E99309AB6F666B43110CD42E4B976907BCEB28F6D0D6E1A6ED4AC5B1BAF7B
8885AD894ED71B9BE27CD71778BA7BCA00EA900B25DFC02A93ED9201F87E0435
71F3FB1CBBF3906B95C1286AD375A3293182025206C233ECC6784FBB9B973495
7DA885DD9D715EDF3EA5A33679FF614E79F1B58F6C6A2C1CCA11B8BD493853D0
6AC431B4D04AEEF39CF2D44D2D85AF83BDA04D50F4AB61C68C354FCA75628D15
B325EBED86B1CE3BC0E3F30D8CD1D44BA54049FA840261F7A8AF2C9188A6442B
06C2CBB93951927354864FA39E17521900262D351E9D5D563E5B01C3DA1CFC82
B139D4ED66954F2E653F4F11EEEA10313761813E23237D49C5013A1E2397D044
3B9CBE917B002FA764FA41B6AC7F41E503EB0FEB09921F1BBB4777005D1339AA
1DF437A155C783D9CCBACC15641419C1E5BBA4375457D0F2361EAADB7574B869
BD731FD5C14AE308A29C002DCF2B05C095A01DA5D7A91BCE82E67CFB28CC3175
A31BC100DC587E78B1F30DC503EB5B39FE6EC028F530815B2D21C15CAC70AFB4
7F52886B08A72B1D7674BB4F8FA10AD23D144DE46E84845942D40779816EA218
7474763CAC55F4DEFE128618BF04C375ED43C7AE872E2CFE5609EAB9397196E1
C263CB14DC75DF3CEB6BC7F7D7F359D0F608E8471A5D00FABA26C5EF66E83B57
5110F16A60F884A5889B0020B6F284B1C200EA3D625491A42A8BF5D93FD05A7A
C71B40DACE081B4A6FF108B95255E2982B6B594607BF73AD9793E0DA63F3EFFA
537BAF333758E837D7AE561EAC1BED3AC206FC306E666CC5F342DE3007DA70E7
EB972BCF356EDF82634B78CBE3514C29EDD3D584717592A22FE5AD2C2FBC3C5C
C59E1099E77C5FF7ECDAE3884DD8E5EC5B5B0DE28D9DEA3C067EC149A6A210BF
DE784322FB32146D609D03E949159707C99A752D3E17ECC1E8B92C297D25BFFF
4016400DC83E5BC79CF40429216530D449213733DF08E018AB31571E3B14257C
670404E54A2ACAFABC317DF70A0BA9245397317C0098265501A7B127F68F2914
E44C53E4AC5F362243104F37CA58CE08B25D36363D3D902DAF1D8195A8ADF6C6
B454C14B43489F014E91608D2A0175579A613F35EA64AA88C3C74FDB197A1E36
51C7D7CC91756A9E98F487765772654F7B503AD35710E4B1E7245D9B10FDAF95
8A40F4C150CFAAED3C3B709B59AC41BD4E25667682B56A5358FF0C911D896D09
1C0A670128858AFC4940C05BD020DE670772C62EE452C200DFBDD10C1B4B4895
5FE37CA19616365DBFBE957826888D1551C9EA546F44FA817D98858503F7B5A5
5AB533E68FE4D0569DEA0A1B3AF89372E08CCB3507C4B16DF72A4232E8A652FB
8DA2064F171D342773FA9635A0F5D7CF37B2C1255D017F10C0ED287C3BC5D4E6
6345DECEE7309C0D148695F388956FA09CB8870693AC1645EEC33E4C86719030
F975D496EE2A4B12C425C270647B327C8FCCDA0E3A5CB49BA91CD61F275800E9
DBE9E1387A682D1B2768E361D408D9DF959CA83BC9B3F7AC0675DD6D1B62C6CE
897B5244537DF81FE7DAC7C68B4E45A484CF7B7664F66007194CF1DBA634C905
A14BF074D3C27230CE41D39C20CE46C8D8FC54CC36FDFEBB8A8BD388D9229C1E
361D6C428CD13BF0DA6024813B06E3BEB5DD0B068D6F6B6E1877BFA16E596FA0
4B9D950BCBBDB3CC4B64057331044F55F754A375C00167E486248EF60EAF661A
58AFA7A2B0235E7007939680912BE6FA1AD78DB66D54A79EFC8F105F6770EEF2
A57FEE1F1C5BA3F670CF057B4C3506E6C02DD94BF42E6A92546FCD278CA329AD
B3B61A8F612DD7405EE4B8C6F9124FD7CD982697BB8B96EA13CEBCCF999F8263
3958D4D4FA96F0A32E97E31CF40A893959B8E5A10AF87B643685F2501A6BFC2B
6FB4FF29EFA82C71F00238E9499869CEF394B28CDCFACBDC178EE3B234A44A26
52C19C8D31C9300F14AC76717BF11E0C45D5A39787EED0C73F2E67D0D2BC881F
0C4EC9593B7D957BF9CE3B099D2212D8337D5231FB795E04956B86F9B706370B
70C264C8DDB4A24FA5CF4B9506054A5911CEBD5456DC1E35CD1C2B9AE5B8F794
D4A81D5FFD2284FF1EB371372BDD73BBCDAF1118CE04D23884CD6D3A118D8EB3
49CDB54578EE778AB577C5BAA47AF48D12D6CA9801779B5505A7FAE6AEE9D960
7D939630FCB3299533E2E639514CB1CF6E1CB7EC647B81FE0396EBDF92B31CE9
759D588766F8792D67A265D56A05F5B3C87E992DE617DE48BB5505F1EA916A37
FFE56A62F8B68E9063DE5A14A470BCEB51985E86954C9505F9C992FEA3466B52
0EFF73468372233A346F7BD9DED0B9584C4241C939A51938185F168C6A6A8049
4F02A74AFFBCF26BBAB9F7C2916F5F2D7FF1EFFBD47455A67BA50EAFD255CF3E
F638809DC388263F3562D6BD32465414D35EAC90553E5C2D06D80F724CF73B0D
15B82B0D206B0020862F2CA6E0258502DE7C39A9ECEE9174F9BBE29DD863E796
40813C645D9601CDE214D210CDD1E4292517107A32A63A45D6AB83067CC2A550
2A98D22DB804C2195D3753D85B4440F2B528C672EF2624C23DF65B81FF73E7D6
1ED6A5468089B2B91FDE11773B64365D47DE3FEDA154B663682EE664643888AC
42C4B4CC1F0742440F9F29F5AC39935DA37F4B3EEAA222281458C080D414F801
545CBA6F90B8E9A1AA59DB6BC050EAD335ACF8421DADCFCB027E35BDDE881F3E
3A5AD57EA618FC109D7699001937ED1AFB273CF73AABBFA39615C0E2C1B19829
79088E6E3EEC6D98234C6C0D31B4BBA740CAD476F206EE55B66056CCEDF9F0B8
F1AA6406ED2DDC57C727A067F394C4C8489C32AFE6492E434EAD6B4CD2C9BBD8
BC7F266A753DEB92924B8AACE73B72EF25D3CC62FDEA482510837ABA7A29AB19
AB5A2D6B302E796FF28EB194CF4D162729D747C2933B9256A3424F1B72A5087D
B46F37163C31521E95706CA0421ED9E2EA435C594176C4D1C7E39331008204FA
E8139B86E397D9FDE103446F7290AE475058FC6EAE70B57DA0F5BE89F5DA44E2
562D80AB20BD41F2F8DF3FAA6364C632C8D76267624C2C38B285630EA0E749B9
ABD3AA4632521C9C2CB05DDACBAC1D64D4CDA9D2C72DF5CA8AB33171D9D68969
EFBD3C21CAA8F9B9C27FEE8DA4CC3D30DBE9C6E0FFC4F98EA50B299341BA8A81
604AD9DE01C2CCA5195560253D16818C59F78D1E7569D56CD3BEC1B2117545EF
265D6DD27965E8C6BE15AD718CCEBBBBE1C853DD25DE12BEB2739E64F518EE6B
980BE8BF278B612A84F1B2DFBADA13615288700B823A371CAFF56A1A6E4F326A
0DF7E894652429937DF74507591F85053C39D477455B084F754FE92B15AFD742
E730D2D71D09210A278828CBF3ED1D59C50642A0CC16DCD18873982570AFCD5D
F49DC4C5835EC4281367D9C2AB3D0E4B63696E0D8088CCC17B6CD45432DF2A2B
A3789B74A83C83D6930685127D91C959603A118D8EB349CDB54578EE778AB577
C5BAA4776FBFB7041565FDA87D18E8F9AA8DE190841C240DB1563A2F174B1871
779C25E2709855D12C64CADB8D8025EA8732C46CFE09C77254D06A9236F1A83B
D96375E24EE8B26A2C3DC344DD30A7AEECB0EBE6C883860E80A2B715340059B4
9E4AC7C10B11EE7C54377C67135FB1D7FB781E8F75D11F3667237782E3B9964A
58E1532DACF52DAA712171A456D705D28E6897065446F7653445CF64C867EC90
9C07B0E35B30C1614AEAA2AEC7365D6837B17D15D6C78A0EECF4703EE34ED505
E5487797CACD068ABA30F206113B3C307DDB54856EB883894F8CBC00125FDBB3
95191E6C4659910433ACB1F8AD86350262211CA79590B14D342E23447B57AE7A
D9F452F5A341530C88F6424C5D7E66059292C795392AD274DAB5FD497380A0E7
DD1ED78253CF983E7CD6F89FF2652453807A3FEE1462F978D89E216C7E4D33D7
1E8F20CE063C6155D966EA6045627D0A9F0B8D4D3415222AEA854090318E1925
324CFB729B1B2971DBFDB4119A1B7644DA49510288C98678B54E6E3A103EBEFA
F0ECB520CA7FAFFAB6872DE50AD85973E735074BA8C1409884F05933F24A232C
DC0C216675FD26E50CEF532EACBA0A0C213E6E213C54D513B309B3AAF534C458
7E4C36BF112678869F9817FD682AD0C3CC78C6A91E097ED39AA1BCFDDD29E022
D2011056691226B4F9467A98BB2A1B03B5091393B70F0D5C73615B183FDC1269
D70A0CD8B4B07AC59BBDACAB7B1D2B91CCFF1BED30BDFD713D342642E16E1E68
322A1480BDC6E00A064D65E6C46D13EA6DF160F4DADC600746F71F32377F3155
DBC146AFB277A50D1D6D582C7A94D9C950C08E91A2E0802FC3E5CEA887FFC56F
020D9D7DBC6CD8E5884443DE40FBEC155F3C47F05C2230ACD1DC2D5167D7AF77
5BBFF3445F8305031CA707B5474DBCF2B885C3CF9B71BE069AE6C7F7DF22D90F
B758FCDCA636761182BA6D5F35A8F47164909660E89443A81360CDDCEDD19C2E
12D3BEAC30A1A3217EE0D106A7C133D547A17960A3697B2863CBB33FC15CD6B1
E3AF1B243B7AD48430F7469607CF802416A12A5F633C7126AD56DF15355FA7AF
073C9DE6374374666771E209F85ED51FC742D72EC70209FB9D13E7D7EB59D751
552E3D0D31F75835683ECCD51327D1BACEB0108EDEA8C1CD2869148DB11C2C0B
0340F42BAC7738C0793C9DA37EEAAF46B6BCCBE8D90EDACEC43107AD93658B71
D6A0CA5E22F23C7CC8F7E4622F9D26B43188593FD61584E2FD67C1EFF5F8CE1E
BCAAFCF2E45FE00938E47ECC664BCF70081C2AF4D71D0BD88887EB73A78401D7
453549879CE44434EA5A67080D28485334B8B7A486B1EA33972BC089FB8D706C
A6EEE721725D8F5B0A8039C8A34829FABCE03A8E3DAAFC569580B22876B58C3D
6D44924C61BD933C2504CC795C1B0CB2DCDD9D0BDA6D1D35FDF7B9E1F979C7A9
02A6B98C7C70860AAC1D815ABB148F8D10F85EB860756382FB10B0C364DDE218
B2D66F76F6E5E4D192A4D13107A1447C2D4DA385F96E550903DF9B819698034F
E1616B5D80A202E2031A7EA3B7A971E7674FC8D9E7FA1A4B633721702C0B2D14
2F654A9CB9BA3DE27175C8EA5B3A82D271A5844B36523788D114986E7631B829
C5A4565512D6EC950B142D84FF5CF6EE355E527FF02D4882FEEC8C946FD5530A
E0E5D6AA1C647F82BA02EEA5CAF47CF8DE3B6F51D046D0C8B05888FD7E83707A
CF07EFC653BCA5E3C01687ADACF61A48ED07D54A9C208F64AFA649BA44E0DB6B
C3936BD40FF1476BB056D5B89D7E964CA3F799F3925DACEC43096BFBB67D1F72
762EB0A1474E4CA1005281F05520E8351E80C24B8D200488C8E2461B01BA8671
BC2D504F18740C01A3F0BC6D442E7D8B58020A0288B9FAAABCABBE345480605E
65509A8ED6790F5B1B2960D9BC38390BEC71C322102F98DD2B211CEBE9FB2349
400B4D91D2E090CE356984C421F10E789796CEAAEE184238D3058F19119A3DC7
00FCC80BFFAF4661364D7A0A9E18497BD332F0DF7C615195F069D50023928969
F6BE3E3B8BF105C4D6F15EDFA4D0C3CFFCCE52D9325C8BBDEDEAC2F25F1DE633
C2677ABF782C599504CD242056E090448C1DDB7B0EC718F8D8695AE74DFBB08E
385CA38F8C09C0417FC38C6306041A2FCFCBE87024F4F0FF9503FD7D2AC105D1
C9AB15C010F93C49CEA47575CE9980891AD4DEE7C73D21C622EFDA2336C6A3A9
CE086A7652B3689830029A73B9678D9B1234B6948F7C780E4DDD73C0C61FF8DF
C2006914762A1CBDBD5500DCA48E4802C8E58C1A0CAEE0CFE2B5B80287523039
23E6D9552A49AC6B1ADF8835176490138FAFF734F2E3B70A40DE5FBC0DDBD396
BDE7E966F8BEEA7D504386B2C63D60AB620EE1599704D549CB937ED3DF40B208
83C3BE1C1DB98EF3CE058A3D5FC2F13379407B05C7122C7A4727F610237BB3C6
E242EFE2F4655E7720782185901065224C925E7F5931E008FAA31C629AF962E7
0270B499862D6716DDD70B2A0273F1D1B29489BD41A7AD83B227CDF56E2C5A68
4470C80AF826F2EC61150D2E80B538DC16EF8AEE29CCAB7F5107654346AFFB61
238E2A7BDA6C6CF0729A5A16DCCF714D2E9046B3DCDE13DB36A9D641A983C162
4FFD3B421C52AD90D20977172C2A2426B0B45126AD56CB4E65D9BDF7F7CDC392
66AC6207DE84DC7F506506EDE0AC300449EAD7CAFB4DC59DB646CADA7BF32FD8
BE908C971C57F77B5B5ADC478C5ABCA26796BB6282E9C4A0C4CDF70F8473F68E
6E2C6DA9D1EB549687C6569A1ECAB22C5336458AB3CC02002C41B8DA54E25487
90F5A5B6E83FBDE2731167C11592A00F50E53EEBA9C1090010DDCCE8009580E8
8118ABF53774DB0CDE6DC1D661782A37A121F83D02C34E03FE240976323D2CA2
9CBBAB052241089E75FAF6EEEA4C05922C35B6334C7A025224A4411A5DF67D33
F23449BF94ABA8DB33E6BEE83DBDB01D29EBB2EE0FDDF142CFAF4290F2BEFD83
D1DCC37D33495A9544D9E67929CF4142CD5380F2254311FA33D5F399A038ADB3
6BFB0B0C531E4479624C393E5301327CFB5C9A4A7184FB29A9DFC7744E8A389D
0F3EC46AA93CB8B89B768BA8810136534975A6776EF7CBE6C7FA3C2732993AEB
E7076C3D235A0CF4E02BC9D0CA8F2F54C6AA978C7B4E79DEDC63A991C6611D42
17131355E30CE86873A3F888F99BC4D91D269C6E4A2F6043A9FB26C56412F1D6
D777250C89DF8C7471D828D47D8CA190E5EB0FD8B33F7BE2B6BD070EDA280590
2CB05DDACBAC1D64D4CDA9D2C72DF5CA849F7C6E302B8A5B460766672E71A0A5
B53E6FE3EFAC1C375331FA1EBFBECA8C6249F073992681250F1411E869D196BD
34B978DAC7DC9F7D21C9C20B080F89B07BD045173DE79A0DADBA7504E1C497C1
66E1CDE6B889C4BFD340BCABB8EE594E82561710D883F38EFFAADA75574B2BDE
D2507246AEFA0A75E691EC8A07DD209828B48730313F1A9C8C31DE090F1E6D6E
5A7695FE9B0A14BE2F2F8D1E95E0C88FF6FB123D57440FD0C45FFD3CF4CE15FF
CE0E01F76F11C40526C23FCE9BD3BD2A86905AADEE4F56A81F2C0AAA8288DEEF
FE5DA7DBECD7C820B5D6935AD961790D552E9D7197CA3D410B8B3BB3E8CCBEDA
2EF6922A1E6C024B61527B897589DAF81F30E0281A08AB3702647C8EEFFF2EEB
DC1BA582BDF359978196223BBC61E95A75F4E139BA03BE366150DFACB4A332E6
4267B82F2BD0F947832963AEB9F26D0EB2999A1EEFF99A41B2C2005DD6D816B2
1F76617F02A5F6FE32A2E4D6D005D402ACC243B1073280AAC012FA8C1F6E7DC3
DBFB4DBC79B61186AA832CA5FBD938C50665461DAE658784571BD807C450CE61
69BB8B1EFD0F429A3558D193B1F81EA3BB7677A093BAF8B941386C960C208AD1
52E12301D4CD7D3F61CBD4E356064A0D54E711E7B806E28CC3C50BF963F95A61
987BBE55008332B6ABA850F0F8D1D520976B790F5EE1DCB7A0211BAA8894632F
704B982EE4F3D57AF92AD5419695DCB32863A2E1DB99E3B8FA3260AE7C765CA9
88D678E6DBAF9621583EB876E24F69C63018054CB8AE7BF119C6FCB4FA618171
664CCFF0B65999F5BFDBCE53B40B97CC26242D9A523F2617B1C3DA8BD5DBC0B0
6394CEAB577C452668FC761D1A17B9C0BEBB9046C0096942258E82B2858C5CB2
1BE95D0DE2A84A67E9450DBDED6E7548C633E2CEF19ED29850C598A5ADB8F0E5
CFC7587962AAD6802DB7A993DA1F07218CA480BB7699D7FD35C2FB82BD3DCC18
5DED8F7F8B73F1A6FFA490B18E3D3273588A5D79A5C2DE58775E0242EC975D2B
EB79BB51072620E56DE4D1877B86A2BEDBEA23EDE7147DC366F342BC4FA6262B
DB37C17C9B26166FDCBFB7B7420F546F4DCD408C0C4DDE1AA36C309F7D17D787
9038CCCDC3300215973091137858D9728405F5C45331C306CD4729AAF9B80ECC
6C94994563C8CCD5FD1F45207DEF9096D27D3D6EF8EF28042BDAF5B71B09C3E1
D081D58DA932B1ADFF715235DC86436FAAFC57904CDBA6BB2FB40F55673A1257
85DC7B03FE217BE0B436583B1E4C8899AAB971934F059CA1C1D0DF8B24B99327
4C513EC42A2CA9514B8F62D6F124DE122BA637CA53DED133BEA435CF4897EA25
CE5DEB8FF37DD44721B7C4D66A993AB12AB7294F11F5D48A2FC9648619401956
C91189E67D51ABE9ABDF14A842A13E5350032B01B0B117730A33951FBC2E58F0
4C8222EC67857D58510FEDEF6C34FAC4077AB7C9056D0A3FA1B3BBB1C28C6353
79A0716AEC963DCBA13B6BF4DB121C6ED8E4AE72E7FB4BF343211A1E43CF5799
2A1255D72F1EB2508279671814F063259E14DC084658B0206B8ECADB5439A67E
BC2763CCAEF050E7A147FB51227A5AB0C2E3260D14115BB0695CB3C0C3F6AD7B
57B980E1902A0238D65F8D2B1B92430579F5FCF839B2EC2E4DA9A04D283090CA
4BD2BF8FDC26D77EA9BCE15D39075E5681980B7CBF7C63D2F56C93D6EC0E8A78
3FC1B0B6B2F6592F4E65F5271B585DF5B68A3B2351F8C42261705ED40B709076
D394FE6703E461DBF3A5DF92810FF688B69F4881D91B2778703EB76CB9258220
7405D06144D250E3519837AAEAAFF296C7A9133DE2756FE91B30682604EF678E
F54A36F7C6C6CAB2BFFBF4CC1A24A85006E77D3D3C1329F9144A3304B9E86E1B
AFC17B47CD440291FCAC3F3639EAC70582BC3F6153467FF7215E302ECFB9BEB0
82AB4FFE58DDE52CE1D525404E754F038103DAE714ACF1277D793D6B9F37B30D
D35395BA3125073CD30F0346E71B64362BCCBE111186A0F8182AA65AD1F663FB
2D74B49A8D2E9B0044B05B89AE583C5305D7D01D4166C41767998811CE2AFD40
18889D8E869268B855F27E2DCFDDA52C26C1943613DA224759862728BD5B9F0A
B9BDB812D887CF316E2573D907BCFAF688AC4492BF9B86396CECE7B96908E28C
963F512BCBC6140DDC252476B611F1F52A0406F363055015D3AAE2759AF929BB
0ED1195074A3EFF22E762B2A971A09120CD938EFB182637890E063E613A096A5
D16B63A2005CB515170BEC2F9EDE11958F9C18E6F4E3C609E89DEE27118031B1
38C406A8F08F7C784ED9B21BC2CFB46A86BCE6BF64E315992E5164587B1D8AD9
96C6E882C892641DB902520983CC6C26606CB1A3A8C57A87BD5AEDA0D8A7F1FF
EA4A27AA2574D36EF0070ABCF0FE016E858EFFA9DC30BFB471863A318D7D03EE
0B28C5625B55A0E2BF2BB38417FD6D1A6831DF2B01E9E445DD11F49C156F6547
8D26C2CCEA3EC86899FB5157288943B67052CD04D314DDDB3774A443294D6919
82A5EA34DEA95035262C7F615645F8ABFBDC68CDD96F747DAC3A4A3FC623440E
843A5E78C9C33D6ADF8979C2C77291AF45AB7C57B61F5289991D7764EB38014D
8AFD7C4432910F290216F822C012386457BC43BBC3A6C0BC647E7C9B363F4B7C
2C5DDC983652D0E7CA2BD37C30FBEC6044F959E036E4E671E52588E2D62A8DF5
5D8B2B5C7ACD731201541702124F289EB2A2BDF18110607A9AA9446ADACB1F10
AE1EC8EE46BBE4DEAB2AFA31E06C17B47719E2678CE85B4E90CC556845CF9CE1
FE2B681C391F7CE3CAC117753811E9D40A2FA90EB44E4C1819F1DAA724CE5FD8
A8ED868886E0D05FD323718C7294AED45E2911464E7DC2E362488763FDB07939
C29682433EA9842C43F9EB25731A12F98C3C20EBC11959BC73697C7F524D5F10
AEC634DB5A4EC04B78915F17F482DE1211855953153234B69712542E53C701A5
DAB4C4785B037FFB99B7EA15998F6B784C5F40A0BE909DA8D052D2E47A9725EF
891B32E5A5067BAD45E8735A86A08EADD2C916D51934EA28ED36C3422A798D2C
DD59871A304D8635C261ADE7A9E8D9A44273ECAC6A6CB033D67458B2ABBF6357
E64AB42C635963CD6CEFF0BECFF04D52F356CB95EA47A87574756FA0D72F2D62
F7BCB5D687B55C0700BAB8C4891D68A761DA533EA68A45D48EC01A6308E909E7
D9AC7D0D8275EEC86F34E799BEDE4440D85E1B0F438EBA0FE165CD211E82794B
ABDF662800E45BF5E62E6E5CC8BF1FCE10F4DD465C5F4C1B7C756E8520513668
C4BF871ADA61B11423F3786A03BA85152C9CCFD0D0AA673E6D2887444080B62A
DDDCA6FE75A65D1AF39771B4E4763353457EDC3EE66D9D42DB50913EB7AA70C3
7F9CC7A830D54468CD68C9F4E340231F818BFDF70DB45F90DE9249C5AA8D4F55
D5AB583ECCBE64A0885D0DE7B71FA983E2BCB06112FB29634CA6C2805DBE1E3C
82E0519B566C2B7FDB800DA1CF4D2E3F3F43F762533C0699C8AB868EB6E978CB
6EC77BFB2847C143CFF3CBA0E3A19918E193B4055A26A1870924A2A995DDC6F7
9EEEE2D5BB90F101A12BC5F2734A2DF6DB1C9F8D11F60949CB895BE53E421207
9FB1F63B0989B437B0FBA029AF7B6FB67E620200B3CDD4F5E76F9279FC919F1C
E11333FF9EC1DAE5EE5046FBC38AB75D63C3F4485A2AEA55611672F81485E453
826851F981B3407F3CF897C932FEE97D04EA4D011BD76FF3CF31255442BF04AD
5B86C8D1A83E14EF447D7554D3989E1B31830CBFBCB01F57E2E6CDDBA51D693C
A59B24774D8799B937381B2B24D7331FBE3C21B7FCE4B248333D01D8D89EA361
2CA3111DF0E58E58CEABC579AB72F86BCE0216A417C373B0105BB86E0EB1BE0F
B0708076C7B0C1E808AD457FC4F9033BE9BEEBEFAE7422537EF9C6453A15CE27
9FB0B28D20F19323BC3005840D01F6109060957F68A42ED5DF10D45C01DD80DA
B291EA4D591478C3BBE529B79FE44761F68087F4E38CA080CDB93C6BA9E500D0
7D40E882412505B6F73295B18EFD0A4F2894F5F68E44F4F0A3A02D4C0BDF7201
D4C38744B367E060D1E099E404C7D029DD3B8224D77F85F5CBF3B39501E2042E
2481D68BF541CC8CDB1257E79B4F171FC4831AF4C7E3B70D654CBA4A65F7BDF3
3C47000B8DBCF171147FD30EF2AA58DA3668C18C03DD806976AA46BA2FBB5CA6
D2DE2B2036A393DF629C2E814B649E5AF4F2FBB24CEE063F0E646C16624B76F5
8D2F362D222A5CEB4FEA91DFA39BFE6204D50788C6690E945AE88661ADC51EBC
BAF279A44CB4B1C7D47BF41FBEC8804B0376CDD60701B22A3F181A1D878BFDBB
49FD8E8E05A384B07F9998114047BBF3D26BE7AD8EA5681FF99A10EF1B8897D4
935F498EC1D6DE2E57132321625E5C4187AA8A9CA4F326D85EEE2E3BBB9C013A
2F2A27C401E3DDDCF4D8ADAB1CCF657626E6E06CDE9C1D52166E0A3F76D92989
550F1C1B556B2AFE727F367B309D01DDBE90C7AC58D672C5B589E5989BF17983
1883C93110751B5F8CDE0488FA5A53E295FD1690246CE183BCFF4066C17AB9D8
FC8AFBF4E5BF5ABDC96B4FCA84D423F367960D87FE7AE6A0B77C830532ECC754
84547589420C8EE814A6BC14A2374BC9C5097DABC2FA9610B3BCCB72D6E9278E
CCE7431D2565FED924BDF6F53ABD480ED744518A18EFED89C4225991329AEC0C
D00A3DD36E95001663F0EE15694DA7D8D135F6CDBEC9FD65B1991419335CF5D5
7F7A4605648735CD2A58BE5B5A768FE14AA8B4895F4B5DBFC7C633BAADC26F9D
9A17F28132BE5B6E3EA9BFB179464196A38C925E0587A1CCE42B1430AB57BF60
A81E1F10EDEF127303002CF2D778FF36D366399192BEB80A6BA0D91AA134686C
10851C3E3C6D20B40779255DEB3D39C8E6D7A6DD40FEA25539707FAF070656DA
891F6B6C2E885B3116A39A363F983FCBCF2913AE174DEA4A0A447369EDC3BC74
1BD52CAA752F7B3EC507C9600C8A28E164889FC53CE8A73B46E913B99D21F76D
4ABCAC26B223E36594284CE3F6FA6E71C10B1CE984ADC80BB272B15CCD1672FB
D40A3D19B3B8E0F0AB31AB83EAE6549F2403488CF2897FC10EF9575174AFAA47
3CCE9FCF90586E27924EB1F96AD63962473353357DCE78AEF57E8A5CAAD4B689
00A97577C8EB40B5C5C11F9AE7F2F8CEF3A5F66808CBD932A4CECA01A993E505
B0F76370EED4D30987FD1C720290C5C8294E49F4B99A3BCCA517D0D67FD60C71
889594991EE6081B05DD7423A5FEA1FBA84BFF00B349268DE077F06EC6417EBA
3540701ABBD2D4EECB11AE61D7EA754A7478B2ECE89DF07C214C59A7A86BF1BD
10D01F89C7EA21F737D807E939A9B881E6454A486906428B927CEE1312FB919E
3C20D66DB734E98E9C721633342A3F923AE79EA103CD8FD9A3278FD923F3A869
2412BFB5735AAF95548A7C45FE1BFB1318A1FDEE3A06766649AF3A89725CFECE
DCC78F10167B8147A3419D526F1F3D0ABD28289D220BAFBA2E8F4CD90816C9BD
2D5BC19411F5C5FC484D86CCE9F0FA8A3FAEF330D9ACB450EBBD23ADD8AB6E54
13A6322BE5B8A689FF7104DEEB9B1CC10144CCE32031F71C8302FD0F5B244B31
1DD94B9817B278DD1D38EF09FEBC37824CC08C300EBBAEBA24504A9E8CA47374
74941F6AC36E606FD9F6A7259B2FBC59728F80FBBDF1CFB4A3C64D81DB93F0D8
16D950A6E4FA114131410D509136EB0ACF86871B801EF0E57BACE8CA49A14A57
D29CD3E098C82811C695EB8FB49019AAD64D5AD099246B45ECB609F6E4217484
BB975578CF2EB0414D0E640B2DC6093D1734B6A9696D4C6D92109F48E787DF38
E4BE85B66EEE33EA460AF3F191475DEF09B05DB3F378C3708042ABAE0FE77E5F
F30DA920A29EF387835DEC4EA0645F47A09DCFA242EB94D9F20965A79B98AAD6
1952AC0AC2338282CE704DD18F83133B54A6DFDC87274377C239692F49EF8453
E1E1379F36DB5250CBB0525B27AC1D5027DB02030043D4664253B09D5725F2D1
6EA09D57886D74C5EBA0C337251B70DD7D3852AD8DF452BA74C0D8FBBB10124F
FCE47E47670E1CA5809435FEFFBC23262A3846A894BEBBE717B85B989871CCED
44CFA2460615EB10B58C63C23D959D0D096D8D1A9CC881DEFE4AFA5BB9DD0F74
7B79996954F8FB8E6ABD97BCDCA95F019D6D613CC19ADEA4213DF3B23FC7BFED
A3E33AA6F6125CCA2C6701CF6A84C5349A377962276C4343C2854E973A275E30
54E122389437002D5990FBC6D7837EF58219B28DD7F8C55218BA3F44A06FCC9D
038DB847CBD7A0F80BCE62841430DCF989EE536E5BF86586BFBC18C29E0A1194
521B10FE32E7110CEABF57711C940798D95D2F9B898C4EEAA77AAC3AE517684B
F4963FC18B01437E781478CAE9F19DCDF7A8F3E1BF0B7E35DEF6AAA2E8769DD3
2DA82836308DE0425FD9EB66638E2ED409D13B96D9931A4EC125B3ECF744CD53
5B738F9B00CFB576E4C20B24C271781A85E667916E7CF5DDA8EF33DE93084CD8
76A14CEBEB844E4B636D72DFB0F2CD238296FF0C92CA794AFD6F980AD0337207
4E1C9EAD8DDA990A4E2CAD53CBCDB4C4708AA9B7207F54BEB95915E160B6E894
E61B83A7D5AB85DEBAD472D60840A71D8CA73867E9F513AEEC11C8EA0DE704CD
8EE4010F3BAD95A4AA4FCC426C59101F96DE53F4A2C4AF6A2B634A73DB0C8DB3
621C896C6E4D672452A43CD6B38CF6B69058841D93B649E82031F198BC59291A
09C807E4DB82C3FEEAFBDB588772AEB23C7325123666EF0450576773D5454470
91D9D01E9C38F49F7D8C8CF098F9589A54DA8BD4FFA264305DF8161AD58FA859
87C257EC4A6C0F3441CB3FFB3886B7F25A32DA019953F10EFF5F6CDA95C07E67
40D8F193A0DC0554C9B0FAAF6F2A73D5E44B0015EDAAB40061AD4DE6F4237FC6
8CAB8B3319CCCB2A9A6A64451BF90CFAF43157FAA4EC36056E46BB029299CEA3
5FCEC04738328542CDF85B859F7159465FFB9BC332342E15F75B08A34695A2A9
25FAE4B18844BCAAF617825376C97704D3D0DF41DCF1ADAF004A95065640E188
384926033405E81F4619F67A010C94B88ABB8D8D0200E7470EA75B5D9288B362
BFA5612BC578D3C2A76E8F663BAEE7B897FADAA6303FAFF112EC26505C9B9273
738F553F8ACEEF58C3CD492EE4DE79A5AAA1ABDC577DF8FFCD04C3EA77541646
B6CDDAD1C76955FC6872ACB4ACFE9CA666C46C78BDD41F10366768E57DE70830
9B77FDA513DFABBA2DD336AA8D913FFC1771A8DB698ACCACD7AA6A2DBD300688
9907B234C05A0A8366D4EBC86AA0239476912DBF20ED67368281B3C95CCE251E
881F65ACA903D419801D6FFC1920EEF0051FC7AFB9CAADA00AB5B475812AD08A
33AE6C255C3F5FB2B5B96687346459459E11D6BD6E0DCEEDC355EC54455BD6E1
1FD00C249DA376F0F2299767C8C3574B6D9B92FA8FE0DC693810FB0947FF71F9
CBF16DF33010E76259B0B71E60CCC50CDD5A8CA6B3EE61D6FE43CBD31D7B28EF
54B5027CFCB1B6DB97B588B004692BA5C69FEFC25B60E410527C8176CBDEFF94
991F7A308B95E6FD08B08A4FA16577C272AA53D2292C4BB848D07EDE0C100416
09A11929543DE2A6775E6D1570F08B30801C3E8506BDCCE8FA93AC9612225D64
2CEBA1A96FD5A2F6FE68C4A0C743A49E3667EE9AEE712B4238AC1AB0B0345276
72ABC8D0222F3F3AB0951175954E5B76B3DC2757021D9EB12338ADB318F82A8A
4A36242A35351E6C5DA9D6EB6A1411D15216CCAB5883561840834B221905B483
9559936F7DE3938EA997C16C22B2CD1F52DEBC9DFD97DCC78A9AF4B46C30A3A1
8D89D92DEEF30B110A002864357F8886060314A3D45A586F01FE26B76A3A2F65
2121D7821393C924761C3BAF25E1DEA9A23596118018D91CA368C39592C74D17
AC9005E62E47BB01F74A6CDBEF68BB926C483E82D29E4A529B5E88D8AB737F1A
3BE3D924CFD804CEBE0EC81D77B43652779E675B171F8128ACF24C04DE9D767B
7830D8096D630459650661A7B4AB8AF6F935F61ECD8FA698C81F42E9372DE5AF
6651AEB598E320FCF55AE14F07D9F56C7B80ECAB1C7CCD74EEB25C87FAF55A26
FABAF878198E289E088AD19351592A1435D04A96240A6E17F35E24AE8144F92D
03A1BA2EF313C333CBF22FD7425B65A9DBDED1E007AAA37E215513F8A8224D09
8BE6D5342287AE0F3B881BBE8E6481A48A9E0D0D49541E4C49B3E0E8DF94CCCC
38CA05A3B890EFE9BC72E8807CBA47999291E8CC8AAC6E4AEAC82F353F03E8C7
9FE8CAB8EB8A90C87CB9B8C4ECA92C31E1D08D7E6112A2CC89C048FEC738F359
D71A34FD20AD6206B2C99CD4A4BB936F109A0A76186ECA3D505216EB575AD934
C4511638C9C5AA26A200114D9A5A40A05CBC51647CFF73C79BA8C3F8F9A85B3E
FC17BF3FDA754EDA86BB983643AC73C1BECE91E3E5654683A71DF52411E73127
07FCAC5225DFF93A911A6278646600CBAB00084C3E75799DADD1AD862054F581
7029FFC4C9659ED62CBDC73E4086862B8F0F427D06129601543CB4974E4EA330
B333C354BF8C7532201FB8989EF3B8C94E549E536DD74B9AEDFD56DF19FA61EB
0849F800416037707DD77B86D66C05D2B7BC405F24DAF92671477DDD60ADC12D
2B0A1543D5BDC56EC9EB6F754371FEAD7C9ECC49F2C122C2793DF9D23B55D050
06412E2CA7C472928AD63DB121814A5E51E73DB2642830EF891F67385E8E0107
E3A06C58C5FBAE1CD013A1628B63E056B171289411C9F6AA2DD740525D51D713
CC6560CF129F8C904AD23D344512FB64B10B5F14F2AEC5C2DE31E49AA6C6265C
F8F5AB034EDF79D9BA428BD92D3DEA96BC7BC5B210BAAAF8270E01B6177857B9
D7864E4369D8A846DA9F3D3B8DC892A818302052F440BC6A18D55E0771E6270A
4585958E59BC111777727E266FD12E129320B51EDDCBC94DF3E7325996603BEA
C6FE0A2813A3537FF4CE24E1B4B81BD897154F531FAC587DD2E0631EA07ACD13
1A963E13219670A817942121C2C5DEF197152EB251454F04CBD02303654E4D1C
E299D309EE10BD205FA05DB71358AE548F8B9F65C8FB052A58C0C3E1ABAD6BCE
4E68B5CE1522F361FEA9135658468CDDD8E5126740D4216760B971DAA4316D2D
24992240AABA1B604C266E6DDBE224CCA13C4A2010DDF0BE0C53E5711C82AAA6
FD60B5EA6253DD075A2B0B7181EA9A3F878B3B3F6E12AE4FDB46F356FF050215
7BE9B017A7BC02AEED0E94FED8625DBA19DF9635CD0EC2518C0B99582A1F61DD
CAFB1E173820EAB8A5D478265922ED59AF108ED84088315DE6EEBCAC80D3D58B
761990A63CA5776D76C255145D67DF638857879FBD274942404C4DF03DC811A8
503601BB2C2BB2070996D0908029B3BEF08265F3D767FA410AE77F75E553FA3B
476F677C972818BF8C85CADBDE32ED03A205E18E177D2FFFAA8396C201413A3C
BE95C246AE56E68F27D6695A95B4313C5A876A261788EF3E31EDEB650262CCC5
BAD17F68F1996BE7CF7729009F29655E487EEAB7641E1431D878A3023C4B887C
E81BF46E2F73407610A72B6E884D996DB26A64282E1FAE278E6048CB8F10D833
C809C9417A663922D37EE126411CD9B70BCB8AA54DF4431DB87FCE89127BD552
B9E6ADCF354C3624793BD5B865DB755677EDBDA911EBCD8B19FD947D613D7ED9
19E311B6ADE903B6EE95815AC95B6278391BE167F8B451062FBFB68A5964F939
A98D5F39519E4850788B0B46E261D48E0769E4CACEA82D1F3F7A080233266EB5
2FA813814FEC34E58BF6C59FEFA6B57EBDE29A572640D4508BC522073FBA8A50
776DED50AB8AEFDE01E18288CF3F5864EABFF9240B8C62DFD252A8B66C1B1E7F
567B781FCAE17EFC8C1E9BC735202BD875AF847F889194B64C0436F1F67FCEFB
4D57A6EB390CB6910A4B8CC1B3FB81DC7D3C73B90F56AA5EB61EEA655BB15BFD
37418CA33E34618D9B8F62D5DDD4EAEB8985727690C1AD441F9B61A578F98F08
5EFAA9C0A20438F0184647BD0E7E00FE17D6C57D2B8CBBC91434536B00B729EB
7449F4D9ED01318BC2518545A75568CC03DF0D8CBE4E5543B4D7C02ECFD9FB21
A2F8D90C40F594FBD86B27C39FEB3F64D15164FEE55A96EBA0B67B368D88F362
22B013CFB157A1414B1330DC23F54D8452D22857250E640856403246955BE79E
2B173B128456F9807F9CAE4DF288E9F7D80380CAF36185D2383976AC1CD25B31
9DE25074B758DAF6A5A08266ECB388D878A409AD0AFD1B28CBBA52E1336D2EDB
90D358E005C55B6413AD632251DE1F05BCD9E878E22BC7A9DE94C8D7D6D0453C
208E747395BE83F93F178D7A24AB2C729DD1CF1608B1353AB597339A61253C32
34BF4E1AEA188FFA083FCA4ABF9209F9D5849EBD6FC03539075AE12E4B3584D6
7D1336FBD8CE3FC59118BB80285E9EEB8D2862B7892F7EB1599CB53F4AAF955C
E2E26212A0787B447820B08DFDE19F6C70BC838BD4161F0428C8C709E28262C1
7C0FE211C13111347003714DEA7DE13ADF46393E07D916B3530C9C771A6CCE0B
228D76EE3EF3F92B75EEAD2B882C8B7EB299340A358A65ADDBE9E855282AEA24
3176FD4C26247752B2945D2D70773458B9B7F30989799D96D626D542BD8FB1E5
1ABDE360F8DF9EC1FB4AAE7273311F5EF4154E83B51E46EDB99B73E650F40972
C5B158A400A02EF2785C60CD59FBC8819A846685909845C2A0BB73928B2CEBD0
6CA3E4DB68A3DE6E265309F8628C0095C1CBF0AD502001498EEE08878786250A
2F4545915BE08E8641C8E5CD0F2636239BFCE436ACE10CB788B207BDE1048DEB
6A82E53214FEE18AB3291AB40C8A66445A7A9B6E99FED552EB1A7F8CB400AB28
B303EC83C887483EA284E78EC88003204E1203DCA6DA2B2514321AC39763FBC6
6400A2054ECC4B99699C7D0490472C3FE34656ED2EEBBFDD2767549FED7CC3DD
229F1EF1A4059F414AACD691D0014A5E082F459BCDC70B8717750F58782765D1
9830A9DDC1C8E5A1260E00346955026C4E50997A027EDC97C7C86CEDB98287C8
3169F1FB0B0FAD1DD6DAA30568C75286BA40A9672AB59C6DB033BE9B9770ABF5
79FC9111B95A92251483B52C20C4CF9CD0F897F0E26E29F279EF8F3292EA4612
3318CFC16271CCFE028DDF5B166C446E4766C834763F20D741FD762A5F654BB6
D1D3B25FD01AC8405F0492BD7ADA00730ABE500AE414AD71DA7AA876ED18B65E
D8CF2116AE18FB18DC69E178CEF6C27CB74E69FF8C7A80AE9E56BF18F27BA5F8
C83A80D1EE1AB160F1FB5B1B287A2E1627BC8F73ED2387A1E63212A66E0AA603
E7AB57F8B4C581091E8BA271A63DAFCFE68AF075AFDCE72C991F1FD9A7C90BBB
6B0A0AECD834204F0115F1C4AF21465C16D857EEEF64E95446028F254ED1A2DB
EEC6496DE182F8F910F638D9073F16F94BCA53EF7BF3B90C59647CA9DE818D2B
A0F4243D39BABF3A9BDFD6C700D9B2FFE0744ACFE0D695966908EDB625B9FC64
5CEC55CB7D43856731D2B8B4C7C4BC2FB81A7D0E7C94F991A17F745E383448B2
47FFD4D9B82BFFC3804193AFE84708EBF4BD7AD01EB17C5D14F15E14C65F0C46
736F06429E2CD19ACC174A587AC3E853FF93EA18BBA9291CA7B836A376E0D299
CC207BF4B3093D9CE3E075B7C1EB18CEE6EB3B4E9FCDB0D098A7D3A4262D8274
0AD335199E8E7C4D289584ACEBFD70AD37EB5160BA66CB7B4C3BCA05C44E0C43
F5BB941FE0880536E83FC0F8AE5D5A06F73BEE98F41F334F1E1229C67D5BBA23
3DB1C95CA3ED81F50D1157D538C0B41C1687B144B88FDDF6C4238A7AE0616C67
4CA5960FB17C8919B6A534CC099A52EEDFE0322838AAD2F04CB91D815015BF8C
DC034D84198A9E10E110149249E432E58C377E4485025779E5CDD45675686E1B
6A0ED0695E1B8D486C677D0C7A5EB1A9449678D21B82FD668F97CB9FB9333B6A
EBEE1DE059463E05B8DD94A615DE201F4B7CD67C0896DCD98AEA7A2B2812BC62
A2E30BE8EC1A9A84A3A7651FFBF4980A6E1E7B46A87586562F7EAF7EE05CF3C9
5A22E56FE7658E2EE42E59C6C6A042AB6CDE6FA0201D1D1778472A7E549AE4DD
1FA1B5FD846ABFB43EA3E996B404E5F5FC71490ADD58884B430B799F71DAD339
17F8D8BB6754CE78EE9AECA8A896AFE293731536035F6AC83E492597AC374F69
0DFA4807886D3D371257512495CD79D919B7D7B3FD7110CCE04B0EB082DF83FD
E3D050D8A6B10825057A23D4ECAF881590FA30DD9EAB27AD2371C35DE27F2BFC
BD70A3B06ABE5A814F35F0D28A1B06DCA54343752132BB19F3614336FB3BE803
25FB5461BDB9E250F75311BEC3A13B6F3274EB2A58C54D81E6AF8CD15028D540
82C4AFFD83169929360F1C71A7A260E60CC675EE9B74F4C55D2682EFCF0ADEF8
990E9BD56E8C4D632F9B1535607FE829C7F2313F3398B4923810E9C0397DFBC3
C6838ACAC0BE39C9E243742CC1E31340C56295729C8D64FC474EA4A491419CF4
1FFD56AFC0AC247E5212B3C38D3B5C767E8C1068C64573DD91171DCCB189FE22
C5569B2DB1289B8984AF3D0CC7B93D1A1E5E66C912B6E181033465F020629C2E
814B649E5AF4F2FBB24CEE07E7736B138A88F04C3B6E3BBB894CA3DA52D54D2F
E59DB27FEFFB46A92B1E211F0A7E41C25DAA02B2E7FA7B0ED561B230F7236270
F4F8EBAF6296A259C9532809EE86147B0BB8F785CB0FDA496D74CD1C184CEE12
2546E4A0C898CB89522DF6C58739381613AA578A806E34657DB15E29B20A93CA
7D9826CF8D7EAEDD61C34723FC8529F41F1587F65B5C237C5B0A725815731051
460362D0B8A8DCBDB2C8033AACB7D818C86819DA7A0A6C87B81F8F4A42869DDE
ECCF66BCB8365EF29A3ADC5D9C23ABF4CA6275403BA00CA211D4684B75381ABB
A622503FB1AF63CD337C68CB9F4DBFB1FE772FB6B98E80C46535DD1D38766B6A
FBCF3E59DD809290DF545E3594975D44A6AD0CA0856A148CFC54F09D4494A93B
3DFBCFEBBD5CA2346A975DAE0DB24AAA64D804D5CE5A41AD7F4A2230E979CBD0
76698FF688EE0F9096C246252A33F69680186DD2A52297BE8CEE142E3427A92F
9CEA3FD181466106ECC1BE9B54B87F2738E49E191FC97CA8F0BE0B028ABD64A1
AF908C49FC0FCBC7EAFB6AABEC3AA5F2D819765EDC9EA745830146BA5222D203
9538C1F9039951CFBB3E23E96C77667830FF008317F46284CC888BB33D409B06
DFDE9D8BA7BE311C92365B5F1A725A726F55459C31A6AF8687C92E626F737F3B
35D43FA75D54021713C96E0F2EB5730820091AFBCAEEC0FB3F3B711D9C78E4B4
CB920DEBEA2EB1505DF76ED457E6BF6C8113ED913A287B930BFB1D34B257F660
397FCDF5E49B6A96E35616B372D050288238F868E7CE58BFCA66322FD97E55B3
7F756E3299B2670622E0560C5AAF13217681F484DC7088B6E19D3287061CF05D
DEBFEF23F82AFFB57F980484C0E9851F80761BE599BFE88A7A4CEAA6CAF2F947
7797F553DC14178B6AC1D5C8740F766D9197B88EEF581684E6AF01D3DED22FCF
6537CA712C98EFB1CF6DB14EDE6AA40A098595B7BE5DE6520BF5047CF1155DFF
6BC51B46771A3374FD4E5377531FB371372BDD73BBCDAF1118CE04D23885FA0E
FFC9B526D8255F114EC77F5542BCCC7D307C1DD82D37344959BAEF735DA40E06
8D61F2BDF22654752538617080B8A0623939DE63A0A4C873E0284281ACEE1D38
861E72BC01C639A25CD430E62B94C794C0B30C26B83AEB4164DB120EA316F7F8
EA9A96E3E09619CB85DD9909A74AD691B708C396FB78DA98338730DEE3D3B7FD
4F949F3228E278D210BF5DD10E996F3AFAFA8B8FD732D6BD5EAF723D38121FEB
042ACDE9414264C068D3FBE2ADBD2A1356887E5DCDA834092F51366A9725F963
2122F3DFCE56B9A46B3F7CCB4FE2822BA5E671E8747BB8138E2115F9E09CDA43
120A4DBB70F2AF5F2ADFF81D2E66F409935CA7CB85861B81BDF52F8A8BACDBA9
3996A0EB7A3357E893B3B5476BF48C5C5AD70F35CA47DF4C4C6CE1A5595C54AE
FA69B4ED1A0860A28D3D50BA4D87700767CCCC127EA34B2E54907F2ED4CB1E9D
628467C0A7CEB7CE63019F284196D0A517320295915C3A4C6666B49E5406016B
8018BBCF4896067F432AD2011056691226B4F9467A98BB2A1B0280D545200C1F
67125D3CD7FCD6257906262C8A6848A8C17D333AE8E74D642C07F59C7299AF28
98D5497769D470D4DC427B101AC4D7EF91B7D7734FDF44E78AB2B0CF31EA508D
B893617833CD8167CE26350E3E65B05805085A8791024AA39C8981E78288CF3F
5864EABFF9240B8C62DFD252AA1E365B1A30409EA878767C37A07A7067502E81
3EFF024DC4B5909FEE183FE91FCBA6005E792CC9EEEA6950D8A7B458038FEE0B
65C4CD9D5520E5194C8D3EAC86362EDD4F1347213C9327571D92D0E1402CEDDD
4EA57F77261BED14BB6575973F0BBB279856F03E181AEE54042F3750D1F04CEC
DE8192FB0630AE9FF51227EB120E320A2DFBBBF1E76F9279FC919F1CE11333FF
9EC1DAE43A939AF22FCFDFA7B2A533D93064D975906ED7EA45E64AF3E9B6F047
72C65C5AC1C17E225F9D0DA152D72E0184FC1A22A61ED898C5710062006C5731
16A39A363F983FCBCF2913AE174DEA4B31BF023A2DF35A6DC7DA5B3F86179CB5
16D72CB7552F9E95B9FFB95281E30EF2DEECFCD5E0AA7E5475E29F6512F0FA89
6F78E48B81A8CA11964CE23C41DBF6C5C7084809130861D974DC68D208500033
22871B2C50FE6EAEC54DA233359CE127A6BDA654CA8349B239E8A2C89898F7DF
E127050A56F4BA4DABA9BC0168E1F016AADC734D415786A5EE9BC7C839A9417D
ACBEC45BBF0C25F13FEEF6469AB6EEFC1214FF90E05A28234C71C44610BAC26F
99685BA8D67753D001B0349E0455D719D89C83176A0D72A6F96A1C9F166E156F
E531CC9222E5718B122B4B889DD107F682D9DC52761B5A9751E11E87691C780B
BA3E5198D37CEC914D11EBBD584224CD6E9B8645A54B519859AD5DB10E916BCC
FB4C5CEE3A4EB0165FECC03853B323A4CC5B5E1CE7CDC5367509157E4D9109A0
C1913C12E645B4D588973F46700B475E00D418DFAB854B175BC312D073CE7310
630D01C326D9F5F7ECD3EF832C4C4851F4CDEBAC6A13D24C0787B2E2F9ED4428
D6D728A896A569DA055E9CFB5FDC6902320FDA3DC792BD2C9B7D62FAEB611830
07FF155A44FD7F6BACC6952F8ADF3C605E14851D2C900A60BF304F6F4147A4AF
8F821BFBA6AAD4B8AB0AACDD84338DEAA2193FA6D6C34424BE948D521CC8DF72
6B1342198028A9496278C3D8D558D963AFB98FBDD68E75D88DEDAE45EBD6FE31
30045EE531C02F704EE2CF3F5C7528E7A2E1892E2102B002E46CE9ECD88BAD84
593AABFCA0450CED285ED5A9F1A55F32137D1B4A8F90B096C076400DC30DBBC1
054D375A97F3A954AD92DB63BF0D196402CD21AB68DCED8D2F186DA1418F8E02
09964B9A64C70FAD088A7D0600F31C9CACC39576AEF53671ED06B6776501D803
8DCB2F3C2F95636ABE39D3DE90D1DF3471D83495B1915737E8F0796A14598F3B
A29731FFADE7B18706C30E50BB4973B94BF0435AC87616C0C26855C79ED58437
C7F57527B6B975CA93BE048CE142EE67937F298A65CC1AE5122BC8F71E5D1374
3E2B5705590BAA24F8B63DB90A0FDF982B147D22911CD88477217B163EB95043
90D7F0804F28A5DF2310AE9D30F758606E55A8910606700D1AB8E72AA8E6CA7F
654FA8C6F13CC218A3E114BDEA9F3F04179BCE86D515B3B3CA751548BE122F61
8F92275146B746BF63C8C4B953BBE11BCF65003D7C14F2644FF085FBF5012647
D111A69CAEAD0B1178C087750C0678EEFC9D877F10F7C8C0EC180E67319C5790
F0F2133605A174BEB44068BDD659570338D897DA44BD941EDC0E66A5E026E1AC
607ABC17B77430AF88A86FA270F14B4944F27158412F36CBB1A8C60E5D61FABA
B8309AE123A6C9616C5C8E5DA5939BF19A69ACDE989B3FD5A2D18B6F820D6F21
68B68EF69DC3B99D7E681A99527F5EFA1B95EF9CAC3B3B303EDBBE9C97735AB5
9B2CF336F5662F97B6F82E6DED15B32E6907782EAB606E7C246D47FF5043C96E
89E9C036E84AC91F619F3FEFE394672EECBE1E315834B81230D15DF59582F777
54C44A25388FEDA8896EDF65056BD998B1B755EC55428E5FD6FD34403351FA77
2271741498E8C8AFDBEDAD13C5F886C67A45AD1E1069AFB54B007B4F52700746
CE527471A6B332759365C4A31A82A519674D305523D3391FA906FF7393DC4DFE
08CE888A5ACBE4C407C8FA47A0025EE69E0B714B30362DD09229C80136374D26
692A0CA34E3C588AB5037867C683D88DBE30264ED98F43CC580971DAE4F8D036
1EB39EFE246BAE4B0D2FE83F6BFEAA41F3B26B7144D34126A8D876D6AD3E0F19
36ECCCE234C13F17F9A0291F2EEC85E5476FAFEC6668094D1FA853632B19F817
C1B92A11EDC8B331522B98CDC99029D650D73EF15A04144752766575358EC857
0A2429DA8FE82F63DAC1B07823CCE21EFC903C87341740F92390E6DD3AD9B7E4
4DD2822D40E023A5486BC7AF461D3C8CF5DCFAA2F49EAFDDF799D99A92AC230E
E2E30B6AEFAB44696D80CF4535A5E281913A0BB01918E8B1D66E5A22B56F79FE
F5571B95A1A76032D13BE25F777CF210384EFC63DB782E372284FBE4E0876AF0
75B51DACD371FB64812F493C65E3627DC9B66ECAD3AF64ADF609BD238CB01589
8952F13A235977B315C6B061ED291A3D763E03528359F2F0EBC94C3EA0001042
428239012EA44362A104E919F1C84DC5D3805C377A7524D78851474678819E3C
6AB5AC68574BBEADC890E5AAB9583F279C6BE0B2BF3FBC77584F7967E315992E
5164587B1D8AD996C6E882C94D7FA086376231E91364DFD02B5F0678DC863D29
0FFD113074DEAC4AD0C113A0689771474616840F7D73E872A3F81C752C8F3727
7FC53686C380F75ECBDB7B8CA9B4F4FDEC8D3678C1FE53D972F2FF72A70ECD34
7E1C907FFC2D5A568F8A70BC60794B982EE4F3D57AF92AD5419695DCB3291D8B
72A087A377DB2DF51DD4BFC53E2E360FC1E7C2CD8CF95442EBD15E26501D087C
8982D6B4FD7DB84485660ABBC6ED48733BCEBEF9452311666BCCDC178EE3B234
A44A2652C19C8D31C93133FC9305896723C403667994B0639D860F9B465D942A
F69706D0E42E13D44320B723392E3F9B20E39DB717FC15FDF328005DB43AAE1E
43E95136BD80AC8946AC997C8507BFBE2072126C498D615FB02B9C865C8B6D75
395E80B0B978A58EDAB085439CD16D9A2D4501A853C02606DCF3DCC88D5E4DD9
31E865636E571D423E5EF9C3ED577D189BBE092B8A180D8DE71D0A982AB1C0D4
999073F176B811BB5C340A2A6DDE3F4C9C56E6C9F6A4E3B65B3305DFE13EBC44
22CB072899913126FED1539CE80284F38B5F3FEE1B5E52CAB31F8E1363E38F87
B6356A4F10C02F57FE5DDAEF20AD77B7D76ED325B3C0CA93EF296FC66D1201EC
8D1C0670B2D1CB44A6DD20E7972D404DF023E599DE6C4E1C606132032C4652F0
D97037FD695F90BECD7CB6AC2ACEE796184A9CFA7584BDA409062143F94369BF
DB57FE694F3B900C34193E943B4782B40863819159F7D83E108CBCD7AB1104D1
329E2378C16E6D63DC9288DF1BF21C09F61DF977D447C921AE365EA7AFF967AE
0084387B52C41F7528C114CF6ED9FF7AA192DF2F8A3ED4CA0D65CC8C7086D1A1
D297DA4A28545B49091D1680A5D2BC5DD8F7E1E1A365DBAA9A394D0E08138CF2
764A10FE9D92F9661E7C4C194AE8D5D20A7250CD72F389A0D6C0E484E3738E8F
677979A154E1B328339A3D687B46C854F2DA9D4ECDBC04838FEF4272B13AD78A
8A640BBB643DD10E8CEC7189242E1A689B90F80A533BACD3E465D094B6490A5F
A698EC0EEBD1B06AFA66C49E1490EC01CCEF21B1639653A010AED5F14977546B
1D3C5FCC7828679AC79084A9C71ECB847408D1CE24CF7D6C8A3D8B6999D921E7
2026F18639E36B48F69D8797F6CA7332019B86CAC411BC79646781C4518F37A8
B66F8173DF357CB61F1CA27ECB4E7913FF96875ACA114006FFF68A78777A327D
F7FC856DD33A67BB4AF412DA7FE5F977420C20FAB4B295CE391D73F8C38CA84D
F62BA0053F44244AAAEC63EE862E2D95E340AB4B3B9353361CF3B0578007883C
4A10824A8EB3D104136DF446974C6345AE1761CE0E3DCCBC5CACA28C33AD88D8
FC5FC2AB40B5D047982AE81F95167ACFED3C707D5D2E464D0257F09CBDC04F21
ECC117B8B004B03ABF0FF31C2AA28F6657CCF88CD7F9D9FD4525942F6075E98C
7CB544E0163727F4B65D85450356520B9358289A685A4C46C2E24AC43738F842
03ADBCDBA58CD2EFD004EAC977ABCC68ED6F3A25C2F73484CB34EFB84557B45D
309D716C1D3566DD1D003FA446C4AD12C8938C84A71C114A562199AC2512B23A
6497C0B94E253538C5E0D06728A4D74B7510DC88840B7AC62A7FF00B01DF3776
F3A820C06D156F655E2F6F8B4ADCD6594737FF7B64887B4E79DEDC63A991C661
1D421713135439BEAFC0D2978B315F790A9A6BD49C275E97C2EE910651BE9AE6
B0AE46B7408F85F5C6069BF44E9457ABE831351C18FB746A27283D70A4C54B3C
1072761B0C1E9BD7512923C11A43A5E9E3BD506EFBFE9BAFFF1565D598A74087
C041F4CB906228617BCCDE0FF82A48525FFEA25F6999C734A56CDD7D25E65976
58801D6FDE79EA92A7A0087114223A8B01E5693BC01AA043D7D652B330C7B811
0EB2B025EC8BA4522D39CCDEE8A4F5B8BD3607FF25E62567DDC96C28FDAC5374
8FF1ADF6286376C8D54A4881691E7A84A025880635EFCEFCC5B17F4843A2BFEC
58C2EA874D558B0F46BE413089DDE5802D61128B5B2E4947877EB1F3A758B5E5
5971304F9A5C89FED7CB672F132E065B942E64DC780BB5793B2D58D72D9AC828
6E61633A09A51BDFFF7A20AB920B1AFB79F0AF65F726394937C1FC5056DED369
593F7487CB390BE16106A31099FAF4FBF5EBDA5530B27180661A59447CBDBBBD
529C85F74289F7709B1B6484862666B871AAD4BA0389CA167376613CDBBF70DD
3495CDFB1CFC749960E30F0E0725AD516990B85B5E66F6F3518E3EFCF2FE1B24
33D3C415CBC4A7D1138857B5B98FBC66A3EFDC37DCBB64B8EF98B97E2DF32206
6B5509AA7F67106F1577A93E12C7C01D11F0221C60884078D20730AFDD020D7B
21936F5223B22842A6213EF13322078DE4CF1E905E2F0625971996E6DEF105CA
35E62925CC12F3178E5C9C048B3ED3DE2523533D99D222F957C56E3D3758B855
ED2D98D158859317FB58DA052415CF6BF38E1F5E4453AFA0C8726ADC87E473C3
0ED5FE021D827EF69ECD542342964D3E11D2782CD36BC6596AAE6208FA589A01
8331D25E5B0DE7F17E63D8384C29520247C7D1FE0770F1CBC15D1CEEAE979FC7
6BCA0BF04405595BD5A8A009F0B288A23C203E4AFB390E6D60D62B0F2F6DC30A
1B94B63C795D653ECBFE49829809557E922510F0ED2CBF3C4B89E103DD07EFAF
B9C0229B52EC0221AD76FA946AC00E7EAF5BDC32AFD8FB304206994BF7A3D283
7283E11685F37D1CB4C432ECF1180669C34AE1D06669A5DFC4AAE701C1AF7449
9A0169148456ACC5D4B921C473289CD30B711238CE275DE87B1FFD29D7AE8217
AC85B4AEC08C96A4D8A402066DF11B2B40BDF5629CAA72E60BCF67EF49510DB2
C583301207BC5711AF7409DBCB09DCED5009FB8B24B140920B73E76CA1121190
0E7A52E37E0E37D608FAF16668DAEAC4D8B78999CACB4F6E7B50D5AFBEC53F03
AB51F964CBE293F28EDD3146FB94C91D8E03F68DB5559A226546EDC9B38EF5DE
FD0E0C654D9E97727D4C77FAB01E0480E9DFAAE71D0A4EC6220EE0DB27353F8C
42195058094B8DE40C3424FF349C13DE17290E179FEE5F451883AB20AC92EEBB
23602BBBBE838B87D514572355B67C8626FF338129B321D774B1EBACB8F10176
5768AD37EE4DF66EC789831B931D82FC1EEDFEF45ECE0C0BDF31371F645F8662
683FD55DF8A7BA6D125B96B6B311B3F4AC4B2AC17787C419DD71C97EB8FD9C28
D33748F24BE145B92D3A3448E1071C14C88C1762D7C6EF2B14725BFD45FA14E4
B419371CF255F0636794E91EC2CBDBA9D9A938FA06BDFE812F0A4982D102045D
206688DB62B437E1CCA0F691470BB14E707B8912C3DB8B9AFD63BA149FA0021A
34E9F3FDBF29858F65E2C3E9A071256151DA661B9856A9CFE9F398EEDF4347F6
DBFC0F0814E803D6F7957B5B1708FD0DFFC2897C2391CAC0AA676F2B7629F305
69D86758FB954027FDCE0823ADB6E9C6A0CC3B272150A19CE34F561C0F16F315
0FED9D2A87A45A22E6A1F5553AE4F0B9542385C810005A2C91A8525B8596FDC4
B7A9919590A20D628FEF198392CDF5F3BA05F15AB776E80001288F2A654EF00E
AB99395597AAD7F22D53EAC6542BBC4B0C4A8CB83B44472873A374536E2BFE3C
E3CE886F30F5E8664C1E39FDA69C81621E599DFD7CCF9677ED2BC4F187994FB0
A5A9408DCC0ACDC54BF51DD45B44A578F12502E0037514BCCB5619AD6F16CF2A
7549C9A67A794B67D9E18F2D8687AC840B9235F4637A1B238A4345158632A552
B9FCEA687C7DE9372FEEA0BE4051D0ED101C0CDCC13E41A25AE6523DC0CBB360
47F4C1BEF9270653A5A9611BA9BBD72A2B159A62337CC5DFFD894AACCF64B570
FDE7E6248B6ED9D5A1215932853B0C68D93D0A4233EE942AB48EDE8C4139F15D
A4FFB038B582FBE603D54C4AA3D4C9D1D6EE001C76B68A398A6E28FEB3B0BAFC
DA6E702FCE3E498E66794C34BD9F2A837D13917413CE822A81E47337D72D00C2
7F99EC32C1BA1A04A7288BE6B6F2BEC45F7C2DB58B320496C2EED64DCD4DF5AE
EE14F1126E2ACF3642047B5610E28EBD47EEF703554F12BE61E2E6D4B23E9E7A
2468DF0F6590CA0EEA680572A9E9A908755C0D338E935B9F771F4DFCC83FF30B
9E4BDAA0E9FA86FE1F5665A2D076473DDD69EA774BE4682014B17ECD07869DC6
D43C2776E1E79594A55B62EA122CDF3BD07AE3DEF6014F83D400643DA0AE28F7
AD3EF412C6333A8C6DEA464F84432F59FD7B72064E109338E948D7DD65CD195E
3EA7B5BA138D52C5C902BED2FBAF309E389D49EE7701F0D5D4EE5842FC676CA6
5DE65B2AF5680AD5E10ECC668A38514F3D18700586D67B3F24B98477C36ABDD9
9EED619F725071A8A326079C7659EF763FB1AC6810768BC150E29451686D065C
A8B3FE02246469EFDC18A1869F3DB03895BB667FEE423433B87DF08CAE05BD3D
7CED25E0D403CFE0E4934F8BEBF88407CDFB842283FB6928B24EAAF135EDFE45
84F01908C2840269D252E7F2DD1E733A04080C6FA9C725FF0A246DC302F34D2B
E6F8ED51E22838D8E47216ED603D7D510DE052F839A313679892CBB60D392328
D200EB265624DFB1F30EA9F80A87AAD4FD933B9CD6B5A0D5837F89EC81683C5D
664D1B89DB6C0651E149E4BA7609C52F7C026BE4C19240CC50FAD2F2D55EA940
0A869365774598D41D9CCECE094F6D1ABD33FD00AEE7498110F98E8EC0044626
3CC662DE37BBA7FE73244D06AD0301D26AFDFEECE6ECDCBD7D9385170B4D5228
603E933E3AFE897D11BB94D616434F63439FBAA1E83858F8B26E28D572722563
CA3F3ED5EC9A2B178ED3A57A220D77F8D3EED115C718DCCD6E58F0A043C25C19
70117541746E9D0BEED9615B48BF3E93182D6C93190383E7DCA02AC3F95DDDEF
8787DAB018C27D49670BAD07779D39FA2FF29F1FF6EBD6F7619842F5C9FF8946
0408D5005970179D361E3BF2D333E83B491466D61D1BB17F597CF01E9FAEC665
91CEC642E2858F9434382397A54BDAB55021A3945B66A2B146082036CE066EE2
EC56C362C5C72ECC7BA5998279CA23B7237A51A224EA30898479FDD07664F063
1D4F620FBF909B626363E0C95073387A63BBA2B9EA4D90B824E8F8DEFA9AC1C4
568EFC6885797CB0FDAE31397553994D7445168F896DC540C4906B08309E79CC
2F308943C760DD9948A8A5E6419027E75FFC39D69820B4395E5C4D727E226D0F
36F41575C8BAF2305BBE79273258E20886406D681EB42ECC3A34A9843387B408
5654399625787C9D225B18D9106FE854BC818DC45E855F51BCC4CDD810CBF197
714B2AF60FF3A50AE4E845FC0AAACD4A7A634A34537BC7CD43C350A1DD233A84
576E74E4676807C53AA522A8CAD1BF6FCB588DEF6B416615B2642DC7969E0570
EAF91054350846DFB774563AD2B3B2B4FD2899145794FE3FFAE4DEA6BFC06C89
0B2F807F8838B33B3F1131B5C4288334B608AD88F6127AA4AC39052627DFD28A
C073BCABF3FF61DA85A39BF1DBB5A8F234DFE218E96E33C0C0DB65BCC3F083EB
EC6282C09445FEC0587942FC26AE534402B668C6044F6FF27D875B0CF26A6678
51DBA036E96C238198DE6568EA54C568A75FF5C38120A38B37EC763D35455838
4F9D447F63DE55A98D62613097A8E0579606ECCD46A8C367DD9A58A45F822331
6B3C7DF6A76289FBED2EC1400C159E540E090CC56487F5C54E9636A231E34CD3
60D5EFAF79525B4F3F97EFB1BA9CDB1351C400F4E56F38763213CD771BB29845
1E700DC8C6481CFE1451D8FBF3410A4F4598A56CFF50B2853024DCB512AB170E
B6C6EDBBFF8E10F645B86C1C478A94EFE37118D8B3931948
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LinLibertineTI
%!PS-AdobeFont-1.0: LinLibertineTI 5.1.6
9 dict begin
/FontName /LinLibertineTI def
/FontInfo 9 dict dup begin
/version (5.1.6) readonly def
/Notice (Linux Libertine by Philipp H. Poll,
Open Font under Terms of following Free Software Licenses:
GPL \(General Public License\) with font-exception and OFL \(Open Font License\).
Created with FontForge \(http://fontforge.sf.net\)
Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) readonly def
/FullName (Linux Libertine T Italic) readonly def
/FamilyName (Linux Libertine T) readonly def
/Weight (Book) readonly def
/isFixedPitch false def
/ItalicAngle -12 def
/UnderlinePosition -98 def
/UnderlineThickness 40 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-634 -312 6171 893} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458B82105453377C5BCC86A8871E969
2A5883625ED627224A0AF3682D900B429EF419A526767AFA4B7CDCBA9944E362
4B9085210A29AFE2630A37A9793520AC21119E3F50BC0AF96871E5A8911FB777
68FE40F007C5F6EA075630602DB28D02B22C15F751BC16CF1D47C03C6860460A
BFF1F187F1DF8035A7204090974B9358A50802BCEDC4DE3DECBF30589EC7A57E
A46C81030134C34720ABBE3853A90710E8029CC37AA1E5581ECD6ECC982F6793
AE4E6CB73B1300D5BFEB7BE622681A268080310E288B6BB3902FEF817A055D4E
168D6BC5FE7AA88FE69D1EB23172CFFF4C684E29EBC36C43AD3A3454DC128798
A539AE0F3C7A123D6119EAEC7A8CA0B081B750DD06375DF43D3A498773B7DDF3
20F572DD19A6FC5654A41AB701B7F310C643070A3F0CBCB56D3514B6E6CAA0D8
1E6889B1B3AFE479FBFC2BEFC65E92CC85A45C3D6F079ED06B5BC960DCEFBCB0
0DBCCADF3D6C66DC2282A46268B6D29E2770B8028E69CE699EC81C170E5A656F
85C281BAA67ED9C0F5AF5451C76CFB76B65211FC8015D0CB050A0AB7DC6A5FFE
F5543BDF443A1B236683004AFA91F66909F211381319F2D3C7AAE154952088A1
482CB35BE7D7C77D328666F776E120F8DB7777651002FF048CAABBD695C0ECA7
05B5FAAE9797F1ABBD188D284299C10A6653738263E1742DC3B927B0DB2F0853
5C3E4C383587086CF8EFE52893707C0A44881F7965A3921156198508892A35E0
B6CADE83BD6ED44A31107D919AEE03C0B2DBA3CAA9D268D0DADC0491D3567F7D
2E1D9974BB845DD0A0FD8DF7F007D742E262A1F97F814D7EF76519B0A51E62C8
393BD870DDD80589D569EB3B9FB83C63A66FBB89AE22266137EFD4CB20D287E2
F4A2C69D13196564A88B0BB1EF0774C8030A1B4B41A17C0C12A4AD978E70C70D
4D177B098AF9E7CEAA7B09566F0A6E75C5B2203D7F0913EF7B428B1361A37745
02BD2CF7ACFCE13A8B5925F2A65853BA8CD693DA796A4260E55EDDBDFD345136
4F78C574972637488002E3106030F62ECC7702548C37B7C6A85229023DB40B5D
38C342B480A7C8677D67A8722112BFFAF7CF1B1EE6EF45F817D43D0E875C06E5
4A32178B7A3CBC14FBC92D794F7AA32EA445E702BF763D634A142EFB8F890D30
1E8CE75D233062EC9D79C1AA2C5FE8B7E66F63F91B4ACF66DF02390454EEA4F7
449627B6731ED9CFD381F388C987E7E2A391C48CA876ADB0EAD0382B7EF0D6F1
90ECEE218F54475CAD8EF824CFCFE8869499184CC1C99241EF422AA34CB729AC
9CD10539F4B887A5489F1F5F6F4440A4E6DEB56FE031D5D3A6D69CF2546285F0
CCD68FED95EDD2F43C9F64542D990CF1968B6384A432297C8037C0B7CCB59EB0
40E74FEF43352784AA22FD6A58590CEEF2A6945A4813CF787CC08B83BA990FCA
F4CD1B0C9E4B16B028F1ED33339031189D04EDBF75EFE175E1ECEF145C452B44
95C129EB787CE6FBF1285E3778E688D21DE377096C5BEFFEF5722743E02D6F11
4F19F2EDB34E3943A0130C5710BDEAB05E85F1B0BBB6B84E49576051D5EDF717
0A1EE0B64B745D12F8004B35DAB59844AE56CC0D514F2C751A09AFFBA7E4E024
D6A35144FF0CC1B182631356A6A5157265CA385657F592A9B4A542E951D66124
FC791633A92B882DCA53690EAE705C8E3659632A4D00BD0472097FB42B0CC730
D3539C25ECDEB0FCF259C3C026D76687F096AFB703C77A54B4670E0E2BEE5352
B536F63D5FCDE2B95823B06E84618C01ABF2AF00721CCD364F5607654C188E8D
194420E3F5697D0294C23AF82659949BD19C5627E4FBFE7A839EE93D88CEE92E
F4019F6DBC774EE68320484D309902892E7A30B005108EC43879109C6447810E
DF2DAB34DF71D6798256E434DEE2AF99CF51DC357F7AA75FD666C62CF195403B
60294A72A065980D3F9E01A3F1FE91CD91A979349148892407E3B7CD6277AA97
731F2A1B54FA7F2D91BCA4751BC48CAA934AE3149F9435A44F868F605F0510A5
7FD3017739748B78B395C083A1FA718A773474534B2693531905AA938039836B
F985B795AF427E745930C6695CD14A0C056810C7028817632C2AAF6C752BCAF3
4E419D77ACAF26BC3F2919DEA27AB0209E9CC5C833B985435083351730E7B41C
F52E26103C40BBA3DD01B7C3B917E96596B6520E11FC69BC36EFBD8536F27A80
8BD4849962B1D148F827C8B6C296C03567D4B8D5BE407D8B47DC5D9697744A6A
F134BCF88F4E9244457E957B3152DBC7F8863C0663A13C4EF2B5DA1FFC7B2BD1
152B0590BABD1524451FA0509F4FDD32BFD71E5EB79C36F72F25D10AEA12342D
4568F119A87945984748E2E010146CABEDF66E00D14DAD00249A1D30467B3467
D76D200EC522B993400FDF37672F4A816F9D030A574473BAAF92F35D0D41E5C7
56BF560045E638CCD5F645294A80AC3CCDDF7098FEE8F2884ECDC1AE1736D877
930D23B984E323EC91113826FA261CEFF00B224537541D7BF141137276646A3B
35B876D98E1E37DD77712D774D8660B48B27EF3BC757A82A66C76933C123AB9F
4E08D5FAE581EDD3E8FB0EF2983A1B32820D1FE8D5D13EC7D0ECEAED2950E0F8
2B503A7F72E563A9F11F95BB61D6C13EDA3DBE3F13375BB3E6A95CF2A0BF892F
EF6F6BDB0F92FB844E19CB8EB3495949CD4387EE3A8946D145E41F62924BCB6A
551A1EB5F5261BD6E7F020BD8F85975745BFE725CE779644090A3CD401666E53
2CF5875B77CCA4F61CD7041F4E47D50E02460BBA3B8A292586D366ECDDF699C5
E012D00CC1476FB1ABDD342CCEB62474A876842093A5CD2243D500A59A66D4D7
9D50B8157C429E5817B7E100C14EFF88E8547C4CB37B009D867F3E7F11B2441E
54477202CD1C4ECD77E8BE0681F2A6175621A8F6BEB4B778E8986E2493463B3E
C364BB74982931DABD32A87570DB7468A77CE8DC0268E0DCC152A923B7CD8F50
CA6F6AFD16A71481AD861AF6D29DA4C8E95A3F7F5066D533FD6E200DEEF82465
89168CBC6F6B36AA9D34A295C5AFB70475F98A113A830FF6E2EF51D7C2888A4B
8F413FCDCE7167D50BAB5BB2516FB4FCBABCB660F3D2D3E5BD0D391B02FEC96E
2A3C897F813A6318A2581C4F68E79EDE9138FF6BF414C6A3AE58432F608F4CC1
ABA7272DEC803BE444E019DEFCEAD41998DD1F2DB8B7078488F4F3EA9C84AEFA
ADBC862EB6A9DA323EECDEC5960E133DC838DF05CB23873B2FF2AB0B8B7F463D
DA77F15D6F840C44FFC1C424655C6B93D60AD082CF4DAFA9074E1D09766CD279
C1FAAEF8CFA265E5F137879893B8F97191A2440E84D3608A98857F384E215C4D
CA31C252A5A3BA4652601EB6C420D3B2309684DBA7D0A082EC7FAB11CDE4A10E
E536FC72BEC6BFDFE136E92A2A393A12B1A9A61906D8D9812E0261A7C2BC7E66
AB6AB5B649791356886E3592F03466E072B5034A8F0BF4F3AE0608D93127E879
77D11A3DE314E172DDACE35AD0DDEA99EC2AA101295FD8EFA3D67B4012560B8B
53E1063C3D398CF1751ED89DAC0FA9D09D64EDCAADFCCB92D45C1ECD0E671C30
ABFAF6B5AED7E4362CED5B602E9A9A4B61A31824DF5E24D6046289773A8FFFE0
9056D9554B42B9604908B6080C7303883508BE0262A8D010D8FB4176807E0658
CDA513141F8D2693CA304B79CE3AB68C90DC1D702891442B9C7F4A1A16F8666B
97BF84B63B09F2ACE0AE0CEBDF372FBF6EC6D3B28581D0309361168AAA738FEE
A3EDB1AE0E4F67054169C473B220D8B3B41523B047C2FBC16C55FCD50773C1DE
ABCC4EC8C566493A0E9FB234C98F2347217BA4CA038420C5D9109AFD65F61A29
D3584A465FCA425DEC33E1313ABD0567BA733A487F88988F76FD9D03E888EC8E
A31B9EC8A91B0E7DD722A68D6A21A1B5BB7407B1F57F36987A4F1F57306CAC95
E26F9012E31C711BAA899446E3DC69BE78E71B389451DA41E05A78C46555AB1A
9C6C78959C0B4634EDD6E77B40FE5270A90FBC302CD473B639120B9A2982CD64
8F1629A151CA0652656092166E76785EFBF7A8FDCFEC32D6EF933AFD7C9D411A
7E0E9E57D89BB75ACAE30BE9A84BB1582DAA72CBEBC80E8367A115F3D7E72AB4
3AB5D2E65950FE6F6253EB34289CB6F253CF8950C0F6470AACD9A990962D850E
7F7883214FC778675F99850E4B51C4AE78009E863B37C22C26B23C56DDC8886B
782523CE1685AA79824DD39ECFD77C3A4B63E238F940F1D43E273D48246275A6
D7494F6226CB03CFB74D2A108B09FE99AD54219E12DFCC368B8114FD5A662D07
1F4A212666DAA87B08140D064A235A780A3D972AE4EB612EA98A7C506200AE75
F553C949453738C84B1FD8DBB05105C656CBF3BCFF14E889BCA722C557760046
F1D15FFF0104B2820D489BA69F8FEF7456843E8A71ED3B3C8695550057178353
FE8F13AD2F41EC22336C987A516E6ED927DC4D24A33841E451308CFB4A73B61F
805A106C0818D1A7C1AA189557C85A22BE2AFF0A6405ED0A9F33BD3FBF36C60B
1377DD1D41D384E7724D78CC79759ED8A9D2BCDCE2B1A29176E01508BED511D9
3C7274311EF537E41788C0739F54B912CEA40D6474FA1AB7113EF0FBFAC88DA3
D392D5A41D6A9B16D56783EB04F51BDF19877F96FDA3DB573D1853AE1340C8BB
E91B72E5C515D5D9AD3F6736F00ED340EEB98F75FAA5129AAC7A50381C6FFC87
C9E0671E321044684737D10DABE64AF966ADF3DB9068A8282898D54FF9FD13C6
7C39FE74CCC8D39F9B2E114315BECAE79C934DC8E078E856B6D90E1F3C9A0A2F
6390AFE75F01F2E8ECA96AA67F5D2CD20646F032D625C0E2FF3DA8536E24DFF0
E8DEA30C3CC9C61F202B530BBCB7071150AB2721B4E3B0454987F51704022725
9655426716AD2D55CD3E28CECFBE31026031DBFB3EDD740F507F523F2633C053
FFDA1A4C0157AC2848504FB17A835981407E077817CCA8D840ADC8263C63DC5D
584AEAEA5AD475794B352689FD9C8CA37D7879DE471CE20B629A4B54AE8AE485
F697897359D7B8256578649570D80043A6859E829F7A1AE1E03CA0839C8ACE04
AF57E1FC42BD6751B87B4532BD9E0B7BD0BE8754CC8474FE1E1A8D7BA92EB24E
965AB095ADD787193CD445E36AB7C61EC1E5803DC3C4E1ED7CAAF498AF397B20
5B6E2E3E1C5A4FCB92DFAC55ED9FC726385AA255B5F9D8456695C61FAE318E86
979927A2966F244D791197246328C3249666D511277A3F32D62C0C36329FD117
807193FADE37BCBCF9D97AA0A9152209ABEB550A53F00C93A9B10AB606174253
B804139F3AA88BE060CA31E42BFCFC5E2F04CBF7C107B9C4D3F45BF0967A3E5C
5A4CD94FFF42F575A5C3816BA7970714482F63B3E3DC24209EE5DF9C00A65D8B
755C5E9B1DEEE93D3FC5C474BD62FE3A07F94459CE8E251FF38A6929BBEEDA32
AEAF90039BC84573570C79F0FEA1FDA76E824018FD9A6A4D0EE9BEBA3CE2DD4A
649AAECFAC45B78982EDE6AEE4FC540B70AE2A0471292C4AB04AEB5FAC33FA51
03F428916583B271FB53EDE72A0849AC9ACA5AD1BF65D0EE9C78EACB517EDDB3
4BBDCA2E3BCD7C9FC01631536708FA4EB66F9A75316ADA58A63E2D65E09A9546
EC966D183860841C09FB68C0E63A48004F1065AEFC2E519DFFDF323C68478ED4
323868EA1558D0A9B27B8360FDDFB8A8FF7DEBB454C2D4566ED68110F929C8E0
2BFA5F49E1C23F0B6C1738FAF4A7937DF13C8FA19EA8762E7FDB66AE3506BC70
585DE4FEE232C5D1E95B75A9E983F5DEE85982CED614B31BD96F88D8CB905E8F
83015AA97211860F9E2C89D55E326C5379D365A02EC8A39978E68ECEC8A17EBC
671A239431C7AB848F2660EB8F5EA2A8D2A9B0BE0E50E9BD8E6E7069F9F26752
2C42B99474D36CC8C2B2DB792804EF83D65B24DE2FB3B3868274A42CB2414D31
65F0DBCD99ECE0ECE4B22732A35ABEAAD29BC114FABB7A8747878AD715A7CEA0
493924E17EF74E0B7B1571A6450BEEA9EE2C67CC2DF8F6E2AF78D4C8B2AD68E0
A49416F99B5C7FC2E606D5BB7B48D4BE831EFA2CA4415E72E7EC2736C93B7095
FCB657AC6505BF549E22B029DB69C519FA6A04D7007B0CA57A45E0A5232D09BF
27BAD6D828B7BB1A82F66828FF6437DAD3416FF6DD5A47E786905B36D014DC74
7780FD3E4FCF4B36188A04158CEE9A10E205C53EF2ACC3764137123E9E22D1F0
A6ED9C13840DEFF1CC38815C0505A7577EFEF2B8A11270CA699B925845E05124
10812F1099A3D60BBD93144414DFB70F54A9C1278E3FBCF4643FFC81BA4594EA
E1F422BE7684D2BE028DFD314005B5D23D85ECF12D26D5F49A68F6E14583FEE0
06BBD1F130FE2F41AD91C6F39033189AD9B5E9F55BEEBD8910D23DA6A2F13F50
9170179EDA9519D22DF375A0958E22FB84116FDA21A7277F8709F35ED4CA7F30
A69CA41E87704F033F93BE2F1300133C0AB3B62F56B6F0384E2FA775BB713DCC
7BF0985A83C2A67B9B7ACF7B36F611AEEAC0E2A7DA81A6F1D94CF54C44F1948A
CA554D04B6178F097C5409EEDFCECD2D47E36414787622AF63D3D6A7D1222780
973C668CF3C00C731E037F47B9A6D09282D09A39A8938E0977DA8188DF7D8E30
94C4D414153976C6C127A57B14F4748ADAC0A972D5B7246E1CDAC7F507A33DA1
4F9C63EE697911DF3DE499EC5421A183A8413FCAD3878D5527A8A9E25DFDFAFB
04594D5F2C802D18BBD587BCA5900C385664C1599C79DA1CCC1305E9D9DE7CF0
D12B8BC0E199F6531FCC2A9EEFA042E48FB969EFE10D11EF305A8465B4581D00
8E74BFB9C5F799D684BEE5F2C4688FD8CFAB30C1E17237B8D72C960315B16E8E
26434217AB8EF8BCDB8C2F7706DBB0186A6CB635330CDF1CC0433BEDDD7C7D7A
5C744FE748C93FA63C009B32D4E532BA176D271788738D21D6FD8DA36148F733
5B28849C632B37208A06F0B5025594367389246E71CC07379DB5684FE5030942
3615F8E26C28C29A9A571DAF8B4BF622CD4F50CBB134AF18AFC4CDBE2AD8BB94
446086FE93D6960362AFA908FCC2037CF7911EA78C4CE6A48FCC2E18C95CF27D
C1EA30BBBCDC325315865D1073E6B7C8EF07F5A3E47BBE8EC312768DDD750D62
4F71B13D4FFA05D3D8CAA7EA0717F584F5A361D284CC48F56C20D4B77CF77AD1
5AACB90B2C6E01D43CE307AE5A8D534203F339909B8721806807C4B280EB85F4
67B09C837C252C1E7486E04A86D2A9F714E12ADEC865F14E14DB2DE27C8BD356
00775FF26CC271E12C6719EE4E00576DA30BB94BF0DFD10BDC484CE123E6C888
0CB5BD7AD7C8F6C422BEC958588A7D406CCBAEC4238AA0D5D9A2ECE770360A69
D958A16D141D240A959F59D58589C4A0A0D686D244B14D4689F7CCC9C4270280
D8C45D72F102616EBAEA0C8445E6C0FF9CA58062DEAF622A3E24E43AC32915E2
DD45B63858D38A7F62A3C9E6E90584A16F424CE18375EB248C7E8DF9ACCF1AA5
B6BD55A0F850BA7FBB0E80A8600920D018804D712E93B820ECF4658380D3F464
753D6434A2A9985E8DB1F08A0243100B39A4A9CF565FF9B216151ACF02B0890C
D212138F8D0049FDE1F9A87D1D275972F33932D153F7FBFE92A4F2807BE51C6C
D09D71994EE172309C15E58406E9F016C9CD7700D2371B4DF7F2D24A25623FB0
919A561A8A0FB206B6AFBB97EB505BEB707D168C974B4997CD1925601F4B9A0F
510060E9C3D90C83B298522C38B3A0770AA0ADA9158A2774F9BDD6C2CDF16E6E
31E18066BC3EF96FA6E4452CCEE6FF4916014F0A17F332C36C21FEDF792ED6B4
804CD113FD6C74FBB8BA56078C6F7CD4635845C8DECFA73B07BBE7B7A79CAA43
DEC233C129870AC44F2C8ED7D7FF8037806B935AA94268340A8631111A169EA1
888B93662706D6431C19F3C78187C1C64D400734755341D8D7D040FBB658F270
114296A87278237348F964A1944EC33CE43D1E08D2EE0112C34508EC5498D7DF
703F7AD5B436083522613DF3ECAD277615BE401FE8D8D4B0121A217C26975691
A89719BDC728E96C50C8D2DBB80546153ADAB61516F4A5907C4EA367B409702A
D40C74BDC897916A2FDBCDE2ED328702E4955B100ADD78ED7D3314FB2C2258CA
C739D067BCCC254D85CC4BB8D789833DE56925B7D1DEADD401115DA9ADF226AF
215EFE5A96AA4ACE1893153084B4E1EB773896E11EACD8A3E45F894327C05C12
3151C575892216D7C4D77CA0EC44168614C05C439F4BF49569F1922E0F2286A8
A7A13CCCA4C1427BA513293CC0CB598AEF7806C06C381F7B87A3136958C173CF
EACA5E28B903905C553DA08648B5C0F4FF9B6A1C2A8C3AFCE0E7A98F7E95EE5A
D60B1285A7C0F15A3374BE08F7C1CAEE3BC42BADD944195E01409C220B8A6642
48287F80A484F05D7624BCA26C1450F2353F195C6271DF3AFCC070EFE54CBFBE
3ACC78A1AC8611948CDC7C93B80F52D03EFA876CCA56FA55F2F55F411329383A
216191BFECB1E11E22BE19479C5670FEFF8548F5DD9A7653F9D831676627D3CA
D458EDD9D2C645D8959C5D696A2F38367DD8008B4E6DF0DCA7EF476FBB63343C
BEB9BCADC17997831D98B646DEB89D8BCB458C9DAA5E37C450949DFAB39145CF
2956D98239588E6778F8D57E47BBE797030A3FAA5ECA86A3BEBF3DDC573282E7
7C26F9ADBD0A9423E05CBDC181E5FB9338A09E227C6C8E9CE5EC8934B88C7FAA
4912BC5B27F64ED0C81666702B92F3C3CAB8D8B7E5638AFCC6540A5420A37A17
3434E158162D2C07BC08690E9B3AD8957DFEEC037B43F9C72B59ABFECF6DB0CA
A46331984DE511AF08BA10D75AF04A371B8BE52C137A8AF44E2EE4DF2E9EC740
EB5778E39C741CC32E2D7F259BC9E1ADA3D27650D8FD3137B815A5A7C88F8F2E
ED99D23A99B7C4EF5821393836C6605E6B2F25B703EDB52388A1B7BA26AF4D44
270F1EC102AA045CE90BA9685B6A9FED655006431F92CCCA9A75E08ECDA903B8
E587609B2346113E066238B1C4A6D569918DEED51E3181C607DDC2409E0C4233
E090E46B3D01305E40974B0606F96000E6FA1F1AD338CC17E17E0CA0D938FDDE
61F9698342F72A0232D1BAF8044C5900F8D4D18CB36C4EED051DAB058DD4A5A5
8A4D8E1429CC98DC77C52DC4617DD2C0D0BD03F279D4C279D4D20911DCA2FB69
98A31AF08DABF60FAB8BA54DE12F04511380430E168DF3B656410AF0B963651B
34E0973C1A80E2AB3D38017FB3C5BF63C8F7EB285CC6DFC997B78F9C579DC393
780F05809DECFC78682BBCC404CE1FA3040C7DC650BEB1F8CDE6ED0B7D7165A9
DA8DAB162983FFC3D0003ED292E6BAE3C8F55321E3626CA59318C0145BE1C495
D3FDB1BBD9A6071BBB1AF96EA0BDF5BD8CD25170CF22FABFBE77F584D4963DC3
D28836BB6D2E2BC388F2D8B07643C4F2BC809FB9346CA8B65C65C12751791531
AD0169BAF7A9123DDB3571CE5B1063F2C122FC055E0EF227C7F2F6FDBEDB08A3
E38506C63EFC4CE8B6421DF7DA1F8A8C8B34022DFE5F7E2B176B7D813B48E78D
237A642D5BEFFB636A7DD35766BFD582C43B735338E329B70D92B5009F47FDD3
5493A806A353E3216F5C88BFF4DD77E6CF1FCC80E33DEF86FA992CF33C76E988
FBEAB15F5DB32FEC100081521D971D6F2CA6DB49ADB1A9885DD337DE2F7E9800
0D53899AE89A2A24808B0C4FDF41735887BF3F0AD05D6456DD53F8E257E41840
301DCF038A73D49990DF020CC40B4F31F6A379A89118EB1C56B5AEEDFDE9EEB7
D97FB6BCC5776BB46BC913F0D27A017ABC5A6BDF5E42A06F81801BC733DC7610
6E2163C7FEE76DB2D5F0D2EBB749E0D555170F0AE1B81524915943EE4D677C79
2AA799B2DE50A375CB7C3428A022F1481E53EA7FF2FFD17A6B7ED658ABFA3EBD
09C34F638D8221772B3893392701C0926C8210293CB39D206036B1526E79EF5C
A27420264F7670E3E9B3458F272838796C0D5548E979D67A1BD9FBC456D9265A
2DD5E2171D0BB6A731A371A521FEC23D655B89FEB287179DDC25F2E3490EEA4B
B9BAEE63EF5185F8A8F736C91554D73EF15A7B3815FCFCA515979287566CC764
DD75B0A469440B43E8FCA1DCC7AEDCDE325BF0D0C7825123F93EB424BE478047
8812EFAC4B30528776EBDA66B0A0A003E62A21BEC8A5A9BA0159774FFFC79F9E
1958DDE5D24C044A315F256524E205DFB9EB86E852D130DEA9026BF358549351
8A43713BA46ECB346BE217A2F3D90E92F63D6DCD4C8B18E3D0399338CB03968D
8EADAC60E37D22198A65ADDBE9EC98A89478F8C8EABFF56F5A09C1257CFE3B41
712888ADEF2804FEB380BB2188EB29DCD19A56C7D2A494AE4C7D41C3B931C759
CA120094BF10839C82DF83FDE3DB72DB1914E82398052A0945C40B1E2316D347
FBAF4E5AF4CB5722D9ADA8C30249456E29F966F1FBE7705D1CCBA78266FEF6D3
E4537F32DF95C0F97115306585FB70E4D59691C2AAFAC725E4FB6E07D5CD9E97
2A8B9FC2FEB59CDED7502E91FD7E2D5D5F4E700EC9086DA48BFCC7D504C68FF1
CF10DEFDAB954503D2CDE2A2B3F4036FF75EEC9EE5C41124E129244B19CFCFB7
AC2A629B8CA46BA7281D8EA05D68134AE60471A6341C6AF1D108A573F2DDB5D1
A4261EAFAAF74709CB82C7CC736DCFF3AEDDFD05F9A15168DD086A8EB0B7F9D1
CC0FA6BCAAFB3BB802BC07CB5E5BCC57F04D2BAB51D7EFFF56E05B2BE7B63CE3
3DCDD190F68D2E20757CA37AFCB7AEB0415D03C4A8B5653C985EDFFA78222DEE
B2D9710BBAADC25D40D379822410D827EFACE84E984433DB5C3C24A911062871
0BD5B7C82C7CCFCD17E3D11CB1A45974A808204E127C55862C5C7B089968DD4A
6A338FCB81320DF07DEA87EFC6AAE69F73556C0A90C0630A952CF06D0FFC6138
CFF4CFD2149AD62E0EA3277CCC7B8AEBD9108BFED7D1390A3040DD8C4D1DC5F5
7E41C25DA8A310F4FE6AE08598572C707E3CC5C40B87F0B5D4D23087FC2960B4
5AEF792F7CCB492B349C2211372EA8C7D9AC211EB6FFCA02B76620B4AEF2400A
7411F1D9BF7699B1914D3DF39CBA5B4156D8DB312AC8AA4208BA03A42D71AFF3
C028D5DD9E8B217E936D4838D61CE3AA17C7F3FE4F8D0E071416F35F00ED8613
5CD0DC32DFEDE301EF9FF989CBF5B72820E40EB93E46EC19CA46D6A6DA0CA1D2
1C11081F76E9E4E0BC466167D1AB7495596845F1BED0EEA915C8E476DA4B7C3E
2E12FD5153FA8ED05C720D28393B9D463DF82F1E5675EA37BA4FC5E31952D55B
0D56C80BFA2A4001000C7AB85BF7F8A391267BA23EC1F65CA5AF6D70FCCD46CD
6181C424FEFDED7BF1CE5DB62D75CB4E704276634E629C8BA6024696B18494B3
1014CFCA5DCB82BDAAE23F0FC75DE2CFA64D8635BC8BADD1FE506329365CCD13
D0E3B5C7E9E70F8B19CBF1285B19EF7177396D3F678204811AF13B71A9940D14
4500275820B208068E4819A96A51D398662F553BEDCE5B6BA16D5D16281E5AE4
67787123E363C508079D3A3435F916E93C1F23A619F93CC946D421B421FA818A
4B14A1C9EDED40BAA220D4770E2C6E3CC8E7EDD5916124CDC3BDAD503879FD59
19BAAE1F247BA62476B05F4D443468204D1067712003EC226147D06797C5E524
9F828A71FFD462A0E8CB394D72F75BC7865C2B4CA231BC5E0E60B67FA37C27EE
929233D738F03B41C08474C494F44C9B7EB6D7735CD8FB21C434FE2DF3A4781A
C711EC68B79DD5438B1A1493C6809DCEBB020E97F453C971A117A5F6E8A36B91
61FBC7D89A16EDBE8BBF9A743B0CB701B9A7E61D4FF95132C3ECC8F4863ACA4D
B3A5CF07C63F7EE7498156C70024A354D9F3571B3889F9FF0A041ED69DFDAB74
53F4666385EC8FC416BB46AE3D7592317478DB7043E8014966F4C861C9D1503D
08F49759870F15202444EB3DEEB15AE583C485E6D495157CF551AAC93460A490
935131C21474B066D7059656980DCCABCC3751111C821D5840EC1816313959F0
59563A4F4E957322B9034E4AE6119641B783C91762E94B1C1D7E8F460237CB8D
25D9EA0FD509795CAC8426301058490E5807F21FD6D210FB51C9517F1E01E50A
D85973E4A27F6B2315FA4BAC8A9ACEF50FAE0EB699C4FBB7BA910E11E7F2C697
2E21934F06557C03400221C12A9D8EA7A2B57540F4BD82CA46BFA0A4A37DAF3F
A800E6329165A378877AD8B63882894CB6E03B5CE7FFDE739B3E5F1A429D632D
0F4979056A18E04AA75B9DCE90B5DA5AA35F29B02D90424C7B39DE9FB8F4C157
39916855ACE75D72BD92E6CA7E870AABA6921E161C6C6D4FC06E57BCE9DB0476
E3B2491626CA7407E2FF56014216AC623FCB1F5029F79910B7F10FAB381D6D9E
0EEC817B0C0E0CAF454E54D849C83E314DD4C768D40F77F772448247BF09D6A0
EDC61A050D535CF640EC7F8B22A10690EA34C6A89E5F06EE8D5BCB224844AFF9
AA7F713E89AB906D231830CA93BF85EED01AD965F19458289A17B198F1293697
35C2229AC9D0C327F1508AA5317CB8AA826B08457AED0A09D5B7BA3CA4E52857
FCF052EDF14B2496C52B1D6B7142F88FE20A5AB8A16663EB87BACEDEB48CBCB5
B114E1AC6EA4107ECB9C8736EBBC23504901193D09B39281A3A4B016694BE4DE
CFF963985A92A278BCC9B70A40803C256E22E5122BFAF367FD211F7197B4F53B
3071B2A81EE764E92B5DBE073357892124F21362FD196FC91B921FB8BF656A98
996282BC6A32257CBC217B8FADECBA870204FE7FBE4C198399397B136D2E2F37
2A42040F8C180C6D51ED5B06D03E96799B8220B58F2557289C60E9B6CA26ED5D
96E78520C06A5DFB63070D6522C9BEF8C4560D02319642C65C282F4113C6B620
D9380D5CD5A401625272DA93B586717AF8D58D6DFFCE577248996C73F534DD2E
DADC05F0BFDDF0A6FEC6B5950F5813E3717C31EE4C4D00E17FC66F49076B7D6C
A4FB356F6E36556504A111735A563242DB06F6F19AA2F1F87D5F977B448A9337
81D305B2C38FDE31F2AE724E36FD209F4A9EB525633072B651C69A8556B5065D
5DC4D3315A0F031E7BCAAF3949297D173EE0E4027169EE4AC1F2C37FBFDBD020
36155553AAB657D60E2C36D1BC7EC26DD026DCCDB232CC98EA5E642967145BDF
DAE5BAE31F9598B8F600BF0561A7C18B5B51BB1678D655C2F14B4E50647F37A3
68ED0394CDD4823C41E0C63AAABF817C39930B838C81858EE388F39005291772
63931D8DCC00349524FDB6432A4E3240957A1B58EB9DDD48D390D7A977F888B9
785B4E057BCAE1EF0321C0A911B7A4E8041B1A13FD2C1F410A1CEEA62CEF4065
07863C1EC734601B4E326FEA00B5E6E855F2532796B42E8EF837FA9BB22DC1F9
CC8C18ABCA492B04D4C3941EDA80A4C537BFCCBFF5A25E8D003710A2B8D40135
0EECA6246E4DC59853EDF1AAA0F8657D1F6B2ADD4A1F870E3626DA5684F59329
D85F651BDEDC1B02D7D06B9B6616C11E84331577C0B59A17EC0CF408C281AB3E
8600C5C7F06F212F2E2052DFAA4449F950A1EAC90278B8AE446ABBB751053D48
747E49E0123AFB9FC61814B14C93F707D53C1570E4C6BECBDF4634A2486C0C4E
1D82967658C95CB43D521F1F55475AFCFDD57E0B967CD089427B77323C3BC09D
60F570953301FD382568132096416D97216425EE0E4F1A2A43FFD23A886F004E
48A987EE709D4BA6E5F90FE69D7524D8AAF29905ECD40D78D2F455A2DBB8815B
964CE45895632104508636E945B51006DE85D26A58DE78D6A0A60186D5DF5C73
C7A1EE7237F1402A7A73A29B68D1F202877FEE35A0B493CA2527D000947FB0D6
90D6005BFEAFCECEDDA1F3DD8D1CEA2F617D7AA53F09817FAF84983CE9C9E59A
2FC6D7510B34E22A51AB446DE4B3B32E762D6240CDED5DF14F9F0DA069B55F1B
A2B3F1D52392951B81CC79F4ABDD8F9358A411C2801A8095B1BC80DE989B3FD5
A3803548ABD4A303CE8F3909A18051A0C0C2C3285FDEE8F1389C3B0C915B4735
481E2F10EB7F71765318AE3209864263EC9EC6DAC693D17A9787C2114D349FAD
EA80B1E8F8CA6BA967A0386536B0AB8DB6351BF489CF00C3757B78821D52A03F
669ABC8CCC9C79149137A988168E3174096AFFD5B2E65605CB9588748A815896
32AD2CC71B77875CA8D23891AFE953A35B3372C6798B080E05316A569DC14E19
4AC3785C15F962CD1669D0DE28A377DC6DD1529E6E0C5CFD1917BB1BCF403894
AC735295764B76DE3D9B7F9C235137CFB7CC93CAD84B6DE80B35AC8262384752
AF724AA6019838D990D2139CB6629B2239E7F7D60B2E1433CA696136B6AD2D69
2440D292828B169FC3DDA0BE0C05C80DD94CB1C95BEC227566D416A8255758FF
27AD0AF51D03A082B975221F440F8CBDF2B8EEF32D28A0811D810291F968FFD5
606D2C9EC3FC5A31CE40E2EDF7F2A684A1E7B30B6DB685DD1912A346BFCA1517
1AA64B9BF3763B230C75229DCCEFD0207CFAAB179C83E9E559FA4B651FBE6D0B
D114581921663D3BEB40DA2DEE53F301BA889B2ABD919C5BE1C04CA0FB6A3329
46C6E384FA45ECD89CC16354D11FE75618FD0550B057DE0C572DF0DE86478812
EFAC4B30528776EBDA66B0A5AF784B9BE7756320DE1FC788A6CFF0978A7CC28C
26B19FCABA39E28507DAD9027185149527981BD44600D99926FD7C3A3F37E641
6092B0295778915589418F10A45FDA80B1C6CA6292AD7F979465F5E9A8100E3C
391F8195A17CAB70BF6A161FC614D69D0A6BFDFB5FB8046BA34E3CBCA440F97F
A94CC6D26858CF4FD7C810C064F9912B7B2850E53349FAB4FBB152028059A890
9845C2A0BA45C68B3316C879BB1C3E6A9CF7937893E2ACD81D0F948033FCB16E
5F96E7867482FAA03A3DCC63FFB05EA6CE7E11FF41FAFED999E2183B11962A40
F23501866DDBB2E9D6B5103057560B05BE38D1BDCF08B3DE2FFF0CA7ABAB892A
6E645EEC2019A802A795C5537FF688DEDE0DDDA5B4EC2B55EC21B9DAE894DE08
A4346E718F1AAF3DF62CBE183F64319EDA59B171E43DB3EF7E846906ABD146AE
524B553B5A2A39617CA09B5971E03E3CDB8DBB1C8623DE64D19B303363C061B1
C3F77BE9A17B8E38650D525DF306BD03A6514FA1054F97EE2AEB3634C9B4AB6A
7EA3BBFCDE7D3976953B6A7F0C687E2003D74E68E5472E8066B36AD6C9F9229F
CBF7E30690BFDB0EE696FA118DA27A9F321B44C3569468F1BA4E4FD96954773F
34E1E727FEEFC6790D2D0CDDFDAEFAB79879360490EC0EF50BDB469D66A81A5B
C61E91F8C0960846D296672A0D7709456C5F683EFCEED616163CBC3B7D3F630F
89B85AE1044880D04A831C3CAB57BF1FFF10D184F38C786F5189EE1AD87FDCFA
7C1A92C23FADF09AFE275D145020B94D30F49EED4C518F30D02BF42181A6E257
3EF9C6234B7BF4A687F21359CB4F37A479D390E7F470BE569C7F7726C499CC49
43449DBCD6EE569C6800389CBF12C7B22075540D1CB8F0F7955CB6FCAC5C084D
DF9BD2EBFEBD5303B3135C89A3DB8176F9C32818F9933B7B5DE581A88A7A218B
FBCC889BEF5205333FC037BADCCF8CB457C3AC880B24BAC4D42C211E996FA7D9
C0E8653A852C15A45F49A8CDF6C2A56D09A1B5D369638D8295A17CAB70BF6A16
1FC614D69D0A6ACC83D1C7504AC4661393FF5D6940A3FB567C2E91951C4BA1CE
A35FFCA2BF9A151AF2AB309DB34DB4E4416BDCDF6FD1AEE7BD8CA5264BA695A7
B5175A93F3E804795EBB845C10A84D96B20368D4C7311EA243019B2B72922517
7C95C83207A0D83B1D23ED27CF3A90B1D68AAADD93AADD56F729DEC052B007CA
55BE98028857DE4CE7AB090E92DC2C0408FCC2FB312D4C049FBC463679A22F07
BE7C5F83E9A415BDB772ECBFDDA721786D787C90AB2E77C3A4F5966723F07B04
8A3FB3041A533D0CCB166490D6C8B22B497F5083F1B340DA30A807E54537269D
F1B246994B004B7DC70574C59C343C8B0D08D9F25C5010FCA4DBC0A47E3ED636
9B602A6820F9E5A71704F5B99378270DBE943AE783D52D36DA5BE364F559C596
7A2DD3D65F56FC74621CC0583A510C4873472D8E00965DEFC7E2D7BBCC4B1331
F826F2DEEDF42FF7D1A7164598443C3CCD7A1E4702641196A40F460010686CF2
88BFC5053D7834AF91E01B0D5709795EA56FC4C0F3024E4BFAB0758A0C514E4C
B080949687FE7B9EAC17AB85B1CE6980B1A007BE0DAD70B6338FE51016A41F52
3FEF0E925972E9E7D69A1186AA832CA4C75780871AA514A2E87897ABE6F28E8E
7FDCF9DCF725F793E1D5B4975437F75671939F7B447AA09BD8D2AE06A297517E
F7FB7EFCB2DDF4DEB36698AFCAE54E6B1552C08B4842FC6E1B033110A6050CF8
FC5A432C37493A3C7303EF0839A439ABC01ED5E6E49F6F23D439624FEC302AB2
A9B42CAF3BC02841AE611BF4E002ADD3EC484AE662E06B48C1A932F72FFB2F19
57123E7A3A472804062B8EFA70DEE5B1CE469AD8A82D48CA829C4266ACA8CF9A
DEC1B79C8CB867554FC418A2924818A02FE6964DC925E6C50D9EC45749162C64
BE91C9FE1B7146E96053CE27818083FC481EA4EB7E70A45490A6B6D9CDBDFCEB
F3AAAF297BF686F26E3CF2852AD056974565B253A6565F51FD6A201EB1A40B89
EAEFDE9629F2CFEE7B8852C4C86D6FD37AF910E2C8338FDC710C07605A7E3CF1
76D9B9A43614DEEFBD46B07386A035608BB2F423199CFB2722B485B72080A236
0BD53527CF51C10D293C24C8EB4199C5CA3A43E343E8BA94F3C19D852135C14D
6605D8BDB4DF8E1306684232A1A6C6593C5951D105D653FF22B1523224DA1D9B
25C3079B38B2870744F3316DB4434CF467E48E9C49E2D9F883600EA8B2FEDDC4
ECC2F9A1632C60EB44F3B5E1840D6D16B06EC3A091C3C78EF0034ECA82A6F860
5D8054C9BF7CC7D3453824D60AB7EC2667B8973043154385D0A04140B0E8D39C
9FB69442DC88166575049E84F397741D9E7E90665633A83E7F9C5E2F62303904
C59EA129FB2BA282BF891B07CAA62149385F180D5F890209A45418E89ABAA757
3FF5603C69175AE76C589CA8B2F48FD7E2FC6527BE33ACAEDD23EB483D68DE5D
ECF91215A07B5B6A8345CD0BA16991B5E31A70DDACA5666386B72023CFB302C5
B962742805E85A258481C92987AFAF70467828ECBA28606F2004E86B1797B6F8
1CB076D4861E82C2214F35DF0AB0D6CE94A091A27E784620E6CED9E67963016A
1C77555FF8EC6F39C9C57C725F791C1E935E6B18751C24EC1C8BD85BE5346001
B95EDA8C700E0FFE02BBE6787120EA314873A996C79E23B208068E4AFF0B374D
194F984558314A256C554C63BFB95AF8C442D3E33C688AC274B4003FEAB7A9ED
FC1AA09EA7D3C5E553AB897E1D4B3993275D8D59108DD41805F007949849C1EF
98C1B3B39D8710A0770BE0D75CFE65E100B1B5359F2B3F7356ABE20056B3DD42
3BEB866DF653DCD4039DB729F3ADAD09EA3A0C180E9AC15094F01EFAEFA7F3AC
52BD2CD78C4348F7F3BDD4A848B99AA372FAD830DE559B43620BB91A3C181BC0
2784C1A15D63F41E66B2525D70B5D913ABD8EF5E30FD84EF4C6A366EBB2DB65C
FD1910C5F90752F62E8DFC44EF23401DAAA35491B9231F2836C36D04D5FA898E
C0BD095FE32595B2F9E0AF205B06563992449CCF21EEA5B45583A92DC0C51F3D
3F15048B3EE075E0E097FA9145D210DDDCE662403168762A25D5A813D15AC82D
6FEEB1F8D584F4345DFABAC4C2122562592A1E3A9AA448BC45EAFAD7F08E1773
18E400BD8D92C83B617EEB9EF208B1E6D6FB433573423F67EC29881BD4C7DE97
F983D4A91A4DFBB8CA5ABCA3387C78E203E5D7791728BB722A1A0309DC2C1CFA
6831E6F15753E46D31608321F45468D6C4D857C95D6E618E2D89C9F5A0D27066
9E792C0DF5155B4D701157CAAEEBCCA69CB23E3EDE41DD55B050FBC4A6B84956
B249AD29281A24413E9C5253F8C745FB95DF40BF08021FC5A5B048413923DE84
C65E6BDE600928D0549863F041C94C69C52A10CAC92B0797073E7326075B1BA1
CC48CF92D95731E6B46687A19AD7B93DFE996B5B60E03F5E4DE80BC9B28C62CD
0A2F580DA299D19740758FD5FD24F6859F604416232AC8F7A2E3ECB7B592555B
E64E0717E7B076251A9019C9AA9EBC4D654880272A4BBEA34AC676B1520772E4
F83A5F746785C77222AEBB2EF5476A044EFAFAE9A1472E6D0C5F650DCEED3C3D
C4BC00AB5ECF4B10E9E1413C2499C82E7D266B03E9390041B2C6AAFFF778DFA2
BD6A74A18DFF2FB292F30D852DDE60E6818C16225199D16281F6F7F3B4657562
ECFA24715387C3CBB19C5CACBE35026213098D47ADAB35FE98E8F195C0C15F67
6DDBC8BC7CAE64021E84C8542C3963B62C01A3039E9969CC09F99D1BCB65753B
A6E2BBD54506647E28D6640D18EB71F8C433F3A034996064991B87024EF8AF5B
917DCF9CE1CC23A2FB117C401354A1B984FBF893B77CF01347412F127A697EAD
3951063F0B22FDC003228E7EDE8C7CFA4B4DDD44833833102BFC28949CEA563B
7623FB0172A356855B7519621A9BC5B6DDCA56961525A040A522A6AA6846B39B
EAEED1CB25682D2BC5865B762597372D77AB84FB073087C2E4F721B55FBD8E43
A845AD74AE65D6B3F591AB473AAE1215A28E5661627A5532D5543D4F7E9F552C
9B7DB4551B80A15B3EF74B76F7AC3CB68CBEA43EF351A702587874D9515CB3C0
F1B44A1151E2CE05F6D83BE56E8D82A703908350E3A8F4327ED3738806F11468
63A5DEDAA952BA4B48C6E80E8D9119DDCD3628E54364C54F4583A2181115A668
34F5F55D75CFB0AD3BC266C288BF9BF522CA2DED3A8345425402EC899273E7B5
2315CC8377B2EF7F980858066EE045028836A5C9EF60F581A46EBE4A677D78EA
5691E311F74D5D8E1B4A20F1FE4125726CAAF168C08CE31F26CDF6613C06CC57
BEFC79C4A84741EB8852B76C9F0C91B554F7047CF115225B57CF2E6B5D2430C8
EB8996FECC14BB93939B5B9E26AC8899CD0DDC9A93279A52F99332C1E10A5B93
4A0857A8F8FE941EAA80902E3BD33404D241E14CED56560012533640C7D6E85B
057F8C57C693A1B6070949E863ED09359D65D5351D5AA43F18FD6F9CF7A9F8DF
2FA4CCC17B6CD452537BC719FB079D59EBC2A2387D5D7D63192977540C9B244C
944B11AABD44046D11F3EEC91434E090E0308BE649A78C27A3B3F82B6A14161A
2BBBBDCB98E7B2B53B18DF7CFDBD34DED9049C7EC8E6901FDAD30F836F2272D2
A2EE87BBFD24ECD2CE93CE7D08EDCC65DB4E15891A5794F8D4E5B487EDC7DB4E
3B9539F5AC4A8CCE6E44A4AC7A72044502A480248F5F7C4DDA71038ADF3C605E
13D297914BC1BBF8D940871F43249D4A6D08FA184DE53F0F11354EAEB2413D1D
C2AC8F11E53E39854B8696DC04C8997BBFB6AB9E002F7AE6E91146AC59D717AB
CDAD9841B170856637F2CFDE6259FEF86B9163FEB5AEF69BF85062FB1E1F8012
761C3C4AEB59E0F4577FF5816D46A9F411CF9FF433F53312CB10A75314AEA30A
E6B7970427BE89D485A5FE63F1FF384018C2D56A3990EEBC4C7D84BE773119AB
244320C7B204597577BFF510AC2AAFAC4FD5FEB99C380C11B0D3D8C2200FA06C
B1368F56B10F6FCE73C4B7BE0D5FB5D71466FB6E1384B061824E7B833E8AB201
95285622E8664EBFA44D54979C5CDB69B496C896EA124FDD1D4A9AF4E20CD5C6
F848B3680FD2726E5F8C4DA03A85ECEC2B646C5EC012E3D57E08E8EDF429DE13
6CB028B3D59049B95DA04FFEA2884D315F5652BA0950E3B9ED16596CAABB2CB8
CA3E598ACF5AFC9F6CB1D05B7DC8E54E39C0092C59FBEC971C24F344C25D09CE
C6E1BD11ED4AAC51517F3A5822F5E3B876E2B431CA70822AA36CA45AD99C6F56
9B1840457B886316F1ACEADC89E061D6F15764162C8A789B7C698D2BF0BF8B10
A3A41650C7A87BF1B8E93483BA14F433A68726E199AE43740CE4C68607425BD8
1578D8021C9DD9C4208BDE984D81ED742FD3A5A753AD7B5638D7653722E10C54
BADC841298616EB93949028A6B7FB82409C3537A1E38519F5EF4AAD6612EB2D0
F70AC68E7C2F44BCEDE581DD1A51008E03CC345E4A8DA3C2CABF7DE3E8A90951
9DFD4C760AEC9D937F510757C374B0F396792B9F76ACBD965F4A93D6C4C21C1E
6F27E0C094FAA6A1C76238C4D8192B7963829012E58BDF6A14F87CFBDD2A83FE
EFAA0C2F8A116381F274337D31D04CEB52B02DCA88DBF9BF243154FDDA115624
E8ED50CF8D75CC0A654C2DB9F41469FA0DE739AD3BCADC8FD625E4E73AD17C60
343A0D6983DF61299B4D51F876D2BCA16F55A7BF27EA0B646834C57A8F4E3D0B
78CBD11BD3F3D0D13EE0E22D53724722ED4642734B710BAD4BE963856588A23C
6D04241EC830E1FBAEC50F70CDA6050A5E5462CA5AB28EF440B1BFDD84BC215B
5EAB6B05A74F5E0EA477924D5DB46901AB14BE6CB518B59E217CE5F72FF6A8AB
1DF84742F16AEBD2430F31253B978E02090C9C72BE23C90B01825D38901FDEB3
C6B2B4FC5C0B93BE899240AC391A38AD6FA6A386F5B6F7C61A19AF5F46FE2E11
BFFA2ECB567BC872FFC1DC9775C83BB0334995C151954589C0B48D3D01908624
6C1B91B6657C4EC609A9236ED1026EE9673F067CC1DF9BF702F66EAD3C52BE11
536F24E19FABCDAB7DC635EA3C1D5B0DACC1788B9E62CC54509515229D5B4BEB
894DAC343737B9E9E6D483D812E30B96DB62E90026C231610AB97E4A7258C6E4
E3A0827F708E16F2EED84DCBE662AD804CBDF5DB951054DF1E8A68FD33F9DD89
2CF379FD8E3F1F9C639D860F9B40A290377BCBC846355E9AE763B98D4A88FC1E
D5CB25682D2BC5865B762597372D77AAD987862A716C42F071140254B72AC91B
974670C2622573D457E19E42A648A6E95484AD4A9A6DF1101A87DA2FA5258642
8602BA8B30FA9BB22DC1F9CC8C18ABCA492B04D317657DD5B8D2A2CB03332545
FEAC295D10D0048A616251A86BFD4705006E4AF46A80B6F148EEBD0BA1A11E39
3C3A59C0057183D9CB928AEF040293E5CACE1B21F8F364F7AFE0307CD212DC5D
24899DAADE9680499F7C5A26B0EF465F82645EDA600EFA1E7D0E545526FE7A91
37CFBA6BAAB5078DB3DE95B6541DF0DDA89F04A1AA4DFFD3E15BA20D25CBFFB4
F8D1E819ACAC16BD36AF87384F0926E742D3EC21A464E65B1A3374FD4E55D2C4
89F69D3F39C6442A9DC9D571BBF37538F21C5A329BA471CD860DEC002434DEF3
4F3A2293ECE3F54990E0EE66E7E119A2C693BC33E6410694CE7F3A03CA4D8A20
BD9199DE539A6046DDDB512666DCD6594737F94B3665367228B7B90926272365
178CE4FE5FD1F7822A8B47E423ACEC79E8DA15A08BF24B18D615EFFD0E5CE054
0305ACEAABA38769948276D785EC5E73A7DAEF59F579B27931ADDCCDDA23E8B3
D8DA9F8227A5EB400FB950A8C9E9055C696E6BC9DB8E4802CF4360B9D7F917F8
F45A650F43FF3340E344714BC34C88198806820C640EACA609E4C1AA196300E4
A14A784DE5277A027A91E51840F57F07D1E393449D509579650E646A021FCBA4
6D300EED52D7EE14948F3C1F7E3DAD197BAEF2EE57874A7345705B70BD7728E7
9E3ADB4EA8D2897B62AB2782F4D0CE7F4662CBD0FE4F0C41168731A27DD7DA80
FA7AB23F6ACB6DDC5C3F0E5EC0F6AC2DA72A297A111961D1CD6FF60941A61EE9
97A91C5A08CA5E99CFE691D71BD29A6DDE8802B8B4BBD7B3FD0EFCA2E7AE77AE
BD18239DAD5B0EE1D71DC16F79A527CEC0A3F39996598E96C83B3CBDBE51D9A0
9F7E911AE0E168F15E18DC0910564973464AAC5DEC8FF6C557052921654FF33B
E61CA7707EDED071FF4795A6FD5E42D9D3CB5B6609169D3B1D389DBCD4D5E853
9C03BBFC0DFE6CDAFEE3D78F7C5C2060A6B15FCCA56E15D6E646EC35D84F9F00
CD4FB0930F5F8F9C48091E7216598EA53B687ECBB2B1157A745C6FAA1075067B
E23D1B45920926BAD7DE51BFA04C72DD8C627DA409E3A18C35CBDD9DCA76378F
9FFE5E8E5B9278ECEB87E87F9FA03C6C4E4CC7FA33688B8A07A856417C03535C
3E499B6EF8DB22C3F1483B482FB1B444BFD0A63FA834AE97439830B13045567B
7E0DACCF72E3F1876BCC699E5ED6328693DA446E9CB8C12EE16033D479F581DE
DCE2E5A2C5F2C45FBA38BAC41205402A9F4299F3DABA4DB920A1225323B52F9C
586FD4F08000C6F444D59BA7DEA188BBE105A3B3334814C8AF6333D549E7B8B8
1276C1972DC8F8D2F0BF1DBC14D6191D511982A5D8EBED7726AEF847F542DF64
BC8EA74A6FB7BBDF2C41181B9E4E3D48D7550F2B4E0F32924E1C6F28DA55987D
CC90A9E6ADD673D3BE317C761094586B523D068F8577644643AABB489BF46A99
4BA63862399C265011A5EE53295494C70A3F84CB34901D3C1D592A48505BE430
D7BC9C997F145A961CD52BB4FFFE101EDBBCBE8B9D54D73227C4298F0B6A19C4
97B4C6704570ACCF4AEED79BC91278D8E158C2AB99DEE6C6AC093048AE73DA5F
A01E47A500890EB1563A50936FB3EDE47AB7CCA4EDCF8944F705C5C4FA63BEEC
03A321C96B32DB7A8D2483BFD0298F37EEA57F01D7B319FF50AC8A130CC0964A
D14295C3C178662265CB7D4EC4B319959677CB943985B96CA9DF4DE1671BF03C
E58821A380C6FA3F605EEF9EFAB311CBFD630BC9A51E72C05FB96EEFAC44B8B2
193D971A5154952995156DF7F6775849B737B9277F022E48F07B9C73FA6E31D8
0B453AF73B7EBF741BC17C9B26166806F5714F5B2B48DE7033639D38159C8471
CD1DAA3169EE243EC6890E0AAAD7E22765D7FD6A132A088F02C5F80DFD461641
C4F9ADA7B41DF10185FD54A98660543F3470BF865366752AF7E34861A6C04F49
A5E5277869A654309EC197F3ED7CD9936C49BFBB705047E475C32121BCFD0E1B
13DA22475982D6F04E11180CC1AFA2FA3EF0AD378B858DED982D7B1E5BB66882
C130407C638571B9CC454DC18655D0E86938D93A74E2D3C6B4AF33535540689F
97C2EE6E8F76E7AB578B4A87F9E70470253B261DCCAACDAD46C9607B9C2F10B4
9F1B1D08332141EBEA85F769B50315EB7321A03103E675D45103580B04734B35
CE3A724DB416965C10531EC3868A8F5820A155400F8D446CFB8AD19704B6CAB5
21299EFF96F2E1B0E6477059BBB61BC9468F3916138748F82E612674D4F563FE
44A8DD6AE417B2244BA942EF6E95B907FF9945C67DF4025329F67D7C58AB25B3
3CD03F873DD6A1E895B337B6698005DD3217C87DF329CA3AC791B3E711F632DC
A511240C99E8FC9E010260C4AC72B98CF7B87BAC9C346D102E1E6C5812D6AA3A
EA7CBFAA34A112D006B438BE88C899E5B87A9580B22876B1B320A9BA7472925C
F6AA8F487600CB5DCFAFA58A421B17DA6E3EC8A3402E9602317FE9685EC0A0D8
71A620BA85A30BD85817536656FD2FBB2285040A2D17A6E9FCD200A403CE3C07
A6B211D0695CB87D33A75FD9A02665133D99ECE3401886F9B7FA9B5BD670E10B
9ECCF218A96C1A6F7F53DBAAFC70954DC8D2FD6B15B6ADC4529EF67221876315
764192B4576BD854473142B5E5579BED32840C05A6BA3316CAD5D793CDADF56B
75CB0071FC7CC341BDCF00ACA500491428174140BC3C57F343E143BF2476BCA2
6796BB66DDAE14BE6CB518B59E217CE5F72FF6A8A8F289898C796A1032AD7C90
F0613EDEB93A5EE294EC1013EC7DB9B756218A8FBCAF549C33EE19F39EDCD908
D55EB4042D30D14C2E297ED5B7CE1F251CCE67E213E7DDC525CC476066128D5C
E30D05991852D4DA802B3F825FE01CEBB8AFAE97BA61587C8EA6D673B3D32D01
F48C4ADDAD53E859EBDFE7627FD2BE7061280CCF4F8A74B712615F447639445B
6988ADD81180F5CF28ACFEE7F58062EC1DA1C4DF97A1B435BC1AE23B20461865
95B749837278893FAFA4E6ACBF73F696DAC1C8FC3E26F5F8E241A37F77D5075D
EB96B321824D87D8B4CDE4650B11631704A7CBE0ECBE0E8E0F4DEBA482090FAF
C229BDADC19E0E782986C2914C57EE9AF55A2EB8F6042BD9ADC9353BFA3BBF55
3C2DE2CEDB74752D4B750D3807662AE5F13EC903E8829B9DCAD88307A980645F
BD42F195F758566EEDF764FDEF7746DFB35F0C15BE7C487E00C2A5F8AE65C30A
5CE2D1F66C28E1A2617D3829CE4FD48771904ADA553610240BA2EFC8CB2A9A15
EA0D9853F770366AD98D5AE969C656B2BBC0806CCE9A67D4504FC1BD0058AE1D
02B0B455373151885BC7418CEE65E53E5671740DEF45A15736561BBE62923340
FDF8238CF01555A01B277FC53686C6295A2CF203C50A96EBBE3339D7CF54F8EC
99F77330281523A25D2661BF5A2C79B9B60BA426D502AF7AB508F5A3FA7DC977
146B9D9578144941369F39084CB266753A0AFA96771380D9432CE973A97EF11C
588936C3795187F05F00CD4163AD65481CE38557F209C8798343D1652E28FF38
B111D8A8FE8317FCF9B58A4BD5AE89182C03A1C9315A19F3783AFAD713AD906B
31EBEEA862D9DF37ADF0F4CC09B581D263E0454C53BEEBDD16F4FAA19ABCD1A4
4D0B881A7F8CE68790E02BF90760CA556A2ADCC9AB61F3B973F45E72936FA3E2
5A5C40C7697389C79593177F77E13F10CF1358C9520D105217BD25477066F12B
2D09B0B8FFDEA90804AEC20DE7724037345A8EE0B0EF986FF1816A2AB41856D8
0DEBA481CD267B46A847B5E077D703D445206A04C03C8852F57C84D8EA2256CF
0D2F9AE8232FC21550FE6E9C1B3C370E48F3C7502C54E0F2E5C5A13DEA2D839B
35D997865E8506F81EBCE8D1F420CBBAA33C6B69C7BC73C57A428D972D2BE61F
9C67869C3FCCD58F6E08B280A5DE35B6D2A517E03613178523A83CE875FF3489
FADDFFBC47882E996AB2D9428CCC53F77E4C73D4F6665C676B255FC54F60B368
8DABE52AA7C03A7F886BD774E7BC3D775CE87CDB14A33E4F65F77783282D58BF
100A9A5818D5A1793EB144BAC3CC08586790CDE3CEC3BCCA32CB4A81C902C75F
A9D37FB26EB5EE5DD2EFAFC07ACF66EBAAB3206897F12A19716D2678A1518E5C
E0BC6BE69BF565E12DA071501004D5B4BF8742AAE46166336348B09A6B156DA9
19894803C2BA33A438CA1A996D29B4A70B7C7ADE155696C3D4E8F5546BB41A5A
210982E97B0224A05ECE391A2BA92AD544D201DE9DAC3F458A51932D7AA774B2
812D6094316E6CEB7D96CB43B0822F722DF8F19F182B9BBBD7AB4C8E56B08EFB
A820D03FFBB9B113434BEC3351C00DFD29F397413DF96E114A0C509A8C0E723B
7D58AA416C667FCBA3CEE03E60A6668BA9EE1C5004426EFCAEBEE2155A369298
F71F31B506F4B5E57FE1131C23F4DBD3FCEF77D4529210A89F4D2E027E8A6B1E
FC1874B51663414484DCCDBC22B33A04EF8F4967562E3F2F40F2ABEB46BFE115
2B75D38846A1D607CE8C297E4E0E1780254F43C08B7EC7B79464F66CE61D12F6
74461EE27BD032740886423055761A67AA5AC878F260DF0DFBD65171980C9059
C668901C844158BA2018A393416A86F976D2FD93513D07930F5457D0C01F0469
2076ED97E5E5B0354D85CC21CE57B66BFE8F5AF4BC7D47AA549D061FBF70D06E
9D36A82FD48515FB4CDAE4E7320FD0816287644374DDF9D4DE6659461CCD6E9B
B42759C289C8FCB27F2AE621EB7B3A41FEA633AE6C255C3B0713700286BB68AA
BE1491F5BF10AADB61424C531E3E57206DEA6C7ADF134CA24FD213AC62A56FC5
AB99A90A9500ECE26C5AFE8B3D61C697C9D191C38137E2ED884CAFD6BD85B017
0EFEF25CD19CD4E37363330571871F04E5268DC2F1B733F70000CDA74E1BFD0A
0BB88C60420E3118FC8746E18A701590228B84C0C7F3CF111A7DC0B91D4BB0CA
10E2BC238F596D899ABF906ED76DBCB40EEB8102138611FA2A5E2FCD56FC8A6C
B88A9C127F3686AFA1863BF5F6390B4641F27391D1698B13F0EE51ABE6972BC1
A5B1352D08424F4422ECC5F69C4B6E1D0B583CE26BD277010A9E87C5ECC37A15
81CC10BA07650CDC0457A1F423303A5199200DCFCEA6121FDC45DEE09FB4A089
AF241A0C911F1EEBDB23C2A14F575FDED8A21BD43EC2C275E888705C80323269
0D458768EF740B9C892CDF77DD9D5E944A4B5023060F377820DA5F4A9AA95DB4
E7FE64D8CB2208172728FB0B436E3C99591FAD26B901D283A3B8E481D6DAAAB4
4A88180F813753B419289DE843C32DDB9C6F276C5A3ED6A7969DFE34921F43BC
8355134BDF0F155C4E8426E4A1D3745FDAD8CE532597BF1C71234D2B6AE5D6AA
EEDC05FA5ACF8980A23E89A62142CFD0DA1829C538FD91A29C5DB7BCD2B9D794
CDEF1F9D995F1337EC6C84B1AFD133D3C4D429D68EFB1DD50FFDF5483993F6C6
B0F3E4A5903362722AACA64E30DB40C4929D7014098082036AAD54821B1F5151
3558A2844855CF6035DB56BCBF639EBF5781375F74F86A84E3B6356CE3FF8E60
C82F48A11C10C9CAA10F97672651AB181BC5C0316C45B3E65764E6AB552BE11D
CFB672D8450F834C207BC9D5C19D162DEF616B1BF16448A2E37BAB230EAE6C72
200177A3862D93DB9BE58DD24FAAAB1599EFFD658CD428542E66F4D60ECD0255
7603F69FAF43A947172AD55F57D785A4209479650C1444E480E8CD320B25BC0F
8F670F9C7B0ED504E74A5FA95B1DDBDEA024B90225298068B44F16D7BE33FBE5
BC937119B859A1A77426B4CC5DFC5A672F5C8FD7F01C5A329BA471CD860DEC00
2434DEF1E934B522EC61099BD30C5656748D8DE398DA8B05F087180FCEF26B8C
3F9BC4CEF9E1787CB1F2D9E561675FDEBA8CB89756E1BACDC0FD63A9D5FFE08D
24D1BF1576BC1C20D9C619EC7408700F2E25DB51F220ECCC22EA8100ACFED587
72BDD4978BC0A27D0FD085BBA29CF3A4B43C3F2BF12A015EAB86172D0DE35E75
58603835C9897C287DAAF60BF6B706FA8224540313DE75E1537EF69FE9897850
1F8206DE7CFB28FEB8E7897EDDAB3A59C4BCDFD6C81095D2D0F8635703C7ED11
43DEEBB357ABCCC9EAD49833AD1FC0B6C5E7D7DD1DC5B6E4A0B8E70B28F80FBB
480CF90B3D2BA9BCFC6E40DC39A24FD0F31C58AA9B48F5D366082E77405CB38C
7A634BCAFD30930908D61E8215D0576024A49016713C60D104247CBDC724B568
EAF96E73411CC459C7D77E8CC2C54BFB8F5BC45BA81DE17A40BAD1BC57B7E5C3
D80FD1CDEE64FD1254E5863F3047D0B4B449979D77A4C7CAA09E5ACC965ABE96
1C05F527AB6AA16C67CC32145048214F727E265DF78908BDA22437552AEE59DC
6B715F8BB4D84BAC4D6490A3BDC551016F9AC6F5F8B0275FD32BD38F36B33C88
4735A73386AF7F196EEB9D5A81C6DF26C9DFE4E452611228A8E64D8F9408EDF5
4D55442C55FED27EB5DC8F7DC87CDD4EB071F1A9E92B08E938B7F8DA87335281
68EF42C2DE9C02A7CEC86BFB905A29621EC81FE74A9725CF1209168E68C0A6B5
EFE19814EF77E6448E040D68CD6D383B9D93FE41C1CD968F8873D65B5BE4A329
939DB53C86B8E558330DA51C6F72AD03F99E12BDC972D8687F4AC71EB8C23809
F39215694893BF7104EA58F548CBC7EDD44E0F33A2EDCB2BA58356071C2EB290
03554CB8008AB9138099CE78A1F937D82F59CAD640181B76D76BC3FBFB9EF2E7
3CD8A742E6FFA12DAA87B1048092FC5DA01140478958D7CAEED31A08DAD2E11A
6F9256E19F2580801A463969FF739E68B130781E1660F125AFFDE220CC0A3CEE
E2A9FD82ED4624932E27A0174B368B24B94D30F49EED4C518F30D02BF4218B9F
03EC3194131B54F4FA7FD45DD080DB58FFDC037DED0B93FA18F0D1AC01C613D9
9E02F8C5F91247BA7407CC920ACE6D50AFE391082EBB8C61C308D947BA5D1C9B
09EB68AC98476CA989A18969417749E053944FCAB0450A1CEEA62CEF40650786
3C1EC7346A0AFFCA911F25F42C60B292811A5BDDE43AD25E0471B9A02F00D169
7E844D9A5F91C6DA00C8B8602ED0BA6DE1294A53A585C8F6D3EA61A7F4B692CB
DB8C264657478652D4176689DC86561EEC79D3CFD3B7FD4F9494129C5B595C35
9AA32CE755D9DF7B56F5014DD955A04F01AB0414163E6740D421676B57D85B44
408DFC7D5CF2322FAB047819DE6DDD7AF688617314A6039036132D39A44C010E
19C5733E89AC3DF461AE57D209909698F7D17E524C96C5CBF2A8053108EEA89F
E339306D67D26AFF97FF7A0DB12A7687A61B98AB95AAF7B997CF5BB6FD87E637
29843B593C52C4F27C1ABA91511835465DB7C5FA3FBFF172C4281B98F0FA3134
58E50D0EE6D75A3DF43B350C4B8A2B647427475D1BE8B9A26976AAA0A75D95BF
4AD2E4DF3C24708FF6E44D728A2D780C24E489571C79B85F277C3BB84964E373
FA07B7970D1766793DCD964682687D561D1A2C02385E5E728EFADEC1F2E14170
B75CAFF1FD4C23F90B6CFA283BB3B2B169751ADD8EA94A2BDF2E5CD69CFBCE2E
543520C013A368FCDB345046C3643689CCE33C388F5C051F926FCC512A0D3782
26C5CE066E09CEBB4DED573B688725B7EF5A64974CCB30B949907BB3E7B2CC5F
7B69EB8C39D367DFFB753C5356214C558637CF00DE4085B6C927C18DFC145797
7B23A66631FFAFE78A6B352FFE3558E431C5755D3408FC8DD4102B5D09C6AE3E
80A85588249583A9363A8F986B635CB63D98FF41A3953C5EEA16DB4958E1EFDE
BB3E382BCB48FA5E8FDDAA1BFB8CA91D07EA60C6A28400E2FE8788DF52C64E5C
C330C1AD484DB8F2B36FBAB70C9DED4C9ECC72DE0A84250326738BF69CDA7D7F
BF73371514C2799C5B816C985F0A52B32BD3D4DC6FD36679106A7676598F207B
66BEA904D529E005007E3FDD5D20D3CFFC32061617226DF3BBF81A109815DCBB
72F6F95E4F0DB6255D18B359D38C7321A48F66570FF7D428ED1ED365E74BB773
876D57CED1DFAAE72FD4653F41FCCB285516349EC7A6B72D81C1624D48749B72
00C06D1021CD015D979E0E011CA35D5294821FA81A9B82FE1D0286F38F5E3971
566CA1591B0D5E16A1AB1A2A134EC9DBEC406A30BC3A00334F4DB2CEB4E5C7FC
BF815D3F95090BEE0FF9F9F09F607A207B8E2CF3FA08AE36E284C2E67C2908F7
68B6866A9645C68C5454FE14070FAF36A4CB63B6620D679A05F1E85A73A98F1E
0C9BF26E913A517182E7046C4CE762415EF2334BC06848F7F18656CAE02B5437
A469DB44E2540408A71E105898F9F20B901936014F57BD27079480BE5E43A525
E6038A71F00234920B956EABB5C22052FE17FD87D3F3F3EF5D2616577A0DE846
811C3C1B4144A157E5CCF00A362341811553000BC9DBB8D363EAF332C19BBC7D
6D6E6E26088A2281D7529CF8704FFCA4852D6F8A8DEB3E817305D008ED709502
0C94C9FE5A804F7EB664F3557489236880A4C1E7AF21ECB1F931B95F0AEC70B3
9B888BDA854759501F581FFB23D7AFE03DA1901BDE0DA2A529AB3BB927B9ECDA
178687006F47A38CC91E4F9D187D5EE2D03A7785D885FE12DCBAF16254AC2E57
4D979894557920753861C5204ED80CDFF48794794AAD16096C175045156B453C
B90B208F4F0C823FE1DBA203B556063CABCEC6EF30F5492511BEC55EE5800B2B
623E0488BECDD26DBB0B35DDEF668BA1B38D365C9785A54D2224EE05B153B8EB
54474D1F91B2367B425686367C68FBBE09C26B0FDB236C5E88F7AF12B05A0006
1CD84A3A3ADF88149D2F66F5579ADBAB813E619E9826D9E2EA712E9E878FB83D
1A7327085F8BCAD09068502C98C0799EA24EF6B238CDD35FF405301400D471BB
00CD34849AF63844C5413D53665C46A1425D4B51CC7682C48A283DDF59963114
0569566579FB0BF1F7B314ADA53644A8187484FD9800DC081374BDFD3EE818C3
16B7D3FA7B56FD43092416DCD0607120A2E0DD954ABFE90D994A6CA81640BE7C
3CC839B6E14230F8FBCBC84B810A2656D261F7600746F71F38EF7F4A0B787924
720290F7E375E2D3B8AAB9CC0FEA03DD5DD3E1BAF1A82429A2F79299CF97D281
DBB4C9CDA8CF01803D8541DA3A0D271D6DCDE96FFCC3E6BB39F621AF01596344
93CED62566FECB6F530354AEBABFD8D878717B7BF1A60F4BE92B4AF020059A43
6A90C724FD544489F57A51DE0F5DDFE1AAC383E9BBDE2CBFC03164F724A5D21C
5EFA4766DD2684B2737A6A325BF051784EB36BE1F9EE48CB671B6DBE5853A54E
1F2190FB7DA72508AB37C12D9A431DE6749FF3CD971DFD510637DAB73CDFA0B9
777BECA400040E49F56EF0E4EBA269D46791B443AD96A0AAA6F4A5951947BAE4
2B7FE909AEE0616094BDF9384546CD1455E98A7696168BF2862B5AFBBBBA9BE6
E31C57D9DED0B958475D04C35205D1D0BE29B470F140514D7DE5F9B71A1B0677
B49D099AF79F4809CB581815195FCC45612BDDAD707963C88D594B99BA6ACDF2
3E81DCDEF0D1C8DB91E197AE38DA07D364B668DF5F6E1B445F9C0A123D18557A
EE732C4D3004CC32F829B64C360D5680821F51B5A5F29227CE558F7F062708CB
D9BDE7C0B95AC12560C3B0D3EA733EB517D0AF0492939C1AF5BE6C9334A46C86
4A4C4BE8987962E3780830752458B10DC043C40A138F2D234A96C10FB17EA265
49517E0646736AA998F195D3203B449591F1B5267DF127148B083F689451BE6D
0131B866B5576260A2AA5ADDEB0E853436435C79BA92C077E9D9E1C83616CD3A
9C108698F3884E16C9A10EAFD22AA2C65B000D1BBE23CFA1747B6A15DE8F2132
C49C352027D93395AE3B96EA6D2F396538ABC80783A7BEF609DC694EFCB9529F
07A74D15F0259D7E11B99F70CF45746426543291AE4D20A92F06C6868283AFEA
AB359861CD4C07AA01FC4D79B52B408EC83E84864CAF98B45C6EA676E3B32BF1
85720C265DF0045885A91DD6902315A99A6A85ECF5FCE8F7277436BC5777E258
87E9BFA9868F60476F684CA9068A365DD2B04A547889773ED9A0316BD6A9702E
5BE4E4567D7009EC2D510894E39EC9D5C2056F473B8B30A8E7D0C5B2B2968325
2C2D470BE2CC86C0A791E27D68BD676B1FB73047F2CADBE8C46B8EED083BED57
BFD8E46639488FDB2D502B32C21B8C83A35C00F1073FEBD4D3800E69B133C1B0
393624EF49D8CDE06DFD0BC11B90C8010C7B39CF8672FC59BF4E8A7291363F1F
2013A3C82366A40C5371D6C0078095C2EB2CAB65884F3B9866031EE3B9D1D211
2F66E7CAC5380EC67D7C3AF71D03A2F255A33F46560972CCA137ECC98C6683DA
5A3A3C6F9533E2007432A6D797182C31A73C459E44397D91B75D7569ECED5213
47E065C45D9A595D0D9CBC916924BEAA05155336F4274D33E5B615CB84755194
5062B94195E79EA70AB138B4CC1C808604D0548883BC9A83427780247E8A0768
758642C40C3840E126C275620F222D6EB778060F3D30415B6BFFDB4A073BDCF2
EA07D80E16374E3BA486208A279875C885CA303EB4FFFC8FA28A45D4F12406A1
1BDEBD75F2F1319DE6584C4A651C75DB73B98D132703A2FE3F4092EC1F34E110
15506394FC1B13507874AFEA8534AA6784E649A8A08C578549FF799439E97CF7
F973288F012D11D50FF06B197335F1494197951E4F5222DD5CFA2D4E3BD84F52
4493B37E26A8E16DCA39AA6DDE2DFE794C5EFF2C7981B722FCC6117262B7CC80
6C3D4550BDFBCA9EE6AA91733BF48664E71A01B0A8C31E68D20ED239474EE13A
E6577F761D430AE3A03528370D5A1802C402B8EEDEC971A1C610911617561890
36954F7CE4CE89A883887194534A5A46AD1155620C28DE55C4F3FD1421296E49
561CBC7B1E26AE98E61A1393C237FE069504D47D4E03A2E391BD5199B8163247
986823AD649CF87DF0D4C08C461346FF5026D7A9A7D9B6856C52A6811F9C96DA
8D547D8240DD39B827898398D03CF2BC22C2C7D09E1D0D4D02CE44D9351C5645
D04DB49D76906E068C3FBF46118077955B8B126695FF0208448C931C677BD2A2
EE87BBFD24ECD2CE93CE7D08E04A951178CC62530769A9D2ACD58AA7A9F7073E
ED89F2E6C08EFA6DBBB2819F3B1BEF8245BCDEA069B137E72C38C460BB788A04
6DC3A85DC22AAD8339028CD8F7D7A4E3720879761B0C619AB2A66679B71CCA5E
A454C8CAC032E373925D12D1C65A9CBA58CCA0A7AF1BACC4B1A7C9347658F8E4
6362D3A7F957B081BE1D837AD5E333EFA90A3DD11D07B28CADC24B14EE538859
2BD478B2CDAFBA58848E0DCB2272D32FF4B0A6B2D3D7E3496F17F49CD5EFB435
331F1D522494F1284EB9648E9D483630D24F446E1ABF47D5B195BEE528F1FEB2
9551BD89557FB4E93AB4A049A96A27BDCB21D8A1820F4E426160B2433AA15652
474F572910CA7CF66198F1F89BB2EDD543214B6D978C379E33FFEBB1B033B021
8200C0F06D193B05F821A015135CDCB398E15B37612E2AB4711D16340FF2349B
A9B74BFAF8F7BCE3FACC38DD8EF9243AA725A3C602A3A3F6F0ADE983DA5729C5
771B43CC51EF9B11D949B80275E43898FCE8E8EB1E821AE28B5C9FA48583DFAD
A9448F18ABE54EF0E75720728B13A5580E10DE65574A93754E3AB9F3F8A2A75E
17611E029C1B5EAB7B3E4B4CE3BB682ECB8809B51F6EE897A83CCCAB47C7EBAA
B72AD7DFE63F002E5CEDD40FAAF340609A1003DD1F1397F151EB8F2B985F1A56
9969CDF85BD701402C1450A455A4BF834FDA88521D4937B828D2E24B3E28E823
EE0FD7830CF6CFC02EF5580AF2F277B9241F2B941FCD55BC73DC6ECD4B3CBE21
C54C87637B73EDB3E6C0AE87E06232F71C037F947F9CC09B718A603BBE637F40
8744BD7CC5D1DF71C76C80F01E20124F804FC1368BC2778AB577C5B9F4072362
3E38AE5AAAA939501E74E5D54E58ADF4EF7BB25D172313ACB05A3E95CFE230D2
263509A426C0212301588726973BDA75735F681E2E0A8D93948AA1168A9121E4
FD09D99EE12D5CD806BE955CECB254257BB4BF8EECC5B6FCC49AB049F324F887
732D21C4BF9C536D5923D5F18FE2F530BDBD2CFC21D684AF84A8C85151B693DE
C73B9965281C13A69E651128AF0721861E0EACD0553DEBF68C0901C0933C6F29
5A07011FA7E06D460B3C819388782A2CC631CD855DBA274E183601FC8944C585
5E11A3CF1CBD71E3374BD716F714415EFA2C253D69447040BF0EDC82F0E602F6
40B773C7627C32712EA2EF066CA11AF63E720FE1F28D656752668523A9BD9391
A41A2E05424B735BDFEB75BBE90A918C7AAF1DFB71FF3F56B50160CA43E3C498
CD84B25907DD03E509284A4D43B0C3B03F72CEA83B03E27769ED2EB5696A397A
2B9F11D379912B8F4BC49D67DD7EA54C5BD9689553BDCF0211D3D97400FE03E3
7C6624E57FBB03DE5CFB6BB9A5A38F838B9931BEC0C3695D5EE1C9B59A512E97
1F8174EF10629CF23E97CBB7AC2A629B8CA46BA7281D8EA05D609E9F6542413D
E6FB8889601F21C9D354EDF3D93D0DA39E774B9835D4F8691B029ED37E264B7D
12CFDAF8E39BF35DED0B12D4145F5C6816616A63A43ABDBFFAF55A142CDD254C
8392EA65172DF3768EAA14E530CD5126B33BF5AF4D6E786F2C32C04C8D597F6C
89318C9557587AD6F2ABCD64C38473DF19B57A5608992A57F715B20585AC9736
F5843E846F49F2F83F3B191E02080D045160343EFDCD4130A409334D0B34AA05
5A290E9F234767CD62AF33323B02A7F142AF91EB9944A0454CB691DDBF843D65
4B89EC632D16B225A64FACEB04194D72A79D34AB9B4CD7598D47E8EEC5523654
42CFEA7E3D3875226C972E5A91189A53498FA3DA42D7FC2AB533172566931F05
FF461339D47F8525D0C1958650C5D143A28BAFDACF01CDF9B9975AA14BAFAC7C
CE887E303595F54FD6F36E40A175617B9ED351776A911DBB57D9D3424A001846
A9CB9D04D794FCC21481D93E7E4BF05DCC8BDE93FAF8487F909BEE2C33218463
7C6FD4FCDA5271423B6611D3879FD381D5677019C8D3F42D90520A343E2E8B10
751759BA48EDAA9417F990437978DE17270715E6DAC8C7C7F3D2B99E220FCEEF
A978756B7B00A3527AB24E590186D45E5A7F2A758F9BC5C946EFF7D623255113
874D76D2B42EF765509C5BA8971C6182B02820E40EB93E46EC19CA46D6A6DA0C
A023B6A3F62B37E3020300719140740EDCCE2237C0AC1710754083B85E2514D5
0D391A8A9387295C303F1BD91512F7C4CEC0813D3F7F37FB626732C21AC9283B
65C148361530BFB10136EA8BC6A6C9E054B4984E7B7A8FAEC8F496CB703CCFDC
0B7D9F13FEBBE645E902D650CAEDF46D5EFB687013B820E070C91B876A4ECE78
763FAE3548BCF8A2D3553FDA280740AEB14984EDC79C24532C1CBC137C1360DD
9CDEB3FDD76FCDF497186B0020B49CAD1A5E9DD53851C233C5801B01628BF65F
7AC2C6BE8BAAED737BED15459D627A9E65A1323BA915C10F70E511FB1C98234F
24963217A389CCAC65621693FB130405B134B804F296BA6D1482E9C73C19CF1A
97673AEE0F118733EACD30A472C56B93E3D9E0467E137DF774FDA48580F7F0B2
C83B6607B29B5C8EF175D00DF564E3B93CE7A0CEC390140BAC87F86C8D20578B
53C31C3E2C6120ACEE71A95596C2EF523885B8EBDC35B1A6444138AFFF98C387
DE4733894EF46C0B63AEE18EDA3E3D9FD637C98BA46A6161F9ADC6E5C30B10BA
DFF899F759E0AF12CBC1C7796436512613BFE454963C96A6DC21BA304ABFBD6F
0B142C794757C64CE7ED4696AA3E108D9FDB02526B12B3559D2E1B03230C9996
15F3385CD109BC4911B6AA97485D153FF97E5F754B5A17F277E52D0399EB6F26
22FD2F44F7281A9B6627A20768AB0C9D91087BB3C6E242EC5A6A7DFE0105C040
A7713BEB9BAAA38108E34F99D6F12024FA0F5BB3C1D4963D45A7BAE85DCF3E39
90F0A6322BB9F0F689A837887299B72757CBDC7F661FF60B57B7693FDCF8F40F
D3CE30378ACE7D3CD045170F95D6191F3282F701E488C9AD12FD762C94821FAF
BB39DE44B4858480FB202CC050B1A18A7F79A9DD91E975B078302C855CE770E4
67F0CB8B33D8D65FD5B4B2B11F77A3DC66E4C806F4206253C2DF5B4C00C8BD10
5A913C910B28AD3DAE54AE8C63E31E619A0F3FBEB7FBE5516096E31DD043E9BB
D9C90C16785E0F24B3E70E8959857A5EB43DFE4EFCD3AC4730760CCBEB865478
51EC22D60182E8481AF6828631D639413858E8AAD2AB5E4FF6202FBD0052CEFB
055A6E255B9247FAF9C375BBEFE38CBF3DF0552F7F63440B9B85CB76503D0C78
CE7119296670EEA02CD228B83DE7FA112D321954DC91F8178303A63F8737D3CE
532597BF1C71234D2B6AE5D6AAE8235B00FBE97A440D58126268CC7065084547
3EEBDF9C6A371FD36C80FCBE83B62DCCC0A9D8A12C39CA2FB5D4A3602B7E2BCA
16C510BC26EBA88042FC738A2DAA04D63516D012A2C6417F2FC4494DC0DF2934
2C28FA232E4AE96F527E09BC014C95736F44FAB37523E4941D0AF5DF531A4556
AE3635BB5F0B081FBCF0407AB213FF58FD013D9EAD2D88B01654F4C983FD078F
DB64D735AD5950DC2806BF073E5071C02E149296CF0A9E18BC8F2564580C77D1
10B3ADB231CA81407069C89F69E5BF7D75231D8BE4879FBBA0F4B3C42681D5D5
1A18B8B8E0313888680ED36FD339FBF90D3174374DD0F5524AAAA459E6A016F2
BBC1B4EAAAC60817D68780E2A8611A73F944A3E679CFF3002874511CD8F396EB
54748050669F4DE4F500795C3711F21D2E0A8D93948AA1168A9121E4FD09D99E
E07FC7597D63CA4867567B7C6EDBFE9AA18172E10E31EBBF8381DD595447B9E0
D14D166433402D64C6958033AE0406D28CB7B7F400EB79C4F85141E7B426D3A2
8DB4895F1F95D5F37C1A27CEF503CA4D3AA63B737B0D57E5EE9981949129D3BC
960D1EC08135BBF2B974D09314B192AAED6F622C32E6AF5A3F69F5F53EC1A12A
985CB3943B9D00568942AB2D85E12248C0B02408B88EFFE7526246EDD6DBC323
F68473370D04016187EC0A2FA93CF65FE0F14DAB95D5AC18CC6A008C105135DC
111D389D94D4EBB846D63DDDB367F34D81081C111B9BC5FE95C0F5F7CA831A87
E00B4D60B2CE8882889E8DE254452C4AF42A44BEA21E708B5E11CEECDF592501
1ABDDCB651746C9E402D0FC042A562DAD20C02D215294D22681A0F9F7F3BD270
3695F80F4AA976C8806796E308BB2A1599075417A310E4106EBC50BC0A427058
108DB19AC6E7C1DAC4374D8B089A59B12FCDDA6DCCDFF86A9E1AEF2C1227C8F6
775DCEA57FFDEECAC7FBA315CDED73E6084027EC970817BC40527F4445F4A2E9
FE5CF2F2B1E344FEAF613BE4E99F5139508E4396B02D86E99B79E13B57B847F7
9D7B12C327308E0DED1AD1DED572771D53F52CFCD6E2114202B2CC0E61131FD1
6E47341E2F37F5A71031F94286356A0E97DA2C4C6993F6F8584C5BA169154A02
15E5335915D1F7CB7F49E194F29351CEFE78899CE46B900DC80B68CC9947219B
62445DA840880CF5031CE2989868D0704585B969251F67BEBCD43245237E91EB
52EF994980B921C47EF74592B6F8AAD76DEAB16503D08FB97D8010B505F83646
F41C15AFB7E9057FD562AAB9E5ECE5A08EDD152AF6CDA2F1671CA4665B28B641
A6EE6B143D39614240CA03F9B165840BBEF2BCF74FB1E2453B8249225FBA2293
F8868A81AB02413A2584FA1F5A305334C12365BAE5E374EE8BB8B4228A055EE4
6A4617A43ED2D2DFCBBDCF48A6692261648D8AE9B0A53398967291D8F4C502D3
02F6CFC02EF5580AF2F277B9241F2B941E199A515B7487E0244766EA80C49B5A
FA3CF392E55EF8C06F500A0FD9ECF90E60731B8A64E12BFFBEA7029F8D317F7B
40CAB36919BF4D8557BFD571194D1220F623191992BADF582F289E162F3045F1
B37F8689B42857AD100F67824C10FCA6AC127441BD7F65D06BE9AC82950C0293
05113331F586009E3CE1ED3A79FA55E260783F8481090B52B946F79180E3C9F9
D2991154B2F2278DC479DC3AFD69B176E7FB83D6C050564536EE0D9E11985E73
93AFD882435E464E6BA2649C34AEFBD15BD299DFB1A555226E89DA4F8DA0621A
8348D70CA13D96BD5FFE360CA2AC2975BAF2A510C75C455193E844EADD05B0A6
4742140716E3D1A202580A265D5D15B5FA013C1CE63875D761518F444645E76A
4D0AEB88749B78957505BAE86B985D6BEF4DF07692E3C3AE247164C738014D8A
FD7FD9C08CBFC87FDB21B10048D8D6AFB7F965EB9F7672139FE3B42024EB475A
8E668485BD00DBFDD0B56D4AB9AF8C7DDA0ECD8B8115CAE03AA9D6AD07234207
CFA9182FA38053780083695FA64E8A44E85FE91C5E0625163FDF224F54058342
70A6D0E698C0EB0D939E55E20F3BB58583F22D4A0AE63BB39E0BB6BDB6C1C499
8B9D3E1ACC69E996737C23FC740605CCC91AEC932FD1F481DF4F6B1140AE8B8E
5DDE1176848626235D2CEF17B3B44F4DE5338B95073D3E32EE7CAEF18A34641D
FDD109C0DA1E332C923DB49CBEF298CE23501322606773B9BA4D3EEF9014DC59
6000C278EAA0F87CD55676460307D567B78FC23A6DF3D0E77D9071466ADD35E0
2FC67D30E55B2FE202F05680292E5A05F03A0BA37E85AC594FB7D21F6BE904EC
D3122028AB59E5EA772826DCCC56A87B0624F57ACF3E5023B5E0C970E31077A5
43DE555534E3141E882E21D4251364A3D5D27E83C2F379B88C0D918013ED3CE6
31E200296EE741F16B11B6A40D9DA12ADCE4F6CAD515667BC689CB2FC5B1C6CE
3E72D2BE1D9D2BD275F52D2032CCA557A1DD131F038104DA17EF456E2E0FAC9D
32FDC247E4CF5E443430DD29A58D195FFA8C5B2E695EA27389628F04FCE5ED87
4D51401961AFCB41D5B657F4A9A37FF60CEBF7927D5871DBE1F91E1D792D0B8E
7477EC215FD698B44137021FB89748327960892DA8E03F79D06018F5A1CDB2DD
3A05D5EFE70C8B1FD63B002DB3754AD99EF12FD3CD91EB213A92541054C23949
2BAFEAB357F6E08968A6032F336C94C6B245EB62CE0D7ECDE6F146722A5A006C
3338F4C6BA4E5006349233EDE98FA51EEF5326873E6EAC4394D299968B4F6089
E7F8BDC7A646A25EAA3D03EAE12FFA6B5432BE5777AFDE94E368D34746ACD37D
7AD7E5A98A1B998037520766621572D747754C1E2F38C7B1D4F806FA67ACDD5C
DEEA4C23B832A805B55A27E737DF4B31E5188BF82663CA731F3585C9B36A75CF
88CE4247CF42873A113116359FA58D44489D7F0FF5251B457235662700BCB697
0DC51AB83A70998E089DBDE2133F3540E1232B745020D0ECE8862E2DEA4D91B4
0737B4A7E6344A0F26EF3B78C52A3F73E313FA242D1D829E2B4EA30B487F414C
09344DC0202727D9E1AA2D9A13ECA0D59BB9712825456388C53332359B877385
1C25CB177FA2DD90858CA3A619BAF5F4A8C87BC4E66F7F9B8A21A3D319F5A2C3
54896F3A4975111084019DE1FAD264E2B59878BC49EDE89EB679AAF16A793C79
5088A101B9AFF25C8D1553000BC9DBB8D363EAF332C19BB59494C2BCF7B574A7
5F2F6ED58F26AE6BE9680F2C9675E230B0127A819A6E27C71C390C32E9732C3C
ACC0CC3AD132DDD8079DF50A479D7C2CC338495C5EC01900D337A5940ECA3076
CD6FB069A7A1C71764A16068CC051BAFED695CA82F5CCF4D5858D6836EB69CAD
543DA0594B1A7697C89586F7CCA1EB12675CCAB1279E1F3B6728CC184145A28F
6B05098787D96D8A9D73425F541CD490F800A3848E8BFF0D46BFEF02243116A6
DBBEB0C9784A4348C7A8ADB8FF51D22FBDC3F4FDA429AC9EBC065A56AB2AA52B
73756E944F71742C964995273E193C85EDD33F9C550C26992BC9A2BF3A718F0E
6D96E0D9D3130BB9BC156B0C58E975ED942B90C7366053087B650DE011F5D0EB
243F926513AF90C694F9FFE80B3CAE6D36622682F728CC9A59F7331F49C05611
1CBC3C5D5F8A297A9257361591140DEF7D4088D3F2082D570A1DC7EF7482381B
2AF098CF4C5A55240233266EB52DCEA6807036DDC3A1540090F5BB2B6DDD4DCA
E12EDE06AEE4749144CE14835DE044750BFA60F188537877B9BBF26FA22D3764
27AC06A1E86E3F18FA8F74E9E873AA62A2DEE42F8442BEE418DE233D741E3735
CA6D2931A309E28C52BE12D84F980FE0109EC357546996C65203BD496FC57BFA
5BD6253964DD43C9DEA2CCE4F73343101370ABD3E4AF6708A85CB82ED743B46F
18529F5E9516ECD852A141D1A114387957DE395FA52AC2C5166693821F7D563C
43EC5BE230E804286AD8535A03BF0799BDAA3C0020F4174EA359F717BC5972BD
E2D2BB4E21A9AD44E9628075CD3FE42F4A9F6190D2CE0DAB0A824D5DBC0EDFCB
0326CBF528015F2C12ACD8EC314266BA9F1FD4D5835F6BB7657CF2A0A1E8B7B5
D687CA7BF16378BEB8940C458A60F34350A80877148F5B9A1F2D2ACDC7705AF2
91F51599FB2855B2624CCDBB9FFF2B0CCAEA8B51E942C7CEED52F61A0246DB7C
E834363CB24806ACA28FB7C0BE961F806908D0C344F8EB0025FEF0ABD644C822
514057E210657C6CEC3F3A014A0C4CFD2CD60E22B004DDC927339B9EA9C0A3D6
3AB7D27CC05C7690741C8333BAAF7EC106B509850FC71815DD87A8CB6D24DB46
7F431CACC8B58B851DAFE348376C2356A5011F0D89D583BC1FA56D6F762E81FB
AD43848472111DDE5DEDA97EE65C2DDECD3D907D62D441D05E950B9A0D50B501
6F672352A15EDBDD18D51AA807678569442271699CD9BFAC85D4BCB44FB8CD1C
47E9A5659E22B8CBD28EC528A4CEDE663827A5F25BA96256A53561842351E1C8
2926277D98E1FD32DB476C67E8BC74C8AF950AD04C6DBDF2A47F6D473F9756CE
0F93B903EBDAC05B554BE4EC38665ECA680F6DE4C07A2E6246DCB24F189E3555
24440AF09128F379955A7DB9114AF97532A5F34BD9735F899B5DAF283BDAB9B7
746931E1E0E926D3D967C3A16CB1E3B1BCAA86C28A11486C27E7B7AF83A55191
EFD63D205E400235F3CD2DC38868BC95BE053DA38E53D23F15A776E257924BD2
DEE6C475674491455DA96CC30555FC799BFC982486FA693D8EA3E5017C451B03
9206041B449671EC721B575A000CFC63A71799051FDCF1F77D947B7ECCFCE240
2E3E6AD4A892E16010447460B4F933C2627EEABBDC2EB1FC9A46C55386785020
6BA1CE2D01A6FBC1F58C8921F9C16C216246C583D4F3919897ADE3C9A7E24F73
A811C217D4349511F04F81A4AB368899C0C1F0A9EE6D9E5C61CFFADC53835443
CFE8BC1B0EA10AD850BA51704D965AD7A4A945B12FD37A955F8005C5F6459792
9BD1F88472D8F8C49FDAF4F610635C0F03483314B5B48CBC7A11E8BE6B75267A
14F8D23CA5874C9AA17A713AF9D48DCDFC0215AF317E848D429AD5799AAC517E
D725DA0E460C5413CA5F80972A878A5AC8D9FB87BDC4EDD96E2FCC3EEAE33F02
0BC683C76A925341734F671F3FDAFDB62338245FC3178918604B9642F4B1C765
063352C40496B21D3504F8843C0FEC7288B07A51AF2B4049B37BEC07959F1920
EB0B6ADF80FDB62ADC8197389E76CE02B03431F143105EDEFB4D1774730FD83A
69378FB5974FF7B247225F35365C76ED5B305B583B996C664F7FF5D3BEAC9CD2
551A5869D10C24FA4195B170A79CE35C4372B13AA894419ED36676220272D54B
7FEEDD10DDDCE662403168762A25D5A813D3CDDDE32DCD4925E1B19C6FF6A18A
A6AEA3B812692AA6A954D20B08B33C5D022E0D5A8E50A083B50E72DB0B3327FD
DD44ECC29592EEF157F4595BCA10DB82A08487FC064D626BA54D3645A8EC2E9F
EDB3E59DB2E6E02BA2398BF40BD634563711901BBB6DE04668680D1F9DAC8FFE
3B6B94BC2D60CBC86AB70824B87C47EEADBF36BDBFBD3F3E9A863A421570F08B
3082FA0CF4021D7411C3EDB94244B0CA3175A514F90829E9CA665ED2BDD3072F
45FA57D34BFB7347F1ABCAAB94EE2B109FC8CA5383C6EB8FF59EEB5F04CFBAD0
EC3673AE2E597FC6F6E7159FFE91BE547F31C49301DA4CD3298D11219A040A0D
2057E7B69F536C0141F6C7D9C00FBDEFDD22DE801471D171CAB2B4FED0636318
293EF8B89617A1CF9B98D6C762131E1DFBA2F77E415CF04A4B413B2D58E5CD62
22EFAB776E42BD3DB46738727915E53D8D4690A28A1E189A0660AF6C6C3DDDB7
555A24F5E48CF6C0C634D485237C72E0CBE24E9DEEF3318B83B5AE793BA9EC3B
3E94C5CB3F5838E6CF63BB80FA0BA97A9ED4B5921A5C4B2B0B8786052C5E8F8D
CC9DE3900F93FC9C4729C67763358A9D8B8D7DB783F12CD54F2E522685DFD13A
979A6EA51554B7E234B19551CB995E72BF691738498EC949399EB698038549EB
507B2C2269BB2FD9329A1E19B5249C30A773FB23788271A10FEBE616B7755319
8A789E72E8E3238959C8C90831A4362C8E0C3A310D141AA7D2DDD0EF968CE0DE
C66BB795A8A4C51152DB586338B0E8789A6088EDDE1CE02BDE116B88F6A384DE
1D19F47EFA4152F22500C4B969C83F1DF93E7B601348637CE63EBE78403A13DF
5E22169DB9953B487B92FE6BB9312618680A5C213BBE70FB24D3AE2197BA3C3E
F8F0FF4F82A8D7AD9DC3F9E20479ED81767ADBA230CEA0F5B50B890F6C613CB4
8B72AC3545211BE59FAD51F9844AE8F0C8504B9086609FFC1EEC83BB5677613C
82A4C00E3FBF92504B2976672A693BE1AE5083E6A60957C760DD0B6C7E6DD0E2
25280E047F8DC9AAB261C46DFAAB577C1A3423FADD400C99E3928A38DC5AD62C
976400117529E7C11C2BDD699A1F846AC5D91556C3BFE5E2EF334F5B644ACBB0
F7E0400919B09B49B3AEA21725F5D0F49EDC8C4C9C50A8B45C55E1BF6310FAF7
C84BA385DEB552F9A5C90863C06D0613D0993FE671C99B2F2BE6692EEB2A093A
660A2D80AA5FEAD234BE9AC28611EE83825F1262356911F3288CEC83CC64406D
E5D90A0D10B9D09D4BAD3A8729BE2E79F4AC51BA4EFE4BC827063109BA16438F
B4068CA1EDC755E37BD10A204F94345FFB6121289BD5D224B6773BC36A81432F
3C28BFC2E503F0E1AF77CCD529C784C3B8645F4DCD7989EAA128BC1F16839CFB
70A9ADC1D305CD666B0C5D66E40AE25E669D6C523CD2FEFF2DFC58FF93374B1C
7F4210789A077CDCC3A2AFA6684042162729D744BA55B569D968B34FA59E86D6
1C514380107BC03CDC575B231CE230951B3CEC622EBE16E4ED787B86C3BC3BA4
5477A010174D514A9C457E88E9B34A897C2AB13BEBF2C55C94E4D9879C4417F5
0801F3424203AD8A159DAF45EC3000CBD209A2AF7A67981A3D830A3681F6951E
B9408498D1BDF5E625DCCC0BC477617E266F1342585D0014ED36A34C8552C571
ADC7C211874264CA49491CC1CA5DF75A45EE4D2FC29A8DF8CD24FC049D199A4A
8CF21262199758B2B07C2A37F5A71031F94286356A0E97DA2C4C6B7BA704614D
A48B1D8E40D824DD8B76A51578111A66E69EA4C25ABEAC6DB8DDA112B42F07D2
B169AD55E6360FB823932F3A12464B7AD2D5428661B2A15A177CDE5123C54075
0977BA3BC7107695EFDBD03424A0BAC81570931315FD643EEF251D6213506478
A9EC0D95BEC184DA2141A8AEC7B57A1557B12DC3C33A31D47E14F4FC1765940B
9F9886D775840E61D84772425912C7FC18FDD73E045941ABA3802CA8FA0E856C
7D10901464A7DF71EF0634548E83E86772E4A5542CF83545BE60C3D0954E2ED6
E0CD9EF00B0A5C0D066F685ED8C783F4104D75A5DAE979BCF7629C76464EA039
A19FE0549C7CB6FDE346285FA3BEA661D6922E038504604B38115CCBB705EC77
D5EBD40F53AC32B19986FACFF9FF58DD7A472A9FF0C168479B6B7FEC27CFD3B4
6959218B4A2A939764FEC56D06C0F8FF435DCDDB876051DB23A8F721B06441A0
E248B9BB0197603E1EBF1E965594E0364F1D54FBD6E37A5651889291D3F692A5
DC44B2893C9C57908F020BEDF2FA30838F6E008AA8D9654F5A01C3383732909A
B8C0EFF6D4045E327988141158140A98E34B39934FC130D6E553CEC48F3B7151
6DFB7F927680679B5270D59A8D2E8EDDF908066829ADA91DA1D968D5BA9E31B6
4E35828AF5C2F3966893386573F84AAF8E436D7B71E52E4114AA63290F10C989
EC6F39C1F8941CA9BC0A19E8A3348F9E29766599BE30B54AD5032BA85036B115
11FC5462B1D9322BB888F23F33757CAE8E59584BF2C14CB2BB031FF8AB496025
4F1ABD3099FE129C3F02057DEC9BB54C16ECDD39D13634B978B88B8E82969D43
2D227A24D54A22570A504018E6DB377F9018D447A9F592D1ABA356F58CADD6B4
11568DEB404B9D8AEB24C1D87CA715566E0D5A087AE4BE33F428F3231E449125
4E65BBA44B8A5B3229A323B7048692004E8D5B1CA16A05AA6E55705C785648C8
F77B93A92502B99826FC0CF8CF2D402149BF7F3E93E768E65B704A5C41057421
9353816B83F3F1233327D047D048A269D832ADAC241FB11DA950F2D8AEB7E388
681A3A94B5475966580222B273320B6527BC4CAD3B5349031BBA489B78A82148
C694F0ECB45F5DCB6BFB8E3B400D051B27DDAD29EAC30F1FCA4BC7053CE7D319
5CDDE8408F587C20E675BF7899DD76280312AA0240DE25F71CFFD7D488047C65
B6D48EBEA6F5C4A24531EE696D73C9F08003DBB967CA5876B77A76DE4733FF19
05B3B54FC8437DE57D9852BE33CCE396251BE474E1CD0421AFDF8EF8BBEF1A55
A9285C1A42479754F7AF1CFC91F03AB4A129E306A079CB0E9C28EAB7220005CB
EDC334B11333342A40D9D4223CDE0ABBD8D6B0FA45F5F767FCAF398AD41B7B95
11F7C941789649F903947E235AF0F3C861440E1BB64E758099F331BF238C0C45
49DFB0AC519DE36B7F9D94DB260D6E71730EC8ECC634BB80A6425EBE51188224
52FBCA6AA9271EB162B5F3E69CD7B9A6AD611A80DB004C9942FE2DEA69DF8232
61E751C345DFDE5F09E5445375D36F7194C1F5D9A8E070D741B15B07718F8E96
EBE70EAFC66D91E18292DD2A4E4FA4636B473B5F02ABED40A86C7417468813F3
C80D58B99A15CD405A32F9C85CA4F76A0B3E138581B9D885A0C30302E1AB64E5
841DE3CB3CAE1DD1B07F793CDE49AECD01145EDEE320296EFC860D2A57D5D9C2
31B884A7B8249EABFC662FA55862DD7CAD0801EBD7C9A01412E0F4C69DED9CA2
889A35B33A34FB5CAA3D39B46543E0BF2F9D3143EFA34CD71B9B9DE91E5A426A
B9B5EA106E3A8E0593101F15F0EC1ACE3FA8D3EDD40001AFA11762564A845799
AA5D9426F0B6A0995FA0FA6E45E7A7897A5E0D1CBFBDF51E17583FD619C192BF
90856AFFA8F6C779460A557DB6EC4D73F8016E85F1F3B25D41D5D5849EBD6FC2
90A9D08E7731183FAAA37E13B1B3B900A38CC74F0D240A265C77BEB8EE794EBA
DBDDBD275D06871ABA1FD39631DAFED73431A9C936B9E10F25E5C13B41FCBB65
23F5726CF2A49D41A54CCD6F36DE272F69929FA04CA15E8E1CEB36825421C922
B5371BCD6FDCD23A25B9940076AE595DB74FE36BCAA1ECABB9724E973A66B402
614240BC1322E8B257D01C820D7A4BD8482AE7AFF0E3DF94C22A124742A4B0CB
64B3C1B74C01767AC5FF37F848981ECC4C92B1950D2E1008D380F1EFAE206818
C7BCC1532ED120A22A0BE2DB85DF80747E74F9F242AE84AB85E597874FD118F0
483AC7BB931494D07E570B1DF6FF243CC3E8FD348BC23A7C7BE83587811740BA
871EDA5B019F28731D15AD5AF11C3F6DC57AFE0088A65B6233002EA38F173D2C
7B5F0782B7023D9D528FD05F2040F1A77F70E1E9721B19CEFD61D47EB54B2BD9
9C91405F813E72B73638FB7CADF6C418A79E0D131D27737B77D5034577FE5964
3BDE0B9F2C9BFA63EC078917A98CDB5B02BBFCC356903E2328CE445F934E2AB2
E13B227A16748590785C3635BE2673845AC278D513D4FD901529147F19D399E0
304013332B6952B84D332B77AECBBC38AD1808848C8AF58B7309BD4AB80818F6
C1C2E3B4D9DC119B7CD32381D79D60BE6CC01F806211B8897CF34B70C9E80A74
EE2DDDDF061E61D1037610DCA0082B4EC2827FAEA04B2F63AD03C6299695C850
25E1D5B039BE2C981AA8E89A3E266ECC742DFA6951866BD920710443D3B17C25
9F9091BEF388004A801966E9C1CE3FC3472B64CDE5BCD9D1C5B080C962D5D7BD
EE0D626D73139CF18C511E554444D7299E53C73F49F9584C05A2BBB9729800BD
F8C5B29D9B76A4FE7A8B5BE48CED8A9FDD6A5FE918CF37BA438960E221269D5D
560CB3BCDCC053DD53EC5ACF9BBD35E7FBBD5A32BA13F01AD5A9757EDD6EBFA7
1D8A8D98B98BEC882C325566C6BC3F4596FB29631B6F7391BCA4E76473FB0234
43C31193F41312B267B4BBD96830A117E7892FDF4F46A0ED60AA130149651F57
44A27EFCC64CCDADDDDF28DD4CE68FFD0BB013E8A98C9B7D684F40B9CAEF3B60
FB957757B3A3EB778B484E22408BA5D2BDB31A8646DEB0484199BE8A247B6CE1
6FFA09A3BC00863EA9CAB8FFC5F488DE6C57A348CA0BDA0FBC55BD73CE9C88B7
E2E9128CAAE91A8414EBFEA809D73BDCF6AD1E062483D5D248A0DAEE658222AD
6FFF90975F0BB6CEDBE9245CE99910FFE6B3F9A5E67273C2DF900A411A6A454B
745938BABFF0F58AE0BEB5560A0E58EAE230DAD77D9A03FE58D44AEB2C86C4D9
DC15103594EC513E1E4DA476A3506A092B4F43F7D8A513A8E3CAA2CC5B2DECD3
A23016E5E1564AB11EE10C5B0D3C02F5A5EE8472AAEC545F08D2A3984290DCF5
1F90D93A7B5D32F15D2409BBDE922D69EEF1365F755B649959BBBF8CA607EB12
F341DDD56247790EA44094B60814194E9447DF06782FFD8EDEFA7D9B8BB80BD5
DBF2BA76527614BE39877FFBA23FDDB0A222389786A0EFB0F461B396AD626B98
7F848451BF2FB8C7A3E618B2B718C57402A81456227362582DFB8EB276CB90BB
D573952966F36222CC4983276CE891540A54BD22E4EA8E353AC31DCD70EC04AE
F06149752FE7FE13167E2181C9DC66783428D2CAF1466970B965D0B7381EA1EF
0C659555FE7BBC3B612D08DF3666DC839270C53B5EA63A6589865DB9C3C04340
57987A88AAEF32F43C05EC766C0FD124FD68CF79F069B7326466D7DFB034758C
1C54A745478E78F74769287027461EA36335636803B4D1393A89FBB6EE8865EB
46A74662CC14D7055754FA57CAB556A654F0CB6EAA99DBF849C7D569C08D5374
91AAECC0BBAC64E5760DEEEEC10EB5F5B1AD9F6563B695D3112E02C4A789AAFC
59C53F7E34F970154192025AFE2459719FA4F4D1C99603AD3A6173C71B40A5B2
BD64A19D367CCC4E89D34DC1E4F8F46BA7864A3E811F47986CC3B29C4EDECADC
165A58FD441DC0CD4332239978716EEE43A02D847BDB02DD538A12B34B33A9AD
1BFDE01CF44CB66222E6A1C7E4A424C61E753AA4081A20F5CCE620BAD35C824C
A29486FC359481E9B99E5911AECD423A1D54A462A9BA6139B42464D1FF796153
04A65FB7C4DADB75C49A785EA52B26532BF06EF31A4368603D6B8E71A0E61EC4
FD0D695AE00574D0BD03064528B80E649A0E8403D5B865E965837DCB8FCCF635
7112A758917F06EE76CFF1063E50BE9FA452A26A20102DE05AF4F63A98520F27
F654CA9DC887C23A2C6C313C0A6B57B6311BD322C4ABCE992987D4C6DEE81478
42D767AA1529E51354D8BDAB17C7A633909BC4F51848BFE3CD1C0E85199D18B6
FCCFC1C00CC46D04779836C5F24A5593DBA9FE1F9F7A5B4FCDBB28465D30A2E2
44E89F0AD558650EEA39978F1D73ED86CE7A108C505EB38E048D94DA5864148B
1D34D90ACD02139B72551848051DD7BE711B1AFD8AA9F9E02DACFA57E13CB0CC
B196A462A61DB552134D5A2787782D4DC7AC66134A730C1EC50D94C467C6E560
5602C340616C830B22B810759A1BD490068547239ECB8F2E788BE91094472197
C141D07B7DED25AC401A0E0F6D1048FAB7C1DE17D1C0F72B8BA4F1C73CFB1FA2
ED8EA9F87881A803D24EE88A958CBF275DD5C11D79EB1292E6BD02BB5C388195
E801FB33EA4FD49ECBEE3E805C54AAB2DF1A89C7632544B415877BD9CB4220FF
67EB26AD61D5EABB04DE5A76CD3E89891FD0035CEA0FD5C118BE053CC3366BFE
4D826711710DBB5880C9D574FC0CE8CE250FAD72B8A85B7F11B88344F1455361
8A71FD43019637F35AF2DF8DDA93E41DC6FE8DC8226C4D07D41A3532DFE1B965
967CBF7451809AA6A878764E455181F1B1B0662C434E69DD9B03BF2075C8AE72
E7FB4BF025216A057C6AD831515C0A6752C8EB0BA715C90E925468582DCA44D3
498593E505B0F76196793E5276011790B2771897E11BCF65003FD02D3D6F51D0
3964DBDFE38C6ACC76A99D5C1407E52D9F7EEF4D945406C3C998E63FA1B384C2
4F4ACDFCC96EB0815A8D68969D01842A67460BE96E0FD6BAA8434094A5AAAEEF
34780111F8711A8E4C2539A3C17FD3FFBD1A8EFC9B5187D863B02AC1A79413B4
536501922114C6447441C8D173328A42B4C22C4BEB23ED13D59F71AD38D0B3C1
973D171BCC4C30DF26DC2C5661F74EEF409B918D7B6647869A64E63A064E9A1A
1E40A8782F5E9E2B730606CFA7718F86F5321BE28AE3867F209E387345C9FC48
BE0AB9FB7CC4A5D8FF15BAE46A5657A6F5126F9A06854BA4A945AA17AB68D5CB
662BE0B1D3AE61F1A0B45065C702C23EA20A3068D843B0EB23AB8E05429F3ABD
15749A54893931D730846D6DC57E064B720D7A590105FEB6F0C1F2A79B2AC6D7
7EDF093F9655CC08B086858ED5BC7CA5BFB45363451A7835400C21CE4724C4A5
B329E81AC264678FAE469597B5C69D894220AD8CC9AB96B6443B97E9E16C770D
FF9AF6361E24EC66436686C09EFBF7DAEBF8092F501E16AB2B38026B2D02B42D
9D08C66149225D2A75B09962DC2BA9B31EE74B0A01DF4504DEC97479FD4A3CBB
DBE6A50BF421F5E272B827729D936E0637DAB73CDFA0B9777BECA408918EA4E2
49980B99E4D965E5BD0087BFA2F560A74FE776B80D1D1D7F10BA9D83194164CC
9EFA1AE0116C342F852AE4F0E096C8A45D7EC00D5977ACBD405937690E9735BA
8A48F2C3CB2269A696B0E62D77EE488D0330C6CA3C4B87887BE629716E0A0909
1B6BBDE8B927C968934676F026D77A9782DBB30F18098C4BE32CB8E363B06455
9D0503D4A2B82CBA82B08B0FB6FB7916CEA20E26E66FF7FAE3068468A096D757
5725887E0C5F1C963EE2BD777E6FB6064BAEB249BCF608988975AC2DE0528548
5625B68448897E7872E31F12A3970976CEB7DDB3BAC5FC0F4AA976C8806796E3
08BB2A1599075365DA799C5063FB5F7488AB463FEA43F72BD5D1C6B889E44CCC
2713D86BF55ACA000644DFFC5AD8DA17DA574A2D612568A755A2475F5524711D
5035DABF8BF4C7CA56235F280A19A2EEF8714B518561B17A9860DA936CC61220
114FF85B2C54A55AA658E6167FFD5603B9AC3EE7DE4FDFCE3F2A0300BC063E0E
F740120DE745B8D8DD1CE033B296B5E70EFB065D71AA5F91781805286596FDE8
EB0520FFFABB84BF7D334EE8817D8B7DB8AC8F315F3441B03AC32E5F76FBBEF7
12E604BBFB2A1C147FB5FC15F77E40B69AD4C51F95603B8D35E9C9F21A4886AD
1D380A31A4F8BC51B5028A6D3A83F79CA12BEDF24EF220FDB31E5318E97E0E6C
E2CCE693E6DDEF6F606499052925A92942B5CF2982F022D76AA70CFA232D50A8
E4ACBC3A4A0B6E7787B3F8CB21775F5D28DDD31D9470ACE0D0C0DF6349FEBFF6
363312F2E4C99F4FF66DE097080DF0751606E4E8E37EB2945D2D70755FD31301
E26F8F20910AB094CA9DC3606B93D3CC26E1D16A05A03743C36497901FBAF7CC
EC5165C8AE75FE8ED2D7879C8C8004101CCD4AF2E66A4AB04796C0B05D90A5A8
23129906078AEFB59E909601EAFEE241876108A668740C405FE19973D1C2649B
9380D4EFFD55C415595B4142166DC9ECC9D22BB79FFDAC29EB7D3C3F92FF3F0B
0655D40A8E253A9C6CC536E921DE1D32A858400E64721286FFCECC01B36F951D
73949988BBB9BA65711E637AEC878C2BB74BA88FC6A3BC238983A5246948CCE7
C86D0717EEC2154F81C84772C66E84E04B0D6FEEA31F19617EA7EFE85B461EFE
CA43728C2380D16D9FE3A910F87F0E7745B6E7E377278A37C59C2D27124AF871
F01022D80008454099162630E15BFA39AF25EEF7F1C2E81647141D24B844040D
228F5EB02D553CD0A893CCF96BFCBA3E9B52E0FF0F7DE1334DA432D462D39FD2
78C7260B19659456B35804A1881306BAA47DD9857F9825CC6C6389300DC9562C
CC2014464A0BD02E41851B0635A9BE9DFFC634AE239D4C3510815015C0EB11EA
679E90C2630834A9CE0F2C23887E435E17AD2E2315AD800EBEE3CF25689B210E
E71FDD7AA6C8BF44B567263A96CB7D3A4655484C073F981D15ACAF54AFE9A6FD
EF858649B214ACB9D60E1DF6D624C68AA6222FE1D0E9B6F306626E6F71916BC8
467A07207082B34610E4CE877C4DE85FAFD0906E11A57DE8AF00B974939869E6
DA7BF32FD8BDEF83477469D677CAF816001D373F368AA904AD2A08D3CE3720E2
7DE553C9CE9750886C848A2C922B25DFFD56C9E3D03F67B2EFE63589DA530315
B9AC75D391CC683881910C957105269834BC407A66CFBCB2356D8F77DB1E4218
E75CA35B6E3999324EBD8D12BF6194A28C85562F3BC1FA187691437706B9C59C
DC1729429ABA9013E2893E1788C1D1DB4507591F8506EE149371F4E4932E3671
BEBB75FDBA752960049077C1B8B34BDCC20DFC902AEDC874B4C837DCF96BD8E6
DB52B7B4009321558D70B5547064F57CA7FB84C5EDE850CA254A979DC5B17B95
0CEA4CCD54EF4DBDDB3B1EAE1348D1FD7AA9EACB882833958CA66E537F4DECD4
92A52C7F90C3032C28D3CC3A9DFB4194DD4AB3AF24431DE98546605EA1748712
0DC1BCE6086E62437873BA673CB9E41076C1971B846D7702301A77D39F7666CA
5C352AAC8CECB597CFFC2F1B8D3DD50B382998A4D6042910DA2DF650754ECBA4
6A2A1C303300612F0312588A121F0206F3BDE06114E0A7974AD94901E7D1914B
D76B7135927725ECBCEF72D69515D92BCFCD52439DCF5324B234B7AD11899B24
774D879A780BA21F684ABB249E78366D8E93741A4C1984EDCCFCD59F7D9DFF65
4EC4FF5B5A012DEA5803A44EF0E1433FB5D4DE363457A3B4444365CB7BCAFB47
5E1810DDF08C00E06E0195E9C3D8CD82284920CD8A6252BF281412E033B55F75
41C3E1FE2AAF08013A1AF888C3C39EE484634D017A3696E07E739A33324E3295
6174BA01233039695C5461E74F86BAD5DEF2C0EBB88DF89DF177ED829F4C3453
BDF12A3CF27AC9EBB6490AF8CE6120DC1D4A49FD15D7B593C971D32D373436B7
D0F896C1CAF3E4DB41F8EC90244284E72EFDC72D49BA5F1F340A8D3F2C3CD3BA
060D3E3FF5EAF38E35BDEFE3E247B7946EB5BB14CAF071A4F8C642FE5E996348
6A77A492D8C4993C3122F5EEC98D02ACF9EA6904D884750D90158DA9ED3976CC
7CBCCB3AAE909C75B1EB9C13A19D55BC8A10A1898130E55A9EB8736B9EB0E742
B9E93E14B766CA8AB94E2CAA65677C4837D578FAC846D77AEEE7F14BBF11A759
F59A36F28F6C40CD614F18E9FA16F73F1743553D9D26389FAE433B5CA20613A9
639AC60FF0E8A338CBFDD4042E32532E7D04D1E6783D348800422F754CBC5818
69A2A54A9896CE890A74C6B8C95F76977E198F06B2808CCE3149285DDE0A8736
716631BA515EB9856F528EF173E483782FCACA8DB225952E5F1C0E82E48C490D
5BB1FFC234CB4317FA4D4B8A383FD14E0BB7BC7F81B30458912B40D72C6B8B55
B06D8912281ECE15B7FC1A6DA067173755C341D64E84A1170B0547375222A669
3167913167747CA2DEBD0E86FD9133D41A1FD65F70C41AC048CD00F5B65AE9C8
560FED07898D2BFA831CEF0158AE8E4FEA94F930201F13D9F9E9A3BF6AFBF184
009EE2DD94C933D90CAED51AA80955F86226CF381C72291EBB156239AE1BACC4
B1A7C9347658F8E46362D3AF023BD2BDB6840929342A62B9DF6F39D245E91A58
48FE708E9507296470859B94B170F45B425B80030CD43125DC82E9FD230281E2
EE9B03077AF02B15A90D1197D498923EEE9B65CD1F3BB0A3F57514891FD61D4E
F00A7EE36053FB1EC991C1E3296AAF354359B2334B6D01149EFAA3BF7614E76E
A86B408D51CB492A289C9E63D26ED51C0D93FEA47CE5CB2855D5D04C6530908E
BD5314D156957A2CB416B920AEE0AF5044A8A5973D6E84B1628C82ADB3A32F05
92C58E521E3FBB4391106BDA51F30439ACDA8148F6D4C39270A75DB4462C63A0
B6D795D4EE9A40017DEEA2E49527BFACBD40CFD211ACDC52D3901B80DBB525C3
467D21EFD5D365D36F7CCDF061D45906A25569A5E7F2FDA0209EB721BEDA12E0
5917EA91441A017EAA8F1F489ABDBD2DA5AE17C56E64998CBEA5DA5691605836
D77C7AA5A37C53AFA0FA794945B39D2717AE76CA2B1CCD46451C7E4B6B4F66F4
1591604A1548637CE63EBE78403A13DF5E22169DBDED52DA8F05424CF37B84C3
E066B665ED573C54C422AD7A80A7649E1A0BEF55A97594DF3D81D19BA2E1760F
73F58522EC6FD339BA67ED92F656724239EA5AE88B7C73FAF13FF8DE0A7C0EFA
5A82CA24A5F74B981853C84DAB15CDBE3C40E126C275620F222D6EB778060F35
A5CC0D32957F1FB5E29FB62B1FEA0094A55ED02A0D8D61613EE70CD2563B3452
C0642744069FBC09FD2CC88C3537CEB2B12338ADB31A519315EC98101D4F993E
9654A0D5DABB7B196033C6E508332259D3ECB1878B9BBDA8C46B99ABE9757189
CD7B02F27AB87F6998826D133021FF3CE62E38E0F209E58D71248D2CF5C85A74
533C8388D80DDCB95422DC7897E3FD01EE40A187E3797F3A9CCA1B21F6246BA0
12FA37BAFEC375C8CE04EAF338634C54961BA2C3DF6A49C65FAA3705D3A64803
8303F58AD760EF9DF97C727B7E6DD384F6035F04FDB35F1A395A7FA33864B449
BAE643BBC8EA891CD41F4F9C0BB4862E3F711FCD6D60BE476655495DE9CE96F8
8555F9928901D24CA03B7E47417F45D0E6B65FE23DC114ED5F4718CACF57593D
E2E95566752AF7E34861A6C04F49A5E5277FC90012C7458FCE101E307F7BF6AE
29273EEF329AF95096A631A68842B689BBB4F12FD99925C17F1D3BC1E7E5ADD5
F25E5D8F5B0A803AF98348FAE7036CA28365DEFF6415EE850756C9BC5E413EF0
273CF43FD10F89A0081A6846E29948E61B8A881C8AA86EFF3D193BD3ECFC5301
238CE13E25AE2C8FF135C80384B8076259B640028732316D14A777BF16E7B987
9BDC37C44F198088D8C3446E158464898EE9F836E6D07793BE53C4768FDDD73E
B87322DC2D7B09B092AAE77C8FC61B4FE27524BC50D349A2CCE13AAA7AC5DFE1
197F5F7B0AD6FAA5A61E4F6414EC96D9EF6D9F7836B85251D4DB9CC0DA49527C
173FC43847F0E1AC665A358233C597FA1CDD622BB3B9DAF843C3758FE7062522
7C31D322733B1E5706429E1E3DA321910FE29B4698BC9FB3375A9AFFC80FDC10
ED8071EEA3A879332A3F1001D0D6072CA4B5D7338A9CB39427D60E37548AE774
3053B02ADC5A9E7E873137DA91BAE681225C8C9E67D05506A96F734DDA2FBEC6
5AAFD32B2D13FE6E9271771CD6567504E629DD665E9D57390C4220A12DCF9757
9E92C2E678DF07F6E5F7F9DEDD098FA3D2B1602C8DDBB2E6B432F8F51FF93DA9
079C9AA154B1F94D996862DB0396724F69FEB1EFB54BFFE20479ED81767ADBA2
30CEA0F5B50B8D4DF6C1538800689BBE65EFA1FF1DA06BD970FD3993B09B5E55
7C739CFA3A3C33B647F2A06D2EFD3722D899201C1E703D35EDF9B5DA219014B5
289F3C429FDF271C136B8BBA28491603F404813E7FAA4D0A0711CFC3E1A07E49
A0B03F9003DC184BDE0016E3237A957ED79B72EBC8EEF888D3C6DB49B71ED83A
216241D9698EFC29756E29E7F095EE86D9CDEEC4F306D37D6840D73B5F679F14
435D7ACC2B56CA52EBCCEF96F008ED91156A4782410EAD0B667DB91BEF0E8AD8
D2321954DC91F8178303A63F8E9CA11171D67C102BBC2A346F2650B1FAC11EC6
55BD8169D6B1DD2B9A3F6A0A5EF8DA17C57B075C6806469B92AADE39D1600D7F
62213B27EEA52204E1B4A7F6150C47C28A0906139B737D5F357A5368A2359955
7D1C23EE030444CDD8438D9FB3D1B58512749BFD5C15D966F294F2243FFEEEF5
9E6818E5507A855F91819A6C75DBE6781EE58B973EE3D87D706A3086BCABC9EB
1902B231DAACF1CCD842308DFA9D2E86075F9B3F92EDBE30A2447AD54A7FA487
0CE4D5AF5FE7C52CD3410CD75F1762444C565FCB6F851CD74D3CB86AA7045DD4
BB32D03E6A0F3B5BBB0C9016E84FD89D639CA2A26D5A54ABCAB6E72797084CCF
43188D40DD39B82F0962F4E73A12FBC669BCE513D30E78D7EE33D211A66EFBA7
C1A2FEAA317FE1ECE72587561D35FC03762C22B889AC2A2A7C0BEBB0C9186092
BF215107AF7F4880B539B756E125867AD4461EA45C907DF9D9410893D24365A1
D19CA7C1AA0DD5A7D940A289AD5CBD888FBEE73A0A50313A6C53F47F0BD7462A
E367580D62A1ABDD33A8F71C3653466C5E848D31807317CEF7340DF5751FBB8A
EC8F365ECB446B6A381E9303380C068DDD25BBD71183536A3AD35E681CBC3F8D
A00E8FDB1AC48D504CE91F8896F9EB2F379DB1C94389DF02CAC58C1BEF50462D
A5087B7162F1BDD5D152FB9C4DBAD95818B0AA19CC1B8FB274A16300BF66BD59
49AE733BD3DE9D2AC758F24EF6A9C3F0AB7508430357F7164B0D1C5FD6A72DB1
7F526D5C64DA4CD03C133314218766016C978D1B4AF59FF5CD16E93AC1CF19F5
1A76E58BDAA87993D2CDE42062FD33A517A2A5FEF902A5022F851AF557C8C4FC
2967D7320098776F786DFAB8C427C2CCBEDEE5DC416BE814D1C5E71A26648DD1
F19711A2F3578572A1105BE14F807E9993541A3994DCE4E8E4319A2BEB80962A
BA415230C05E620BFE11CEF3625AE8F2C5ACD84E0135EED01D4A22FB10A43D7E
F0B6C040232F8973C6C2ECAD256DE883E2D93634978C08979407171FDC1F0388
28381D562D6820F7BB659C3C785024981BF75AD1F61ECFB1883B4441730ED96E
79220B0D218B2ABF7405C9E6A7DE351875F6C12A74AE111CA21A00CDB6613D3A
0124F41EB6BA00B3AEB114CEFA8FE043CC12B42AB03317C9D5E36861ED89E64F
677FF348E8ED022BC4B0666E6F1AEBBAE7467514794D9D414DB464B5324B0C2E
C51766EABEE7BA2473F5869BBBE05DB39C0DA0F9952B72C904E621B5887FE22C
56F264C0EAAC3B72EF1FA79FE1E56B1AC74ACCC39622FCDBB945543ED13027D1
65D2EFA4FC5397266D27BAAB09FE62DDCE224AD9C6CDBC50A8C9E9055C696E6B
C9DB8E4802CB05DEE334884C13832466823DD8CCB8AC705A25410F9DA361E1FC
9E08180AC11099E200063B4A450ED82E0F6F47C1A56CED39E51F5869916B173E
FC0CF728FF5CD76670E3F30CBA547BCBE809D5F7295D6C03A386B6D57C09F26F
6665AAEE694D1BC7F57292ABA161F72C8753D2701DF383AEDF5B51FAFF017401
2508F26EE4CE913DBD1FD04EADE6259B99859A65C1470F3E35B2F28BC2E9D857
E66B36BDE8A66BD5B31568EEAAB289A4D78729FD9C05287689E72B4CEACAAFA8
8A9E9D01DD34B03254F3561A59CBE67B0224A05ECE391A2BA92AD544D206D73E
D82E13BADCB015A043D59A68AD7AAE8410BEB43473557A68F01C0C99CA2CAC35
CEE744BDFAAD1CCEE0FA1DD122449D004933ABE5EF0227DE8507D664D35668C3
206034708F56EAA65E5539494B42176BBAC6D0078BFFD5CCE71EE51305795931
B9F172372AC98EAF239D15361B6F263FA05467F4E6D963587F748B6A84F85D42
4834BA1C6DF455ED32F1F0507C8A33D48E6AF436C8E0E0F7077B37838DE90770
F05303C9654B2FEC800ED24F41481153D908EDE9721B19CEFD61D47EB54B2BD9
9C91405F8D8BA6EFF247E85DB144650433CDCF08803C3DA50383748D61C22C92
234963DA6A0785D446528F2906D96939D655E5D21C81292D7ECA400C531D222A
E43890F66B92298A3999D91C85B344A66DE1B69E322BE58AD4B8224C70EAE05E
387BA2BE0759DA1DE3206C18E482FA30A8F4DFD6EA44568BC2967CAAC68827F3
A7E0D1CE5F0EBC3886D0F75EDEB96045B16131173FE56BDCDA147B55766EF8DD
7038D2ACCA7BB187D7FA64AEE3B225CE30329E31266FDE2325C63616A5D11228
209CEE30FA83953E0F9190627997C6106B406964290717E1E5A321F880AB36EE
163A3CCE56250F39E62D7D5AC2AD9B54C02CA7331E027FD6D3FD81D4A95C25CB
0FE62C32C1C6B7B5B21FD5054AFAB3CEC3067EB3C135EBBD0411E336869B65C9
65D6911B6A7F25F5D17512BE8ACF3EC5428C47AE870B2C8F11D141BFF2EA9831
2A5C98E09AD2608F7A6FE17E1438A34F0AD945F2F42A610E752FFE6FCF211B47
C9EBF1E1C557057D019BB4C0B04A9E8A4A921CAA97603AF46CF4415C5B713696
25E714151D4C394EAC35534343E3827B5686685EC318ED34DF8996D55CC0009E
14367C71A89FD9E37BD74A474513BD66C1490324BEA17CB6AB27D3574545933B
F01C0E31E1A4CD09C52667D67649FF581B543EC76D0124CBBC6272691D263893
5F2489E87EBB5D3F92FEDB617602601A44126CF80AD111B254DA5A7D7A1670ED
47FF824A9F0C86A27F05D2FCB11CA6CF1127E2686BEEAF4C2359420DCB24BFE8
5380886BEEC50E0704F27927A854234631EBA6B4597C110C8D0D1880A446F9C2
FE922A89B7012366FA78AAA7B20AFAC4C8572A5A86D8038E26EEE0710AEEAAD6
759A354B2CDD077D446353873ECA772B865162FC33328E19749A05B9BE7A6516
861F668A71C7D6B094B14FBA7499E029C1A61B0AED92B67AE4BDF333D06DA8BC
025E0C4710EB66498F516A07A1EE6BE91F8A7324A7387548E5BD50E3EC120210
CA10149FF71C2B2344D2D031E97F899CAA8CCD62899187CB85EE4DEC32720277
DD16F3039A9FA1579DF133C8556B061B4C24A3F74A2746EA09A8F9957D20F446
4AC49E4B8E3821635D8DFF8C9F409C4B5B57B1A5E6E94DA233359CE388CEF0E5
164D0BB064C7AFC151C4A9A1C13A034672913905A4F3ED8B8843010C92022EC7
1123D10FB3CAFBE398912A3F22F4B3113BDB543D678722067D837D7554E118AB
6DA3F543273E098CE8E79A42DED1B447602A97D3DED896864A31C7074BAF6C19
3CE906E54F4678678593F868AB1E13917E2BFD73BFF0300C0F82B983D29E0742
47A41AEB55EC17EBF96D1736CC0635FB44F00401B7DE02020F6746130014930B
E9CACD957127801C3B0ACFC5613463DCED8AAEE139A06121769FE82767486D36
57BD8A56DE2A56666CEF8E2A03C9F6674DA84350FE249A95A5EB24F77E155406
88334556AA31C57F804A362455615F8487B132609EF1C4A6D968D9BE7061280C
CF4F8A74B712615F44713CEAC50CBAC2216C9D37589111F5425FEB0604ED6181
F52D7E87E618E5E99FBC80AA5CD321A3B62E337865CD47A38A540A0C4E8BD605
D07DEAB0EA658C8BB454022D10F1B8A03CE3EACEA56D8399D29D37137311D234
79A3581BD838DF6BC184D93E218ED142B1A2B45114262010433C203D7766BB44
D102F9745D6349200D239A95A5EB24F77E15540688334556AA31C5782B877846
52421FFCA871B30E22B0EE3B58F2F65A8B71EF2D509F6F1B3D88BBA9D7ABA925
1D77C62BFD5B8238E742D458ED8CC0A7D51605F2475589A87A1F1874AC9EB575
FE95EB0EBAA430BAC007CE40DC2E7C7BD3611AE5C96585C950D878A52A037FA1
EA429241BBB4B2CF22246A9F1C0E84716D18CA2986F81259F8DDEC3DB211B084
092934786614ECB5D6E18703D73787916DAC079A8992131E87B5047CBC39A08D
4A2940147BBF0E47E5CE54F19EC59748E12612E93F8E6BCDEA983A0B550CA986
E90B35C618A7879559D6319347332DE97E3537D680D5F6B09717920825C24108
24AE511A077DCFAC287A99816C080F7829EC8D6D5C57748C5E358DCE3DFE0CCD
7E559A144A7D9BB39802B57D2FD36250A5A2105353D19FD21D6BF93C50EADC40
52D4E048AD4809EDACF0487CC8ECA27A61AC2FA0CD91A203B3F72C834B8F214C
E87D09B2D4F1B5189AF63DEB0CF132A9AC94532867A274A8D1B0CB8B8032C2C3
7644B2AFF05020C26B3165D4816466B543A41DDC2AB804E2BAF9254EEC07C39A
6F71655274A80FB6B3F732FD9469ADFB2527E23F79E4F413152B97F9086CF59C
8A0E8844802657B3AEA3626A3BFEC1A3D681A79E1B775BA1F13A05E1832E8927
35027B96BCE191575C60F0EE4CEC385315D495F6A1679797B809E11E529DD3FB
EF707B918C88CA2F2287819088754CF6A2CD5D6112CB2BBD20BE1BF14D46F84B
505A90A1683843F1A6D6B3E786912186E86AA03FF5F4DD2EEE793C240A80EC01
94E3305DD4986891938CEFB5D27FCAC5C90DD229178BDEFF659DA7D91A03A015
2ECE2E8CA8B114A727F75DD24EEA5262D4265831616FFAB1D53C9220013168A3
88B72C55AB25652CCBADC2ADDC3CA59A7367696F986E1F24940BEB7E50A652A1
F86529C6ED4E2E2CCCF5DEEF40A3991DD53A4232E0E105D01B91A7E4D8F38D8B
6A21D6EB13A695A6E9F73EF920C9536D38FA87B219EB1AACDA97B46E0054CC4D
F740769FF65FC384A6E7056E9DCDE51B4C3572ED81154F4280157C8FDBA012F9
6DFA85E849708FA8FC7CF57033DB03C2E8DEE414F8A463C5F625625C366435D7
5C3A960EFCA7EB130904EE8F9E0B74D074524EA69DE64C8257C7F249861E1A36
D36D7C8A94C8D3ECB6BFDFFBCE378E42B97BE2704A662BF400BD3BC340616C1C
BAB2611209D39D38384AF424D69A724D43776F5AEABB6133D42B780D0891929A
1D45FBA86FE7DEC8F02D57373A3F45BD25A5D100A2DBA3EFB704D723916C117F
2DDCDB725BDE8FEC10908FC67CA68A4CB2D37834E4190525C4A9B51E74F0B78C
69BF57E1807952E3879B8A6C79FE22DC8971DB1F02C33F4E4D1589963543E02F
542ED39303AEF1A93BC08D63292FC027E75E22FB74246A0914A2F3A209EC712B
374325C75399AF825C4C750A8910C9907E10D2035683CC60D316CBC52EF97A6B
2D0C027B719415E9054DD033FD3D7DB448FAFD6FB94E546D14C8A1E95C74E54C
2E7E6B13F333AAB96AE3DAEE9AC762B128211497A26AF52CA95995E5167F82EE
005226EDF97A90DF7A5E7B75BF8700A965F9970D7BCD1708A333F21F39BDE306
35301D76B7450F213D28CD6B7B87EB33292FD989E393DA2AC817359A5545128B
E3879BF4EDA2E7250CAD26B4AB70B0C833AE603C6B75189304D03514D4D59683
35BAD705E5B321F59A482F5D61C1EBF6E2C672B5C6BF4069828118650E0ED6F4
77F19916243D1D618762AF96282DD3A2D6BCB4ABF5F8A74C0A541256F3C08108
C12E632F86ABB82CD94B90304E4451F7274ABE70D6037B1712A085D78C291191
0A9CCF307F6FD82C98C16C4F553E216BFC0FCFF8C848BBAD68A6B8D2AC29457F
91BD195D4404AFDD94AC00C5D42465A248E3F93310E319921DF021EF96DF278C
71A486A27F05D2FCB11CA6C97E6DA2F3E3DDCCA99DDE83B2C210A118F8B56F64
0A0D907B522A332F4FDBA9DBA37A5262635B590713DCC0A56B267C41492D6673
D4315E2DD5B0F44441955796B7888FF0D78EAB67E94FC9AF7FB6AEDF7AE53181
BB77268F9BF9F84EBA61BB0B4A836438F946863D494425DC82CB608C1FF5C24F
F2579B60444EAF95D16A592E1C1E5E7DF646B51A9F52BFDF56E14397AEA9679F
7A278399DE5E5A1E6BCCF1FC99360F5AADA6953F5E948F86A91621647BFAA97B
5780B54EBAE48AE20371302C1ACBACF2968348ABB1BF55E68FA67B517D6DF04D
AE97A8CFCF59E8FB79F79B6F4838E1875EC81BBEDAB5AC0DEB1FB3CD7F5F327B
A932D1758DD831B7E429AD40F314912EDF4315EB6AFDECC9063AC8FB92886BF9
DB58865992C0E9387F7C46887E3E999612DFEADD54D885454A5525C6D23E69E2
7025CB65559C84B77D47A0999FA22700CF64F9F5564ADA4518DE6430FE12B917
07C13301CECC94C6EE748D7A2D2BFDF8B9CD0D36FD228CFBA9C9A44B3294E722
7FD2C08E8FB1A81D6663AC4B0288339261A011BB3F2EF8E750EFD11D21CAB7A1
FA7A94981AAFB849830E8B9392368922EC0C816AEEBFFC0B045017A43EF606CC
13530B392DF2D60376552EB0F2C1FE4B443A74823CC4ED4592C38D5CFA972272
34C6A7ADB9EC549E12A42EE7A4B860A200C1754EEBA4E44A1B3DF4482634F1F1
7C2239CD7A2C41905E4310818007A090D7057247CF5745020FAB1C51A8B75DE8
88506746B7B4EB56F9DC57D4527A0E61A2A246E72CD9BB1B25A94E2C218554DD
84BF9A0821401AB95A5A32C5B3EAC7F8077024B33DE798ED96601471AB897A49
D7E7B04C728A7EBA3EFA41081C34362732EE54274DD0DF794523989508388BB2
E68F009F65ED6A882434B807D3CE4F478E134BB128FB4D3E2BB6E78C49586F8D
AE7F9AF7F764A25AAD1DA19385F5EFB3573827F9EA00298A166FC574070C66E7
313E5C886A01CA59085594D17FB0F8D4370BC778754AF72576B1B52572EB007F
B1E5A4D275AEA7A0B4F7C796EE7CF2A1E4CC162FD01232435130296CE91C3B17
FB4F21E5C064691CA309680F81A13B0298E03F93C42E68A0BC70B6070DE5E142
EFFC07DA12BED494332A3EAE6614AFF14ED5A8DA7D9888DEB0C7D793F0BE17BB
7F01DE18C4C0C1D9321AB46B0D0CFFDB351DD1158FA95469CFEDADF49E81D93A
565AE6C4DB3B8BDE027411920056915037A3082A6AE0836B782746255BD79E8D
28C3973C260F0BA33C4ABE9E55193FA13FC4AC0051EEDB27447B64DEE9EB35F9
551867A0B64B2926992D8617A07E64AF1543DAAD63DEFA44F616DF2BF5E42021
D20099B0E2E6686C6B38BD0E918B6F4761AC765ECA3CAF41A310A68701FEFA7C
23151CE39D61605D2FA28153EEA352D8A3FE542A731FCB6D958A175C5844179C
AABEF940AFFE10FB5F88E50CBA3A255F20B85966611C51D2B3B197A881436C27
204FE7DE396C245951F5DDF2E554F23FAB5DD37EE73E1628041A20E670020D1D
EEE236825F3A256B1FA8353826DEA6EB344CAF6151EFE0327A33483C6723CE87
ACB510D1BEC64CE9B6C59C178E71F52ECAB2B4FED0636318230E4365030E5203
B2F7355291BD78559AD4B0F63B8E9B08385E014F298DF9B3214B5E84D29B8796
5F42F6D0444D2F0946CE656D6C6771CEFF570AE40E8598C07E3A2FF759C12892
CBC085BC9881278F631DF7EA523D69C161839669E1886CBBAF31B7767112B506
1EECB06ACE21F49165CDA12FA2C54F31C63D5AD3EC978C950C494B978254B89C
B1C39F4F3DADF8A5679E2218075267CBA4A87C573F5736C1F11BE4C3D268A6C8
1F4E4A954F3C86CBF8BC385C7EC7F26092F25BA4A438C7BF7B206A6C6ABED458
41F68279C9499193FF7C9D5DA39BDD9A64861064DBAD4F53B9901E964FD44001
ACFDF132F2E7834A686A89E3C4C1EB0A91AEA7CBD01066EA71A2F40078DBAB95
B325EECB542ABD1410D8C03AFB3029ADCFE5CE93E306A2EBCC74F203950D1BAC
244C022C2541B232240E0CA08C16D1295CB007EC90162CD46DBB6D699EBB21FF
9FC8DAA41D2F8D84E485CA68FF16307CC3A8D53B0FCF87C9732FA79BCA14991B
ECC5B07C29E57ACE71FD147257521782EDFD02C98E55DDE837381FBEA34C16DC
83A399EB1F4146A5EF3CECA86FAA64981A7432D87606895508AEBB2733C2D593
D992DA21910B61A4DF79C654EBCB1DFE2FFB44BC097992C7F8D380D4F4CE6B8B
497241933CDEE92F5072AE054BCAD1B8EF800A649B725535408DD027B0E3F75F
ACB85C696E42988EF7BA0FAE10F4DC350BE10ADDF625EFED09A484B1334CEED1
B02E3B9961D050F5B51E2F72A94D499E8CF499ADB65DFFFA90C65952D3518EF0
0B95E225AFD50020504C16616EA91DC7260D9D2AEEC6333802E819636D19F876
751D988F45568E3931F22AA92C1A0EAD3A0625866BD919E67AD95F4A877DFB14
CEE34274D3973BD6E1BDBA49B4A5285EC67AE2EAFD1F23F2BCE9B5CC97899EBF
4C5595504DD49821692B91952BB30D64931F7F4387626862B899DEE257174AF9
51A5BC81CF670426EA2E279913469322B535003C364CFD67A1C291BBCE819BC7
7ED67C25717C9E43F9C8F417E3EE3A845A1C100A186A50A5FFA30440E957F5B2
D19D585038DD00834B17FFA6900581715A2A0CDE8BA098C325F066224664F194
CD38BFBCFDB5282C9F4234BFA77FAD37E6A5F60AD6ECA0BFC327D5E9A9EFFB64
1A2F45EC8617C4EC35DDBAB8E5EB2E5FD14AFFA1A4584A8DA3C24A4596E3D821
6829B0E6BD37C4B6F00B1D20BEB94DA21E8CCF7B87C4AD7975A5C8A2B0E19EBC
3AAA8BFE09D2C4693A0B7B1E978646C49B3E8AB11EB493282C87923A27B3C715
D10AD54B1B6A284584A72774908BC362C8220C5671DC32DD521CD021F90E42BC
0B675948B5E4FE2FB592E22599C787AE64F32A98835B2CE17700661C758E30A8
323509AA56DB182D0A6B933DC2EB1D9A948035928EF101F00D60EE0A38677E3E
72091640153EBFFD17ABD7F52961F6C9D53E61910C5B0DF5CAB028C6AD3420A0
A282546EE01452CDA5062208E1541B091BCE87038A698EF834155FB5BC9DE661
6FDD4ED67C5DD26BB21165F8CA365B82486E5D36C580B123DFFE30E3DE4F1874
A81F7F2690CC3F6B83D477D524A65BE40076883E34990C553493C693C005B72F
0EB3C5EE29A39A7418CEF146A92D35C89362E5D47AC8AD419353E45476ACD17E
83C4DE0FA60650D3C49EE821C50D14F32A7239A3DFD1BF240E5EFC5544F72116
F758DD87C77BA91EEC2E5C2885810CE9C76866252E7529DCA2648B79A9D875BC
EADE40759C768C1A47BAC134F0F1111CC489EB3439041BFA2FCFC8CB1AA1648D
8BC3F41B304E6693ED6876EB08CE2A424B75411723E9CAD01141B4DFB4142ED3
67E456E39D6019AC59B2EC0FE16F82597D70515AC98D1128BC5669B949A18DCC
A4217CD626D71F74CCD49BC9AB2D5FA4529D70807FC985EA387F32FCCA0C87B5
DB3D0C2F80DB1CF0D053F863AC2B08A8CE79F6436A5D1FDA223B6D2EAA6F873C
9D0A2FDD398F08D7443E4386C125AB3A5F99C99A122830A94AD64C1B3AD3B29E
49EB3B1C1D613F765004BBD1B03FE16B6747555673B862EF087742BB80F84B04
90B7D078844B8623292EDE09C7C9BC5BF584111B544F76B483DB11515165CCC1
7AB10E0BAB91F352500D94442A8305EF3CBCDE3C4DC7FF359E68F815303D8544
40DE50FF755A94C91C74BA4BB899DCF6D216296CC1EA9CC01563ADE425FF6EF5
ADB1D2C3E9D73B27E5F489CCCC18676A92E000D10B886340867F2EDF60ADF447
69763D38D7DF2970D1B394AB81DBC3A783CADC6D97985A403C8F5C413A7D3FE4
D6B2CB8EC6A70AAB632282A22FC8AA21910682539DE4DA48B08E6352866DFE9E
270B6C593900D8A967CD12BD005F7BCA4B1B854845BC404CC3127217BAEA8BB5
6049C1ABF8C79E1059BA3B9576A6C517C87CCC4A8CBE5296EC5ECC40D465F93F
7F4096F11851CBEC127CE8B21D37B1D16C6E2BFB489D90A5CE774B1E052FDB31
D272A7D73C86C4A6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: DejaVuSansMono
%!PS-AdobeFont-1.0: DejaVuSansMono 2.34
%%Title: DejaVuSansMono
%Version: 2.34
%%CreationDate: Sun Sep 22 16:29:44 2013
%%Creator: Pavel Farar,,,
%Copyright: Copyright (c) 2003 by Bitstream, Inc. All Rights Reserved.
%Copyright: DejaVu changes are in public domain
% Generated by FontForge 20110222 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /DejaVuSansMono def
/FontBBox {-558 -375 718 1042 }readonly def
/PaintType 0 def
/FontInfo 11 dict dup begin
/version (2.34) readonly def
/Notice (Copyright \050c\051 2003 by Bitstream, Inc. All Rights Reserved.\012DejaVu changes are in public domain\012) readonly def
% Copyright (c) 2003 by Bitstream, Inc. All Rights Reserved.
% DejaVu changes are in public domain
/FullName (DejaVu Sans Mono) readonly def
/FamilyName (DejaVu Sans Mono) readonly def
/Weight (Book) readonly def
/FSType 0 def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -41.5039 def
/UnderlineThickness 43.9453 def
/ascent 760 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3491FF0D04EF446AD8769DE20E54
1720D75F2AB6757C7C228E5EE51BF64BAADDFEF9C0FA3301C525103D2280F773
8054F4509B3D63122FFAB5125CE8FC73ACAD3B1E153EF78ABBEA64B3FD2705F0
2BFE68AD5670233C9DDF7A6CE741D2B7A0784D86FAC2D73CDCEB858F21BCC366
D652A738C3854826F97E3364293843EEE50CFF386594860051FBA702E2CDE29F
5179930151E7B1CD87E1FEEB31CE2B1AA4A07D4EDE7695FBEC4E22181A9B5380
DF93E4926154A2AB32BEC0C2A071AF63071F895A4F714E6CE31293BF4647BC0B
DCC0934D4C1CAFE035ABF6E73CD2ED60A4C6416F04EBBA6343EC39911CA2F25A
843EC16EA40A688C64AC31B4CAAC75D92EB7B73C2F7F0055D23F297C2A582606
642CF5382E260B9495139D3F40217BE6FF7A594F01C8B0438AC58AF9B82D9B32
2F6546A015D07A6E66CE71B43103D1B1C2EB9D1E2941CD1558234D6AEEB13CD8
5AB1D608421DB33F26F0ECE68BB808CE15EC5F2A2B7E125B46F622AE0EC3A7A6
EAEE618246BCCDFEBB4C84B9AA023E4C2E1D0F278AC3BA7A4888DC6E90ECCB04
BD972EF8A717D2A57905BCD23614AF3A7C94025CE06E6C68570E50A33E3A8707
00FB4FFBFB1EC7F4F50C03D122AD4B63E9E65F0A0AF43EFCC9FC546FD13DA42A
1C391CD5A39D75F1A4968FCF34270917DD0B7DC8AC08BAE392C6082E3A035A03
4CCC595BA01DEF0482A83E02EE1F0367F4A80E193F4610960393427B7A117FB7
D49657AE7D2B294E3534EEEAE97DA3239259BD2B5F063F81FB03F68D22853258
3F8387F0BC65DF02E020E4DA80F0CE2DAD5F5A4E8D1246C83DE4788F5CE3875E
4C412F8B4F1AF941EBF9C39BB17B310D911D21F05FB674AE8409213346B08413
FC160E9D7D5C5AA2F9E12963F9F03B33330E14914C09A5983F0DF27193BFBC25
32C24DC6432B4BCADF6CF9304554841290962D4C077BC1D5C7DDBBE50EB6A0A3
1BB786F87431AC95740C7E138AD3FD3761A27F6A8D89F3EE3D32D0AD34C3EF1C
144DDFD1350FB0135F96EC20FDFF8A181BF1B21CE49B7ABC4746155A560F417F
E3A60697CDAD47578430FE93F3ACB45B1698577870AC0E23CC8F65A5FE9ABD00
4BD9EECF04868480C689D1F4C59CC5BFA61A362B2250FA41EC78F302F14A6935
B8FCBC6E5AE0AC63AB55EBE80AA594F1C27E2610D9D94E1A283040E40D34A48F
F1C91A449B9D325DA9CD5407CDECFF1403FCF5D9F07E12FB96D6CA50DB5024A0
25A937A4538869768A32E17F36E9FB3494FFAAD76DFC3A0C9D91CB040B39F12D
BC1AD883FB04E174C2644CD820C75C576A4DF008C77250754831F18F80C0AF10
61A36E88E633D54094CFDB643D8B069E28FE49A6C0851167D085437E0BF759A1
C65AD058FAE6BBF34DFD0E3057645517D525EFCC1E560043A423B7991035F80D
E5D867CE3DFD17CF04FECF64B5121874A33863199B08FB5AB83759A0D6ECCE6F
F1D1B6ADF2CF0E2E0E886B546C5F02FBDEB13097E00732C3853253C322C17D0B
51359FB565BBD5278357D7C02DD8E6DDC6D2B50677B05E07BA4D9FA1D2FE87F4
697D41DC422DBBF6C424AFD2E59F946E4482EC9909331CDEC781082E29CDE9E3
E5F6DE759736748872CCE46B9FD23FEDB3C172507E4FCE859DA567B65952C989
27540E57CE2E202348A293CA5C0DAD34ED900ED29D79063A88F8E2E793CEBEB5
29D60D1D746A9E502A4389E2822C594AB050B8F483C8E056328E6C98235B490E
41026091FA933A917E5A149A2B1635545ED0D3622E814D2E9082BC0CCD31BC29
2DDC7310CF328508BC4C925ADF507F168CEE0F4BD0DEA9A841EEFF06E7D3C90C
ABD9E113DCB2A86999A55CAA164A742FD031A65C15E93FE9982B3E788FA7B44D
CF7DA72999BD022DE5C2F3A2F7F7312A451728393B9D4623F68CB0A1DC33DF44
56055C250095B58DEC55C0A7B4988219F96AAD547189BB7028E32AC1902F0C8A
902E77143D190387235991874BE44FBAC7AED2240680D8C27E2EC2E938F262A9
3B105022AB69BA15DAFBC55E8A2863C69EFB65C9806DFDD60F8C1A8F40CD205B
C537BAF664D258C37075CB5695725956E9A16FC60D9129F882FCD021BF33CEEA
429F69820C5E004705D06D23B43DD0D9A8BB3CDA7C65164CE424273D435645D1
53DC2CF66C68C921A358521925BF1A4B3CC7F495F94C8C0031B24A8ED1D3849C
2FBD979890415923BBCEB51E6110166D3F91C17C38207E7C79FEE9B30A9D8F22
6F8D1F0A76C1D48A7B83C3E22C2AACCD5597A4669D9BB2F7D5087F3BF41175DB
11B211771A5F2B664F0AC483AA933B9976A1884111930AD5C08EF49BB60447EA
52FEF05799368B9CCDDFD4EAD1187DEDA7CA6B5A3EFD4A6DCDBE982153C5C7C7
7EB9805C5446CB532816806CCEFA571F2F7E74518A2CC6EBF5E7A65736C4142D
8652C1D7DAB43FF111CF51A064E1F58BA6A661A632271713AC176EE47B6310AC
5A4015272B802D6878DDA99AF85E946E565E9B2FB5771E2B069B4C5F9153F221
DBABA9E16BE2D5A3B927D0C83A8905332531D80C85F6B665825D669CA4C45245
C44A672D62A4008620F3B8EC735B400966844B1BA21E850C777E257370E2D27D
299827C4FF12D85D3A3C9333835032F10C7F0357470D43E3F45BBE84B16402EE
8AEEA198C5B19D143B96535C17B44C190333A8DEDA8EA1DEE63749A93E147907
3A0F0380B4C0BB0CBBBDEB38123007BA2991309A88F5BEE68EC4310726C16AE0
0EB4B81B20B3BC6D5CD913DC9839AE7E96CAB92B286D1807E3197FDC78936F24
49C69B85859CDC1B57E6092198DFA93998522E2E0CBE1D200A34FD4654282F52
DBB81C0BADED6F2889AC1F16E7C858C28B675DE63B3C4B2DE886080146DB4064
C38E0A2B56388F003A44C45C966DB1793F67FA31B9B8342F3A019A7D047FF801
F776AC884A9C729771F1CA1C271B0BA9663E88DC153D74F37A4EE8DACDBC577D
5DAED49CFB7A03C9B7C4615E33F8B45C69F24123ACB99F2C72AD8F3769036C4F
163503E155581E1C5B28026378393E5FDDC3E1B8AE667001A443CE1E32DBF4CC
DDD0C3DB8C3954632B94E72166037E8D888FC24DED012E5E72E3AC2BA7EF1E0E
F2F862919EF17811F3692E144EAB031342FA4EE2856B8D514AEBB83F6F2AD9B5
98BDB5BB859F3A512A65FA3ADBABD25E3282ADA8CDA9210C77928617446677A7
3DEBE6F91D704A74A301061E38E57953724D460BBDB54D7947BBF11CA27EA6DD
E0D083B19BFB4E9231075E868156AA4C8C2D4E72651234ADF6EB0FED816262D8
34E7633D278A65AA50C371C2C28B348B3426E2FC6F8ECEC7FF88823E417007A1
822AC7FA0DE4FF5597C8133832876E131630152745BDB3D29C242BCA6A560961
01DE58D42ABEFC3096B946CB14044B3C2E535BC03B3FE103DDE9DAB8F8A6B322
18795458FF7C6634813B4B4AD421D71D8EB69C9D8BBAE6CAF0E17E1701E547C9
4C4DA341ED39954D446F45B108597056326BAD581A486470FD93E1F0EB429363
5563B71BC179DDFE80D8D2FDF6DAB97F3BB2266C20F3EA5572831B1087C654AB
242C29CBC648C3109C51DEC8AF5C45D91A988D1F3C2AE319D938031067A18DAC
E942F1E08A035CAAA4C7765C842C2F1264332F3A54250075514A01F69AA52BC4
ABAC6C2E8FCEFC87ACA7616C121AE1AB73A4F16AB67EE1564D71BC20257B66AF
FE62C8148C4AB925D81F6DF2EF9EAA6D268B1E43B3156CCAC87BE30CEF59859D
02F779FBE8C7206C92F8E55C830CB5521D60F8533FCC3262A7A2D7716D14AAF2
C1061D9C72FD61F6F0578F46132FB6A9656010B6C353F90C4CFFA5FD928EE3D1
215DEF64BD2A28239E2AB147C3470FD69B5428E39088F9A0C33C2C35E1376C05
A10F44E6576EC7399D156088389E70429F646F57F74820FBC651B24E80FC72A8
27F19D07752575DB47F866DBF0D6DF3BCF3921E9BDC7A2F4EB7D367138B86265
EC1D7C3FE2F845A067A1B0A794C9F55AF7C375CB186D7F93ADDD0F6FBCCB84BC
A26FC4F6CD12E0BC35B7F269CE0E766C762F81AF137DF9CC16ABD4CD0D30FD17
46739E44B7B8C280AF33ACC841BFB85F09672B49E88D7A7EF01DE52B6270973E
38C739C9BD317EE8FA5574F1734A66338C56F96F5D601C0661853C491830615E
195CC00CAA96F4CFD105A1ED7F442E22D9E0ED6D0A06CEB26778ADED62ACD882
7859A339F8BD67B22B83B1805220B5A8988F25E87A1B5E782F16EEF97E5933EC
C49FBF643EBAE76DD4B1E4C31108473C7168C10241B0FAE83890B4746F64BFF6
A20854FAA0A98BC9F9FD42D29C2E34E4F941458D9561FA42A3C6A9C7A8CB09DC
DD1A24E4B6CF2F98431410CA470ECFD2C2A17993F3ED0B3BEB475890F2E170C4
004B1CF57522E284AC2CA5573215BE5C6910F523459602EC6A180AA2C7E1BC54
7C16967C6797094B9EA55E7317AD4A70F81DB59580C1A565D77B5A97D261E430
8126B647BC83CFF08746FE7515F6A96527D59C2154254C1FE3904364B021F150
D553B9A75564A3924D8B0E557FB32A4A280A1E262B8E9EB19EBF27DD02940868
2A7F06ECD8BEE9487AFFC8BBADA3BDF47DE8FC623CF8511755DE6E323ABE0B9E
DD1ABD92D2A7EBD109E7F61C0690CDA203A011E2D4721D3ACFB4EB373C12A5B6
2BA341363C7E82D9666FD695466ECACADA25FC5396D2F7CEEA4F6B03609DB7B3
046EDDBE9A4FDB1D31A447D3C063D976FD42FE49DED69453ADF12072F08EB432
BFFC4B5DB530603FF445F5B3E278846094774B6E343182C5B6AF73E5C0CB90B8
EBD9F6A1979D8DDFF57BA056F5AE58D8472C2CDC859189300667B2B9151F5F19
6A32652B92425976F729BDA158DC72F33E3F9A8AAEFF90713153014E340456A0
BE9A812AC053112CA9D00AD0C953AE63BF6D11D3C187C2106C77559288E7D9D4
364A5B461A7821296BC8EDB9D5E54078C71455A3C17A03048779C863A60B1926
CD8C91F3AFC2B4BD48437C1FB9A50C46B170B76B25EB949FC9BDAB780289611A
0F21E1B61FBF03B21911E3663BB1C0D1A076B5F1DBFAF8CD841D8F40DCF23DF3
82C501E3ED2F791E49BFE0D6CAD21A4EBB7796A679D44FB2CB1DCA4FFC5A9898
26102CB37094F2494AA75C4FC4D9A25B45A9208FEE3A783915A8627D57EEC7D4
181C2CB0FAB9475DAA6920A7A01E00E2FE442B373D42A1C5234A148563688D8E
93011D0A54E436C4C3D2A8473F1C1AD2F0B9D485BF0A2D3B18AAA136718DF94F
53FE07C9F39155082DA1770A37AE06B34FB9DBD6A34C68B3AD6DA0DFCFE49DE9
66FBD607F6005CF7EED9DFC1CFAE79817C9B20A2DC6A1C07BB21CB0FBD0D141F
E150A2E9949666AA65952830564FFD40C88F85B512F9B16E5F9A1376FD893927
561F57F631DB84C599022C0D6F443098737E100271867EE8DC54EEE6F9D35BDA
459761233B6B87DBD5E95824DAC0BC9AA912320FEF1CD6CEAE764FC664029C17
D565C440512A2B2803EA4B0DE48A2C5F5F42BD0134C040ACE2264FC63227BDB5
22EF0B1BF3987874BFF7AD2A5CD7B12BC5DEE2BF2067910F770C8A9C9CF91614
299A84F46CC6DD0F3A16E04282E4B77FD328D453DCB8C87EC68E69881A0FB99A
E11A38CBCA99E9F9540B94997774F2B1924B43276241BB099259974A7D82A553
3631521A20553981E819BBF030B95438EA76084B6663EA1D4FC6C862C87D80A4
57A5302A798C4D97D60D6380EB3A4EFFFB3A14A35B57E5D0B5D6FD014CC62BF4
CEFE81B15D1D5C6DF6386DFE17956F9A8A89F52A982C0CFCA7E4D4D5933FEA77
51BA9B4490F7215276C26CF53A95652858DDE917E1F263CDB1D71907BBA17F2C
C3E0F5D61914FF16B6464513632A5539EF383273F0477A9FF401A6B34F8E079C
5FF03BC855E58267C8E8822812E31EBF9A857F191B2A8262B8CCF459B4DC3677
22450CA073CBAD7FE9751D6FEA25AE759C82A608C4BF891B59AD64452C43940D
10AD9A15D74EABF9B6959A432386246860ED61B98FBB76FFB97FA1B530965471
D606DED9E0F31E885EB8633AB42C34A7932A77E6C4F539B8BCC60B1853E7020D
38D3F819DD2A9C794710115EED4C787D87797DF0788FE5290E011A949189F391
F6276E2CABE08743C6B8F6B26D5CE350021394716612115829AAF36F9FB97D8B
9B93059BF9C25E63653FBC52C3073BC2B5DD0502A05776E52BFB239647B76893
DC14B03DCCEC89B5C3103B05418635BBBE93042BE39F7F4BB351AD774360CFF5
B5D3ABC190B186BB7DC7F8AA3302052E433EF0216C0DBCD9523AC233DE427517
10CEAC3E2785D93570358B730530D1CFF8B244CE8BA2139572504940C75F5BFF
2E458263E9DD186275361993455959D0B0BFE5A4BB1DEA5A877CCC6254511BE7
56693591AC7A768187B315CD6EA548BE7D2720EAA92DCCE264D55418065B7ACA
FCA0CB7AC6DF64D10AC5CC5BB32CBA67C75E0326F87228B470C41CF6524A1E13
593F751AA6FCF270FFE0BB2F0684373ECB135061361930D6253771986DE521F6
2BF9DEE488D3544C5746704676DE2516FD681B7A9EA2DBD59B519522C3092561
2F862AB6508651E9CCEF824B5FADEC3DAFE5C14F92E8097A99296C4B74951437
DE19324D1B542DD22A06754D9F9AE066A7801464BFBC770B346D97D799644421
3972D169E59D19B3B7A618ED0BF6D0BFF6B96583DC430D6AF65E904A3D59DF13
D29D8BE394F8CC4B50A2418C44357DF43810BAA50B05BF92A46152A52798A7CA
34CEBC7D4C2E1F85618EC5B78FD6C64C8FD5A5B6F6D666DA60E80BC4BAE50EC8
ED8EAB95F83FA51DF621C6693677DE32BB23BB6ECB72E1246A0F6F09C8F38A1C
8BB180F8001650513790815A6085C6BD91B9C8B4ECE3CAD238C231BFC3B4433D
A17840E676ED2EA92C61FDA5FD4BC9C8E6E1531A94D44ED16B916F3FAF3D3C9F
FEAF66629E9B931DC380AF180427178E74D3AA5FFD70265235C289534AD65E20
9ACEE4D4B772F49558BFE675D7198AA28EDE0D9C92E39DA2299E12C69431AC2C
42A737EE0F4784B14FD544C70F4520E5CE6BBECECB5CB3CC4F85C8A7F259198C
40F8686E98953A2AF1A7E6B48A40513F9A9583B5504518448053F35CAF8BFAA9
EA20DDD8A0E49FA5B084AF43B318FAF385F34D685151939FD2784DCF97994476
D85DE98CBBA0D7F6FAAED2A6ABE14AAA2AB954E2A223DC22F3D268DB1B85D7F1
69575F3513CA99951A18614BCD54A8AA1AF324D723870087B92E05EAEE2081C6
97F00B590361056DE780C33D0290CF66F257E223C416138FE974C66A267A6C85
49E0584019749B81C5DFB8E0B6947F1A81B02AFAEFEEBD02273E6072C22F581E
1D9A10B55628ED03736FAA03854784C252A50085F1C008D56527B4C2E2FAA0A4
2C9E9871368E653A0B16356CE0FBFED150EEBDC2CC0E26953789F92F15AE9C19
B29AF6EC0A4593782A599B1207F7EFA824D8E5C2C5DDA6C0E18DD3A2A6A0ED9E
F3EE7FAA86EF319435FFC8189C5C3E15A6D3F668B023E631D146CC8D5C9E6041
AD6B07C7533F6AB848E296D83A2B530C44B73A5D2B48A554C5351714C28B6615
915C568F3A5CCA67ADF530C8EFAEA9E2209449D2B2747D0AC3B46F44C36B0FF2
73FF3E2BD4C9161EC444D8FD38DCFA35DF7D956CE18CED82532C40EFA25C2EC1
F658A0DEDDC8EA3AE9CF3B12889AB6CD0BDE7D23097A973B643F3DE8E9725842
0F9BA2C6507593A4182FFFA4677118F9ED22231833854AC07B89EF057B14C6AC
C71F9711BA4338F2A2AD57113BCD97515C0029E6301B381FA916F09145968713
2A3B6E3B5AE6BCCD2299EE5D96C837B338DAFD6F09402D77F23710DEE673E177
D6279AAAE2811E499CBEDA614CAF79588063FA5C12788CE21FC60A9895B6CF39
1CAB3B0F645A4734C6C3BC5D039C24DD75C7A4F038C15E7007939680912BE2B3
4B8CBD7B6D29896E8D1807150C2282F11907185DF77B2944603F47BEFFD06259
B256CD1A08F6239DEC7BD65B80885F9C3574339A61253C3234BF4437065EA511
7DB4A12E0531143C7167C7A9D37C948DDA434783CA0D396D75D56EFA3BE861CA
A13E235F1B8C2881C0B52D16CB8A3B5D19876C87443D4FCA898BAA2CFAD86790
6F9DEE56903E2328CE42EB67DEC31843EA48E836855AE7C74C090752B25DA0DC
94DFF8D61E8EBF0F48376866D3EA576DC9D69B534F1B19467814866CBE7D71FB
30791F330A89AEAE4CB727E6597658C78B949656BF0F9CC52C222CF9D48E139E
CE3C73DDC06CFA2AC17072EA6C9F52E42816C85AF34C21215E7736C76B0EB28F
D20AF1751A73E37D5200F5A88456988EE1F5618CA219210BE64E980388B8DFDB
208F9A03918BDD84149AFFDDCE09BF6427B2F8548CFFBE68A638B9E695AB10A9
E7D237479C11AFFB4E0DB4C05C4DBD8EB7DE66C5F0C41B72060988FE907F39B3
2311E77C15A1987EF8D90A43B1264FD925BA93416B6758A775994B31A6E70BB9
82DE2C8C9866B0758ACA2BDB1D1704126A91336AE0F1949EC98D25446A16DC3E
8342512037BDA6A10F31684E6F9DB11050CAD52CBFC3F35536792B4B0B798D32
70D95EC7BB9535B37D9CE3F879A008370991FFDBE371A11C207A6BEFAEE5B5DC
2E85CC3EDE680A5503825275546BAC2C8C19D915CFC9411456EAEF936E748463
DD5415502465A5E91FA40107930115A36CB55B1E1F9799B64A0040350429D010
0B13051EBDE34A75C83AF12491182C60459327E48CF0D64EF0A67054E79CDB17
26E14D14B5E61F44EC98D24F5F8B79E2845FC8D3153882E8533907B4E3183BB4
E8E44384858EE84C8CD3C7BDA8DB9E837F46BE011881A0399094EA57A95F2B64
842C6ADE3A551A3A9627A69CA20FAED6CF8CD4865EA2911010EE5358D0B14480
645C2BF98461B9E078615BEA476C882334E2DCA3A690BEBEE934B656CA295FA7
5F6180374285DC5A71AE26CF27B7C73368D0132E486CB74DC7629DC34F45CC0F
6CC85C210CE0F4360C9AA23560E42A9195633319A9A5683CEAE73550C1F09B5E
B76E067CB30A5924657DB61DB04622C72133D43D184760557405DE5F31C9B8DD
5270A72725DB46EA6B672C3C04B92BECCE114006FFFDF09FB92E17D06B177CC0
7FDE84BF7783FAFACED5AF8394E866FC3E00A6FF112032EBDA13ECDBFC72E8A9
93077C0B2501E3EE45CA1E36570539BF9B5C30B050605CB66F364269E0224F36
127A3C7B726EA6A4E12CB39087EB7F0C5246659B54F139D5896171F9DE85EE64
0457EB1F469F3A96C8971387E2515C37A1576B16C8EE3572575115A8CEA551FD
01F6716852D98BC39C255D742B730DEB95C3E341165A0DED743E064A53A585C8
FDB18CAA1C365467D507822E00ACA9FB9C61F83821A9B9E3DD6842E8ACA8344B
A09C11832BC3BD698D5F8AAEF537E8C1DBDD2B8E1FAD11EA29D11FA3B633710A
16475269A7C75A5AA94F1C5A86F9BDDB2548C632E05E2E074B3D3BE38D9FB4F9
6C2C54591C85D37B452B2AFCBF54EDE62CBD809856489B4197F60D3490DEC852
DA11E15D135E7C5993472E8E1B01705929B1296FE3E5417D1B42DD280C1FF9A8
8656A37EC8F5AC93116497041C6BF0D15CEBFD453284869BED4F94E7563964A2
37BC0486514F6952862F207136E1E16B417CD91182935B9F6428D10FB47BD327
A0077445CDB8780B50B4F8ACE22418F08755BD425D00D1D5B53BF96E8EB3425E
1A21651EDC81F29E5C65FA4171D91244D6037DDAEB189C46C85D6730B638D83F
0E0D3810AE056394B9C6828E3EC7D6E0124451E5EB5735617E77A7A77D8E2372
3BB19C1FD74FD12D112FC2BB60E3AB70FBF2CEC84B04C87E046D425D2C67D68D
0A054F8A3F6FFF35E294B3EE43660E70D22D1F9F4F865B7E3D72C20C810E322F
11492FE2D4693CDDA5926F4D6643907C7BB9C1C33201992AE7D8504DA6969404
0C31D89E20D57AA519EF8BCBDE3BD02298A14179427F686D6732B0207BF2EA03
7C2DB56FD83E21697AB4E1A2823F700B1C09CD8636BF2A7EC76F68BABFE10623
9FD2E6AE808F396005C6579BB4DF8648816BCF88A70CAF5EC7CFBE0B449B36D3
E7BEB20EBF8B0C8051A74F17AB580D17254110FD66CA4270624BFE5463C9619F
0CE9C32FDDC8E49EDA5C0F364A3EBF0190AA3C4B274C6F87275174AFF884BDF2
5ACEEC41FB0FB0997E8B27C6FED2F36F996FCDD71BC3367222DACFCBFC314132
A6E1F7BF9B8732AFEC47260A1A82EDC3B435D3C702BD1F3C2F97EC61A7B2A396
F556CEDCDE7F118B940EC9EB09B7828F6F9373F36D58E3C31053F06BB749E5D2
8459F244BB14BE54EF9272387869490FF59B2305D283194E6130278BD81474E4
210BBF2A27A45319EEC63E83E8C4D22645CA877B904365E777168208846DE6DF
5647C4ECA98AA3DC8D105C6FF81D879B8FB69CF024993C21B36D1867476E9F81
24003F416EFE2B26ADCD63C024BBCBBCC2368BCEC8694E6A0B98964315A6A891
9AF9532F2F291D16CF2AF0C37C02B7D4F751D5B36EB4C3F758CBEC06477557B1
57F86990D94315B8BB9BE6B02D6702AE0CEE7E42D8729ABF685B8E7B217E0592
0845B1336412B2C52801F3EEBE505A88993F0C653363AE973B043C1118AAAB75
D7C53BE6F91A51DB1A4993C597B3C3CF9B71BE069AE6C02C235F150DEA693AAB
DF93A29DAB1853CF4BE61BAB8E8D584DDBEE40EDE711C3A950740E1785496649
D494173FD2C1D9FCCFCC2379218F896382C83BDDF4D036FCCA467A4902DA6786
1807739D997036A3237F22FF47B876544A1FB49C4967E48737C8A154579281A0
AE30699325554AED7E16FAF5BEA21714735BA2759FF48783B3D163F256D3367E
374F3F810E5AA1C8073294BADE15CBF83B08758889F9AA6CA79AF3912F5F7F69
B34991F91966343B1D0EDB4AF78E071B8B156BEF5AA239673BB3B8D170F09928
5AF8FD6C067B4D9C3093DBBA8438BAC41C96358F80C495BF386CC6C2E28A7756
A8F38F414073A717990809AA20E3D74CC6E31D125DA2082CA4564D9A9C694C3F
67333F67E46477AF18A76EB8B9CF4A7CB728E8240452D59AFDC6D7392B793B7B
51CD17BAA6D8A01454D7F7DAB964C5C98865D16E3C334D18657068BE6DD059D7
49F24E05F55A61F2B7294058ADD257432A2C6BE882BAAC74F3BF89884DF1DBD7
19419689E7F2ACA8DA3625DBDA1B37558100D7CDB9E8D77F3817FD9E46D9D2DE
27A8D70F37EBCB66312D9149E34B46F2BBAB0AD5859E3924B6F9F8A02B7C530B
ED308ACAE831268636888C829F7CA4E12ECF5E07CEABEC4A88A6C6B1084D6ED8
79306B707887BEB3F685B182706F5DB4C7C4BC2FB81A7D0BD5B56B8367213AD4
6896D73E66529674C2C38187D3A496A32A73E7114B7162A5B7D993F6C4428650
65FEF13C93342D8D9B2754E5FD7261C0A90C6BD0FE3777573D11601E80F10993
2672FEF5DC93413AFE34BFFF06865E6AB02030232B5E61303913EA0DA48B6306
8B09EA4D72F88EEFCB10CA128E8B9B506AC9CB4E4BC1D7C2248A8F6E5A7695FE
9B0A14BAE73207965E598F74CB2EB01D308F05EB3DD4660F232DC9056DCF091B
57985C030232802AA55B37B8D7E0F3BBFFA6AC69E929C9C8D2BF03FC28AB3E74
BBFBF648513051AF6CC03AD96375E26186EC4DECE98D248CBD036D15005CD5F8
18AC124735824C36E2632E7C191E1B82519C0E6A1E2F65EBAF0E711ACD7364EF
68630BC5832FF6F152653FF7CF22185E14A8EA95562A28D21A7DEC485B61CFF9
74F66FCDE67BAEBC7F43467AEC10F1F8FAC9AAB39662E6D137560A8363F8D0B4
81C5BAAAE67903B8C5CC99288333EFCB59D45103580B05250FD1A19F653E1C4B
3E5E110CC197D3B823987DA518AEC5BF13D680C4AF3C44DDFFF7849E543606B7
950534C0CF81E855595E9DE98751633860C670D5EB5B0EE7F8FB839DEAEA332C
A6D50B5A6E3B5AE6BCCD2299EB27740066250CDE481FC1CF9AEB3E5290EBDAEE
7B4CF36FA677A6C7698BE818F8CAB1E5814F42AF9F33CC262DD87C658D1F5D0D
E996DF7CBC31B7786181598F4D274B753AA96964C322AA902CA9B845FA32BFA1
8CEF212F223EE5704A54A0C35419488621772891A55CD1BACCDFFCC4D6BB35D5
1408908E431027EAB34A6A7986FD48F23259381FAF2AC65ED5B4DCB28E710728
38A52FBC0F756EE16AD04E695E743D90CB6393029AE2DD01869E38CAEFA8349A
3FC0F865201B6D7A28813F1B3849E1959EBF034CD9229C35435A1868407C562A
E2A9B800166E14E49DF641E5329F12B7A6EAA46FD10E97CC6C8E0C6A580B922B
646A540990E47895E1708ADB70A87420937E3A0A2AE8A4A6E9122029EEDDDA7F
8C429DA8FDC93A8B3B0AF586B1FCA6BDDEA4DBC1D3EFD9D3DC09B0EB1E55A12D
05357147EBFCF3DF609592059D29B5A297D3569BA09D4A527F57953D13CC2E18
C36C85A5269D430E1EADDCB4D98A4E95D561FD65F538691771A2E5D60CDB044F
DA615DC17C49C8D6AD2340658D3C43D48332557F2A2C5B1D4C7843B594E364E1
C6A52A770879E95EB9529102867B0759177C5AB8EBA204E79282FD826F0D8840
7D80CBC9BB83A8F5A98020F16CA1DC4862F2A08A353CFBA3D2B0ED48F7A53546
ADCED149E37D022ECACDA453CEDADF7DA37290E52022C6ECF2B6799495678E68
8AD693615FC31B51AC3CA27BD8EC613A794CBAE36680C8D5220BCBEE2FD7F4CA
C30FD02E29614A738922118956ED25B9774B087E7A058880D65626FC412784A6
F429C6150043A8A2F3A439D400BA9927A0CB91502AD71C832632869B1EC53221
E058BA4978B6430F1EB2CD8C4AA2D77A27472602CFAA6572CA15A2686520406C
DCD4CA868205360B4DF2AA9ACF29EDBBE3391C806F4D9FCE4620DEBF13C06BDA
90B0490DDB9EE0C034ED030F7D5E773F9748B2C609154A98607F126A4273F859
722FCC80FC409540B0728EB2092867AD4CB254FB13D6B76D62965428D8C7376E
A0135B3091D5AD12B3B2AF6DEBF9FACADD91869D80BF1813BEA4219AC8F62BCE
A71D24A66E042901FB403E7FA0C2A9D2D8A1DB3CCE94621D887049EAE586CC30
1E096522EF08FAB8E87C06E219F50B8724CAA2A975DC809F6CB6DEB008E68533
98ABF6013214B8156B5888842E4D8DDA982BD7F9B06295B9323F20FD199CF8B1
0203F02E33C33061A18902ECDE38613D7672C8A8C3A7822EA43389FC2F51068A
391B726824C12B4F78B3DDE2964DACA3BA7F4BC41EC4C5F00C3433FEE1043983
7D776708072BAB975F6E877F32D559FAFB60DEE4FAC281310F1028CAD90893B7
3F5B05307A1474D1B596111025342D4E34D3632F4886F1BFC70B920162116E76
26AD544DF2BEF9992E26185AA4369F6023737475540D4F779553D36C91F19D7C
9C2FD5D005610105D01495B0A411B670140BC2B33A075FC846BD27113BFB474B
547A140A3E0E103A82E02FA89FF972BC5A0C99F64DD1F19CCEE424F2A74695F5
05A86EA4384297C5DA4D3B7A322EA873005876FB8064DED65F17656403490D28
6E9BAE8A5BBF820BF13FAAAA92BEE7AF0A023A674DC4D0449593A9824AD094C5
2626FFB7790F0759A6EB373238EE577D1A6A1227CB44031BEE831DB8140F85EE
9339B6CFFDD15C17BF3423AAE59167DBBB0401D26E7E8A48FF239A92E108B33C
EC6B64662F2C6FE90C2EFF7EB681E31818215C6962A4EB1AC6E39AC0D01CB649
13816D47A93A61C5880D07E4F3B56AEF2B7DC8C577FA39A5FE3F34371E57B38B
A1A3086D12713BB865334AF3375185F0829250D0C7AA121F460BFDD260A72B6A
820C4B39BAB5FFC71AD833282B8FFDD87BCFCADD9D0E2A90E24EF5CED2B29430
96210E0C18C2EE8B52E090C47C131C3C1BB4CC81CCB5B58EA58686D3297452A2
EAAA0F2EBB493FC733087EB04D7F12B955E615228AA33245F40E890BD1AA6FAC
4DDD5D00020641B65D5B1048ACD101CF9F3AB5D0F5C1ACA12B3CE585802E356B
5FB17FD4B37F9CDA26D34FE0E01E0170C584E37D68DC184B612ABECA60EC220E
C474BA3A83168B57E61542E42C262B9AB7749DE5726B27D9FE328E52B9632D92
86B7952194696D11BB1A56450E510BBAFB5072F512AC73249E58329DFEA83F90
6F9895D895E335C176E091A72C48E2B492976DFEF2F6D67AFF800D88EAC2C22E
187A472868F4E281136C7644DFE730D9CFC91AF752E3D01139F78FC87D73CE20
B21C773D9556E4807F801A4DCBB34ECC9AC1473CA70AB69341BFC03D17FCF815
228CCE7BAF3C044C283E1F2875598C96E29D7FF5DD61A515C825B5CE6C692FAB
2136F4ED7DFD99F00FB8F6384EA4EA21C5FA1ADAFB15BC77E3A46B560FD53E96
C3A14FCAECBBD4869F10CC8057AD89177F7E8D8831AD0764C27346F1C289ADC9
60B586332ACD0B224FA3B209DEB8638D2FF2EA2A6D507C43A76F7077C518B2FA
F6AE1EC6BF79955370A71CE617693B47C8CF842509807867F1459FC787454D7F
8071673EA6D637988772C96F4F83CF3DBF41C8A67BDD44B012E42FC44EF9C2E6
0578D7C877F01C0A52ABCA1FF8965EBE25F47298EF8A43F29F41534FD3FC5B40
41CA2AAF3E2C0205462E8516FDB8775DE699511AB733E2582EC305E90770E7D5
D46E02EF9E27CA8FBB0860E8246DDE64B37AA8D3A78516B3015A0C75521F622F
46D5CC11217FEC282BC143488EB47F962F391B40186A44B509457C0A90D526C2
49819B191D9FC06C7B362FA3B533310F7713D1E809B4760826BC5E00B61B387B
AB04CD80969E1487A8BB23F4C61A6E6A1E8CC28CE92823001D1D7031B9A78292
6E869D44E64416CF6D405ECED0C88D2F5E83E018B49FDC5898F2F7D099812A62
34986C049FBDBDFAC3425BB8BE0B18F9B89D0EBE8B1B08FA77D2EB809C3F13B5
3A4CF3ABC3DBB5B7053E85890335EE522E1CD654EB67A29BD0D45522A7550ED2
D41999B33B1AA6FE98EDE8494E2DE3F828A7DA8AA954A113A73E33A0FE250FDE
20FBB9D3C0E188509E114EAE177E0C1E6F000CDB0A3FA902FEA51CDCB55FD656
2BA1E6911AD7DD4FA1E3E7E79867D85FF9D49E94B4A82C38E382D45D2C331F46
99EC05BB80F6EF121B7B0CA1791366E8B3C649439EDD6D8AA234EC218B14A97A
3FF77E4F1D084F9BDFF1F247724A287504B983536FCF91DD0ECB14C543E7D1DD
D16104C1C31AC72BF8FFF1521C6A86BA7D3516D00ADCB69590DC9D7AA8D42F2F
228A65E54919FC8B276DE2D53B5DED60CEC4F2B81A0852BE4C3CE1961AE26AC9
EA20FF75B536810B727CD6AE8142BF18188D966D0FD6AF6840D8791FA6B5D466
B157E916220D07ECFFF8C8E9855C6919D078231B836C6689C5B7D6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (anatomy-function.dvi)
@start /Fa 138[441 262 1[309 3[450 8[371 101[{
 AutoEnc_76gpa573ui462u7ov2a5iiyo2h ReEncodeFont }5 830.22
/LinLibertineT rf /Fb 134[418 1[571 1[433 255 293 296
1[406 1[430 650 3[229 3[333 406 323 397 403 55[260 254
40[{ AutoEnc_7grukw4ftfgbx23ssythacmksg ReEncodeFont }17
830.22 /LinLibertineTI rf /Fc 130[400 1[400 1[400 2[400
400 400 1[400 2[400 400 1[400 400 1[400 1[400 400 400
400 400 400 400 9[400 7[400 2[400 2[400 400 400 1[400
400 6[400 400 400 5[400 2[400 1[400 3[400 400 1[400 400
40[{ AutoEnc_ai7sfw4ev2rw3jfdy46mgxdj6f ReEncodeFont }37
664.176 /DejaVuSansMono rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 TeXcolorgray 0 20700 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 20700
a 0 20700 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 20700 a 0 20700 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 20700 a 0 20700 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0
20700 a 0 20700 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 20700 a 0 20700 22971 20700 v 22971
20700 a
currentpoint grestore moveto
 22971 20700 a 1350 20700 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1350 20700 a -14369
x Fc(void)400 b(blink)p 1 0 0 TeXcolorrgb 399 w(\()p
0 TeXcolorgray(int)f(count)p 1 0 0 TeXcolorrgb(\))h({)p
0 TeXcolorgray 0 TeXcolorgray 2531 8031 a(for)g(\(int)f(i=0;)h
(i<count;)f(i++\))g({)h(;)p 0 TeXcolorgray 0 TeXcolorgray
3712 9731 a(digitalWrite\(redLED,)e(HIGH\);)p 0 TeXcolorgray
0 TeXcolorgray 3712 11431 a(delay\(250\);)p 0 TeXcolorgray
0 TeXcolorgray 3712 13132 a(digitalWrite\(redLED,)g(LOW\);)p
0 TeXcolorgray 0 TeXcolorgray 3712 14832 a(delay\(250\);)p
0 TeXcolorgray 0 TeXcolorgray 2531 16532 a(})p 0 TeXcolorgray
1 0 0 TeXcolorrgb 2531 18233 a(return;)p 0 TeXcolorgray
1 0 0 TeXcolorrgb 1350 19933 a(})p 0 TeXcolorgray 1350
20700 a
tx@Dict begin  PutEnd  end
 1350 20700 a 1350 20700 a
tx@Dict begin { 97.56383 2330.70747 } PutCoor PutBegin  end
 1350 20700 a 0 0 1
TeXcolorrgb -481 20504 a Fb(r)-7 b(eturn)208 b(typ)6
b(e)p 0 TeXcolorgray 1350 20700 a
tx@Dict begin  PutEnd  end
 1350 20700 a 1350 20700
a
tx@Dict begin {  /ifStar false def /radius1 45.0 def /radius2 60.0
def /Alpha 195.12932 1810.36314 0.0 1810.36314 3 -1 roll sub 3 1 roll
exch sub atan def gsave STV CP T /ps@rot Alpha 0 add 90 sub def grestore
/Length 195.12932 1810.36314 0.0 1810.36314 Pyth2 def /Left { Length
0.5  mul } bind def /Right { Length Left sub } bind def /Width 1.6
def /pop4 { pop pop pop pop } def gsave [ Alpha cos Alpha sin Alpha
sin neg Alpha cos 195.12932 1810.36314 ] concat 0 0 moveto 0 radius2
neg radius2 radius2 neg radius2 arcto pop4 Left radius2 sub radius1
sub 0 rlineto Left radius2 neg Left radius2 radius1 add neg radius1
arcto pop4 currentpoint /y@Label ED /x@Label ED Left radius2 neg Left
radius1 add radius2 neg radius1 arcto pop4 Right radius2 sub radius1
sub 0 rlineto Length radius2 neg Length 0 radius2 arcto pop4 Length
radius2 Width add neg Length radius2 sub radius2 Width add neg radius2
arcto pop4 Right radius2 sub radius1 sub neg 0 rlineto Left radius1
add Width radius1 add radius2 add neg radius1 90 180 arc Left radius1
sub Width radius1 add radius2 add neg radius1 0 90 arc Left radius2
sub radius1 sub neg 0 rlineto radius2 Width neg radius2 270 180 arcn
0 0 lineto gsave ifStar { 0 0 1  setrgbcolor }{ 0  setgray } ifelse
fill grestore 4.33546 setlinewidth 0 0 1  setrgbcolor stroke 0 0 moveto
grestore /Dh radius1 radius2 add Width add def 195.12932 1810.36314
0.0 1810.36314 3 -1 roll sub 3 1 roll exch sub 0.5  mul exch 0.5  mul
195.12932 1810.36314 3 -1 roll add Dh Alpha cos mul sub 0.0 sub 3 1
roll add Dh Alpha sin mul add 0.0 add exch  108.405 div exch 108.405
div exch    108.405 mul exch 108.405 mul exch  } PutCoor PutBegin 
end
 1350 20700 a 1350 20700 a
tx@Dict begin ps@rot  RotBegin  end
 1350 20700 a 1350 20700 a
tx@Dict begin RotEnd  end

1350 20700 a 1350 20700 a
tx@Dict begin  PutEnd  end
 1350 20700 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 4.33546 SLW 0 0 1  setrgbcolor  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  5.42058 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 97.56383 2319.8663 97.56383
1907.92863   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 5.42058 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1350 20700 a
tx@Dict begin { 363.1574 2157.2588 } PutCoor PutBegin  end
 1350 20700 a 0 0 1 TeXcolorrgb 442 20695
a Fb(name)p 0 TeXcolorgray 1350 20700 a
tx@Dict begin  PutEnd  end
 1350 20700 a
1350 20700 a
tx@Dict begin {  /ifStar false def /radius1 60.0 def /radius2 60.0
def /Alpha 487.8225 1810.36314 238.49066 1810.36314 3 -1 roll sub 3
1 roll exch sub atan def gsave STV CP T /ps@rot Alpha 0 add 90 sub
def grestore /Length 487.8225 1810.36314 238.49066 1810.36314 Pyth2
def /Left { Length 0.5  mul } bind def /Right { Length Left sub } bind
def /Width 1.6 def /pop4 { pop pop pop pop } def gsave [ Alpha cos
Alpha sin Alpha sin neg Alpha cos 487.8225 1810.36314 ] concat 0 0
moveto 0 radius2 neg radius2 radius2 neg radius2 arcto pop4 Left radius2
sub radius1 sub 0 rlineto Left radius2 neg Left radius2 radius1 add
neg radius1 arcto pop4 currentpoint /y@Label ED /x@Label ED Left radius2
neg Left radius1 add radius2 neg radius1 arcto pop4 Right radius2 sub
radius1 sub 0 rlineto Length radius2 neg Length 0 radius2 arcto pop4
Length radius2 Width add neg Length radius2 sub radius2 Width add neg
radius2 arcto pop4 Right radius2 sub radius1 sub neg 0 rlineto Left
radius1 add Width radius1 add radius2 add neg radius1 90 180 arc Left
radius1 sub Width radius1 add radius2 add neg radius1 0 90 arc Left
radius2 sub radius1 sub neg 0 rlineto radius2 Width neg radius2 270
180 arcn 0 0 lineto gsave ifStar { 0 0 1  setrgbcolor }{ 0  setgray
} ifelse fill grestore 4.33546 setlinewidth 0 0 1  setrgbcolor stroke
0 0 moveto grestore /Dh radius1 radius2 add Width add def 487.8225
1810.36314 238.49066 1810.36314 3 -1 roll sub 3 1 roll exch sub 0.5
 mul exch 0.5  mul 487.8225 1810.36314 3 -1 roll add Dh Alpha cos mul
sub 0.0 sub 3 1 roll add Dh Alpha sin mul add 0.0 add exch  108.405
div exch 108.405 div exch    108.405 mul exch 108.405 mul exch  } PutCoor
PutBegin  end
 1350 20700 a 1350 20700 a
tx@Dict begin ps@rot  RotBegin  end
 1350 20700 a 1350
20700 a
tx@Dict begin RotEnd  end
 1350 20700 a 1350 20700 a
tx@Dict begin  PutEnd  end
 1350 20700 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 4.33546 SLW 0 0 1  setrgbcolor  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  5.42058 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 363.1574 2146.4193 363.1574
1907.92863   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 5.42058 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1350 20700 a
tx@Dict begin { 796.77739 1983.8118 } PutCoor PutBegin  end
 1350 20700 a 0 0 1 TeXcolorrgb -737 20504
a Fb(parameter\()-10 b(s\))p 0 TeXcolorgray 1350 20700
a
tx@Dict begin  PutEnd  end
 1350 20700 a 1350 20700 a
tx@Dict begin {  /ifStar false def /radius1 60.0 def /radius2 60.0
def /Alpha 1019.00632 1810.36314 574.54681 1810.36314 3 -1 roll sub
3 1 roll exch sub atan def gsave STV CP T /ps@rot Alpha 0 add 90 sub
def grestore /Length 1019.00632 1810.36314 574.54681 1810.36314 Pyth2
def /Left { Length 0.5  mul } bind def /Right { Length Left sub } bind
def /Width 1.6 def /pop4 { pop pop pop pop } def gsave [ Alpha cos
Alpha sin Alpha sin neg Alpha cos 1019.00632 1810.36314 ] concat 0
0 moveto 0 radius2 neg radius2 radius2 neg radius2 arcto pop4 Left
radius2 sub radius1 sub 0 rlineto Left radius2 neg Left radius2 radius1
add neg radius1 arcto pop4 currentpoint /y@Label ED /x@Label ED Left
radius2 neg Left radius1 add radius2 neg radius1 arcto pop4 Right radius2
sub radius1 sub 0 rlineto Length radius2 neg Length 0 radius2 arcto
pop4 Length radius2 Width add neg Length radius2 sub radius2 Width
add neg radius2 arcto pop4 Right radius2 sub radius1 sub neg 0 rlineto
Left radius1 add Width radius1 add radius2 add neg radius1 90 180 arc
Left radius1 sub Width radius1 add radius2 add neg radius1 0 90 arc
Left radius2 sub radius1 sub neg 0 rlineto radius2 Width neg radius2
270 180 arcn 0 0 lineto gsave ifStar { 0 0 1  setrgbcolor }{ 0  setgray
} ifelse fill grestore 4.33546 setlinewidth 0 0 1  setrgbcolor stroke
0 0 moveto grestore /Dh radius1 radius2 add Width add def 1019.00632
1810.36314 574.54681 1810.36314 3 -1 roll sub 3 1 roll exch sub 0.5
 mul exch 0.5  mul 1019.00632 1810.36314 3 -1 roll add Dh Alpha cos
mul sub 0.0 sub 3 1 roll add Dh Alpha sin mul add 0.0 add exch  108.405
div exch 108.405 div exch    108.405 mul exch 108.405 mul exch  } PutCoor
PutBegin  end
 1350 20700 a 1350 20700 a
tx@Dict begin ps@rot  RotBegin  end

1350 20700 a 1350 20700 a
tx@Dict begin RotEnd  end
 1350 20700 a 1350 20700 a
tx@Dict begin  PutEnd  end
 1350
20700 a @beginspecial @setspecial
  tx@Dict begin STP newpath 4.33546 SLW 0 0 1  setrgbcolor  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  5.42058 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 796.77739 1983.8118 796.77739
1907.92863   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 5.42058 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1350 20700 a
tx@Dict begin {  /ifStar false def /radius1 30.0 def /radius2 60.0
def /Alpha 1669.43631 216.81 1669.43631 1647.75565 3 -1 roll sub 3
1 roll exch sub atan def gsave STV CP T /ps@rot Alpha 0 add 90 sub
def grestore /Length 1669.43631 216.81 1669.43631 1647.75565 Pyth2
def /Left { Length 0.5  mul } bind def /Right { Length Left sub } bind
def /Width 1.6 def /pop4 { pop pop pop pop } def gsave [ Alpha cos
Alpha sin Alpha sin neg Alpha cos 1669.43631 216.81 ] concat 0 0 moveto
0 radius2 neg radius2 radius2 neg radius2 arcto pop4 Left radius2 sub
radius1 sub 0 rlineto Left radius2 neg Left radius2 radius1 add neg
radius1 arcto pop4 currentpoint /y@Label ED /x@Label ED Left radius2
neg Left radius1 add radius2 neg radius1 arcto pop4 Right radius2 sub
radius1 sub 0 rlineto Length radius2 neg Length 0 radius2 arcto pop4
Length radius2 Width add neg Length radius2 sub radius2 Width add neg
radius2 arcto pop4 Right radius2 sub radius1 sub neg 0 rlineto Left
radius1 add Width radius1 add radius2 add neg radius1 90 180 arc Left
radius1 sub Width radius1 add radius2 add neg radius1 0 90 arc Left
radius2 sub radius1 sub neg 0 rlineto radius2 Width neg radius2 270
180 arcn 0 0 lineto gsave ifStar { 0 0 1  setrgbcolor }{ 0  setgray
} ifelse fill grestore 4.33546 setlinewidth 0 0 1  setrgbcolor stroke
0 0 moveto grestore /Dh radius1 radius2 add Width add def 1669.43631
216.81 1669.43631 1647.75565 3 -1 roll sub 3 1 roll exch sub 0.5  mul
exch 0.5  mul 1669.43631 216.81 3 -1 roll add Dh Alpha cos mul sub
0.0 sub 3 1 roll add Dh Alpha sin mul add 0.0 add exch  108.405 div
exch 108.405 div exch    108.405 mul exch 108.405 mul exch  } PutCoor
PutBegin  end
 1350 20700 a 1350
20700 a
tx@Dict begin ps@rot  RotBegin  end
 1350 20700 a 1350 20700 a
tx@Dict begin RotEnd  end
 1350 20700 a 1350 20700
a
tx@Dict begin  PutEnd  end
 1350 20700 a @beginspecial @setspecial
  tx@Dict begin STP newpath 4.33546 SLW 0 0 1  setrgbcolor  end
 
@endspecial
1350 20700 a
tx@Dict begin { 1777.84131 953.96431 } PutCoor PutBegin  end
 1350 20700 a 0 0 1 TeXcolorrgb -332 x Fb(statement\()g
(s\))1350 21414 y(wrapp)6 b(e)g(d)208 b(in)g(braces)p
0 TeXcolorgray 1350 20700 a
tx@Dict begin  PutEnd  end
 1350 20700 a 1350 20700 a
tx@Dict begin {  /ifStar false def /radius1 20.0 def /radius2 40.0
def /Alpha 1777.84131 249.33182 1777.84131 401.09816 3 -1 roll sub
3 1 roll exch sub atan def gsave STV CP T /ps@rot Alpha 0 add 90 sub
def grestore /Length 1777.84131 249.33182 1777.84131 401.09816 Pyth2
def /Left { Length 0.5  mul } bind def /Right { Length Left sub } bind
def /Width 1.6 def /pop4 { pop pop pop pop } def gsave [ Alpha cos
Alpha sin Alpha sin neg Alpha cos 1777.84131 249.33182 ] concat 0 0
moveto 0 radius2 neg radius2 radius2 neg radius2 arcto pop4 Left radius2
sub radius1 sub 0 rlineto Left radius2 neg Left radius2 radius1 add
neg radius1 arcto pop4 currentpoint /y@Label ED /x@Label ED Left radius2
neg Left radius1 add radius2 neg radius1 arcto pop4 Right radius2 sub
radius1 sub 0 rlineto Length radius2 neg Length 0 radius2 arcto pop4
Length radius2 Width add neg Length radius2 sub radius2 Width add neg
radius2 arcto pop4 Right radius2 sub radius1 sub neg 0 rlineto Left
radius1 add Width radius1 add radius2 add neg radius1 90 180 arc Left
radius1 sub Width radius1 add radius2 add neg radius1 0 90 arc Left
radius2 sub radius1 sub neg 0 rlineto radius2 Width neg radius2 270
180 arcn 0 0 lineto gsave ifStar { 0 0 1  setrgbcolor }{ 0  setgray
} ifelse fill grestore 4.33546 setlinewidth 0 0 1  setrgbcolor stroke
0 0 moveto grestore /Dh radius1 radius2 add Width add def 1777.84131
249.33182 1777.84131 401.09816 3 -1 roll sub 3 1 roll exch sub 0.5
 mul exch 0.5  mul 1777.84131 249.33182 3 -1 roll add Dh Alpha cos
mul sub 0.0 sub 3 1 roll add Dh Alpha sin mul add 0.0 add exch  108.405
div exch 108.405 div exch    108.405 mul exch 108.405 mul exch  } PutCoor
PutBegin  end

1350 20700 a 1350 20700 a
tx@Dict begin ps@rot  RotBegin  end
 1350 20700 a 1350 20700 a
tx@Dict begin RotEnd  end
 1350
20700 a 1350 20700 a
tx@Dict begin  PutEnd  end
 1350 20700 a @beginspecial @setspecial
  tx@Dict begin STP newpath 4.33546 SLW 0 0 1  setrgbcolor  end


@endspecial 1350 20700 a
tx@Dict begin { 1875.4068 325.215 } PutCoor PutBegin  end
 1350 20700 a 0 0 1 TeXcolorrgb
237 x Fa(r)-7 b(eturn)208 b Fb(statement)p 0 TeXcolorgray
1350 20700 a
tx@Dict begin  PutEnd  end
 1350 20700 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
